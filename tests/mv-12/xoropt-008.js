#! /bin/env node
// we may need require to load re2
import { createRequire } from 'node:module';
const require = createRequire(import.meta.url);
//
// Generated by JSON Model Compiler version 2
// see https://github.com/clairey-zx81/json-model
//
import * as runtime from "json_model_runtime"
const JSON_MODEL_VERSION = "2";

var check_model_map = new Map()

// object .'|'.2
function _jm_obj_0(val, path, rep)
{
    if (! (Object.prototype.toString.call(val) === '[object Object]'))
    {
        rep !== null && rep.push(["not an object [.'|'.2]", path])
        return false;
    }
    let res;
    let must_count = 0;
    for (const [prop, pval] of Object.entries(val))
    {
        let lpath_0 = path ? path.concat([prop]) : null;
        if (prop == "a")
        {
            // handle must a property
            must_count += 1;
            // .'|'.2.a
            res = Array.isArray(pval);
            if (res)
            {
                for (let arr_0_idx = 0; arr_0_idx < pval.length; arr_0_idx++)
                {
                    let arr_0_item = pval[arr_0_idx]
                    let arr_0_lpath = (path ? lpath_0 : null) ? (path ? lpath_0 : null).concat([arr_0_idx]) : null;
                    // .'|'.2.a.0
                    res = ((typeof arr_0_item === 'number' || arr_0_item instanceof Number) && Number.isInteger(arr_0_item)) && arr_0_item >= 0;
                    if (! res)
                    {
                        rep !== null && rep.push(["not a 0 strict int [.'|'.2.a.0]", ((path ? lpath_0 : null) ? arr_0_lpath : null)])
                    }
                    if (! res)
                    {
                        break;
                    }
                }
            }
            if (! res)
            {
                rep !== null && rep.push(["not array or unexpected array [.'|'.2.a]", (path ? lpath_0 : null)])
            }
            if (! res)
            {
                rep !== null && rep.push(["invalid mandatory prop value [.'|'.2.a]", (path ? lpath_0 : null)])
                return false;
            }
        }
        else
        {
            rep !== null && rep.push(["unexpected prop [.'|'.2]", (path ? lpath_0 : null)])
            return false;
        }
    }
    if (must_count != 1)
    {
        if (rep !== null)
        {
            if (! val.hasOwnProperty("a"))
            {
                rep !== null && rep.push(["missing mandatory prop <a> [.'|'.2]", path])
            }
        }
        return false;
    }
    return true;
}

// object .'|'.1
function _jm_obj_1(val, path, rep)
{
    if (! (Object.prototype.toString.call(val) === '[object Object]'))
    {
        rep !== null && rep.push(["not an object [.'|'.1]", path])
        return false;
    }
    let res;
    let must_count = 0;
    for (const [prop, pval] of Object.entries(val))
    {
        let lpath_1 = path ? path.concat([prop]) : null;
        if (prop == "a")
        {
            // handle must a property
            must_count += 1;
            // .'|'.1.a
            res = (typeof pval === 'string' || pval instanceof String);
            if (! res)
            {
                rep !== null && rep.push(["unexpected string [.'|'.1.a]", (path ? lpath_1 : null)])
            }
            if (! res)
            {
                rep !== null && rep.push(["invalid mandatory prop value [.'|'.1.a]", (path ? lpath_1 : null)])
                return false;
            }
        }
        else
        {
            rep !== null && rep.push(["unexpected prop [.'|'.1]", (path ? lpath_1 : null)])
            return false;
        }
    }
    if (must_count != 1)
    {
        if (rep !== null)
        {
            if (! val.hasOwnProperty("a"))
            {
                rep !== null && rep.push(["missing mandatory prop <a> [.'|'.1]", path])
            }
        }
        return false;
    }
    return true;
}

// object .'|'.0
function _jm_obj_2(val, path, rep)
{
    if (! (Object.prototype.toString.call(val) === '[object Object]'))
    {
        rep !== null && rep.push(["not an object [.'|'.0]", path])
        return false;
    }
    let res;
    let must_count = 0;
    for (const [prop, pval] of Object.entries(val))
    {
        let lpath_2 = path ? path.concat([prop]) : null;
        if (prop == "a")
        {
            // handle must a property
            must_count += 1;
            // .'|'.0.a
            res = (typeof pval === 'boolean' || pval instanceof Boolean);
            if (! res)
            {
                rep !== null && rep.push(["not a bool [.'|'.0.a]", (path ? lpath_2 : null)])
            }
            if (! res)
            {
                rep !== null && rep.push(["invalid mandatory prop value [.'|'.0.a]", (path ? lpath_2 : null)])
                return false;
            }
        }
        else
        {
            rep !== null && rep.push(["unexpected prop [.'|'.0]", (path ? lpath_2 : null)])
            return false;
        }
    }
    if (must_count != 1)
    {
        if (rep !== null)
        {
            if (! val.hasOwnProperty("a"))
            {
                rep !== null && rep.push(["missing mandatory prop <a> [.'|'.0]", path])
            }
        }
        return false;
    }
    return true;
}

// check $ (.)
function json_model_1(val, path, rep)
{
    let res;
    // ^ to | based on distinct types on same property
    // .
    res = Object.prototype.toString.call(val) === '[object Object]';
    if (! res)
    {
        rep !== null && rep.push(["unexpected type [.'|']", path])
    }
    if (res)
    {
        // .'|'.0
        res = _jm_obj_2(val, path, rep);
        if (! res)
        {
            rep !== null && rep.push(["unexpected element [.'|'.0]", path])
        }
        if (! res)
        {
            // .'|'.1
            res = _jm_obj_1(val, path, rep);
            if (! res)
            {
                rep !== null && rep.push(["unexpected element [.'|'.1]", path])
            }
            if (! res)
            {
                // .'|'.2
                res = _jm_obj_0(val, path, rep);
                if (! res)
                {
                    rep !== null && rep.push(["unexpected element [.'|'.2]", path])
                }
            }
        }
        if (res)
        {
            if (rep !== null) rep.length = 0
        }
        else
        {
            rep !== null && rep.push(["no model matched [.'|']", path])
        }
    }
    return res;
}


var initialized = false

// differed module initializations
export function check_model_init()
{
    if (! initialized)
    {
        initialized = true;
        runtime.jm_set_rx(RegExp)
        check_model_map.set("", json_model_1)
    }
}

// differed module cleanup
export function check_model_free()
{
    if (initialized)
    {
        initialized = false;
    }
}

export function check_model(val, name, rep)
{
    let checker = check_model_map.get(name)
    if (checker === undefined)
        throw `no checker for "${name}"`
    let path = rep !== null ? [] : null

    return checker(val, path, rep)
}

// possibly run as main based on a guess
import main from "json_model_runtime/main.js"

if (import.meta.url.endsWith(process.argv[1]))
    main(check_model_init, check_model, check_model_free)
