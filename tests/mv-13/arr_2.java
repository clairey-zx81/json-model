//
// Generated by JSON Model Compiler version 2
// see https://github.com/clairey-zx81/json-model
//

import json_model.*;
import java.util.Map;
import java.util.Set;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Iterator;
import java.util.regex.Pattern;
import java.util.regex.Matcher;

@SuppressWarnings("unchecked")
public class arr_2 extends ModelChecker
{
    static public final String VERSION = "2";

    public Map<String, Checker> arr_2_map_pmap;

    // check $ (.)
    public boolean json_model_1(Object val, Path path, Report rep)
    {
        boolean res;
        // .
        res = json.isArray(val) && json.arrayLength(val) == 2;
        if (res)
        {
            Path lpath_0 = new Path(0, path);
            // .0
            res = json.isBoolean(json.arrayItem(val, 0));
            if (! res)
            {
                if (rep != null) rep.addEntry("not a bool [.0]", (path != null ? lpath_0 : null));
            }
            if (res)
            {
                lpath_0 = new Path(1, path);
                // .1
                res = json.isInteger(json.arrayItem(val, 1)) && json.asLong(json.arrayItem(val, 1)) >= 0;
                if (! res)
                {
                    if (rep != null) rep.addEntry("not a 0 strict int [.1]", (path != null ? lpath_0 : null));
                }
            }
        }
        if (! res)
        {
            if (rep != null) rep.addEntry("not array or unexpected array [.]", path);
        }
        return res;
    }
    

    public void init(JSON json)
    {
        if (!initialized)
        {
            try {
            arr_2_map_pmap = new HashMap<String, Checker>();
            arr_2_map_pmap.put("", new Checker() { public boolean call(Object o, Path p, Report r) { return json_model_1(o, p, r);} });
                super.init(json);
            }
            catch (Exception e) {
                throw new Error("cannot initialized model checker: " + e);
            }
        }
    }

    public void free()
    {
        if (initialized)
        {
            super.free();
            arr_2_map_pmap = null;
        }
    }

    public Checker get(String name)
    {
        return arr_2_map_pmap.get(name);
    }

    public Set<String> models()
    {
        return arr_2_map_pmap.keySet();
    }

    static public void main(String[] args) throws Exception
    {
        ModelChecker checker = new arr_2();
        Main.main("arr_2", checker, VERSION, args);
    }
}
