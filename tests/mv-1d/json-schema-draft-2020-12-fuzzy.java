//
// Generated by JSON Model Compiler version 2
// see https://github.com/clairey-zx81/json-model
//

import json_model.*;
import java.util.Map;
import java.util.Set;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Iterator;
import java.util.regex.Pattern;
import java.util.regex.Matcher;

@SuppressWarnings("unchecked")
public class json_schema_draft_2020_12_fuzzy extends ModelChecker
{
    static public final String VERSION = "2";

    Set<Object> _jm_cst_0_set;
    Map<String, Checker> json_model_13_map_pmap;
    Map<String, Checker> json_model_15_map_pmap;
    public Map<String, Checker> json_schema_draft_2020_12_fuzzy_map_pmap;

    // check $URI-REFERENCE (.'$URI-REFERENCE')
    public boolean json_model_3(Object val, Path path, Report rep)
    {
        // .'$URI-REFERENCE'
        boolean res = json.isString(val);
        if (! res)
        {
            if (rep != null) rep.addEntry("unexpected string [.'$URI-REFERENCE']", path);
        }
        return res;
    }

    // object .'$core'.'$defs'
    public boolean _jm_obj_0(Object val, Path path, Report rep)
    {
        if (! json.isObject(val))
        {
            if (rep != null) rep.addEntry("not an object [.'$core'.'$defs']", path);
            return false;
        }
        boolean res;
        Iterator<String> prop_loop = json.objectIterator(val);
        while (prop_loop.hasNext())
        {
            String prop = prop_loop.next();
            Object pval = json.objectValue(val, prop);
            Path lpath_1 = new Path(prop, path);
            // handle other props
            // .'$core'.'$defs'.''
            res = json_model_17(pval, (path != null ? lpath_1 : null), rep);
            if (! res)
            {
                if (rep != null) rep.addEntry("unexpected $Schema [.'$core'.'$defs'.'']", (path != null ? lpath_1 : null));
                return false;
            }
        }
        return true;
    }

    // object .'$core'.'$vocabulary'
    public boolean _jm_obj_1(Object val, Path path, Report rep)
    {
        if (! json.isObject(val))
        {
            if (rep != null) rep.addEntry("not an object [.'$core'.'$vocabulary']", path);
            return false;
        }
        boolean res;
        Iterator<String> prop_loop = json.objectIterator(val);
        while (prop_loop.hasNext())
        {
            String prop = prop_loop.next();
            Object pval = json.objectValue(val, prop);
            Path lpath_2 = new Path(prop, path);
            if (rt.is_valid_url(prop))
            {
                // handle 1 key props
                // .'$core'.'$vocabulary'.'$URI'
                res = json.isBoolean(pval);
                if (! res)
                {
                    if (rep != null) rep.addEntry("not a bool [.'$core'.'$vocabulary'.'$URI']", (path != null ? lpath_2 : null));
                    return false;
                }
            }
            else
            {
                if (rep != null) rep.addEntry("unexpected prop [.'$core'.'$vocabulary']", (path != null ? lpath_2 : null));
                return false;
            }
        }
        return true;
    }

    // check $core (.'$core')
    public boolean json_model_4(Object val, Path path, Report rep)
    {
        // .'$core'
        if (! json.isObject(val))
        {
            if (rep != null) rep.addEntry("not an object [.'$core']", path);
            return false;
        }
        boolean res;
        Iterator<String> prop_loop = json.objectIterator(val);
        while (prop_loop.hasNext())
        {
            String prop = prop_loop.next();
            Object pval = json.objectValue(val, prop);
            Path lpath_0 = new Path(prop, path);
            if (prop.compareTo("$id") == 0)
            {
                // handle may $id property
                // .'$core'.'$id'
                res = json_model_3(pval, (path != null ? lpath_0 : null), rep);
                if (! res)
                {
                    if (rep != null) rep.addEntry("unexpected $URI-REFERENCE [.'$core'.'$id']", (path != null ? lpath_0 : null));
                    if (rep != null) rep.addEntry("invalid optional prop value [.'$core'.'$id']", (path != null ? lpath_0 : null));
                    return false;
                }
            }
            else if (prop.compareTo("$ref") == 0)
            {
                // handle may $ref property
                // .'$core'.'$ref'
                res = json_model_3(pval, (path != null ? lpath_0 : null), rep);
                if (! res)
                {
                    if (rep != null) rep.addEntry("unexpected $URI-REFERENCE [.'$core'.'$ref']", (path != null ? lpath_0 : null));
                    if (rep != null) rep.addEntry("invalid optional prop value [.'$core'.'$ref']", (path != null ? lpath_0 : null));
                    return false;
                }
            }
            else if (prop.compareTo("$defs") == 0)
            {
                // handle may $defs property
                // .'$core'.'$defs'
                res = _jm_obj_0(pval, (path != null ? lpath_0 : null), rep);
                if (! res)
                {
                    if (rep != null) rep.addEntry("unexpected element [.'$core'.'$defs']", (path != null ? lpath_0 : null));
                    if (rep != null) rep.addEntry("invalid optional prop value [.'$core'.'$defs']", (path != null ? lpath_0 : null));
                    return false;
                }
            }
            else if (prop.compareTo("$anchor") == 0)
            {
                // handle may $anchor property
                // .'$core'.'$anchor'
                res = json_model_3(pval, (path != null ? lpath_0 : null), rep);
                if (! res)
                {
                    if (rep != null) rep.addEntry("unexpected $URI-REFERENCE [.'$core'.'$anchor']", (path != null ? lpath_0 : null));
                    if (rep != null) rep.addEntry("invalid optional prop value [.'$core'.'$anchor']", (path != null ? lpath_0 : null));
                    return false;
                }
            }
            else if (prop.compareTo("$schema") == 0)
            {
                // handle may $schema property
                // .'$core'.'$schema'
                res = json.isString(pval) && rt.is_valid_url(json.asString(pval));
                if (! res)
                {
                    if (rep != null) rep.addEntry("unexpected $URL [.'$core'.'$schema']", (path != null ? lpath_0 : null));
                    if (rep != null) rep.addEntry("invalid optional prop value [.'$core'.'$schema']", (path != null ? lpath_0 : null));
                    return false;
                }
            }
            else if (prop.compareTo("$comment") == 0)
            {
                // handle may $comment property
                // .'$core'.'$comment'
                res = json.isString(pval);
                if (! res)
                {
                    if (rep != null) rep.addEntry("unexpected string [.'$core'.'$comment']", (path != null ? lpath_0 : null));
                    if (rep != null) rep.addEntry("invalid optional prop value [.'$core'.'$comment']", (path != null ? lpath_0 : null));
                    return false;
                }
            }
            else if (prop.compareTo("$dynamicRef") == 0)
            {
                // handle may $dynamicRef property
                // .'$core'.'$dynamicRef'
                res = json_model_3(pval, (path != null ? lpath_0 : null), rep);
                if (! res)
                {
                    if (rep != null) rep.addEntry("unexpected $URI-REFERENCE [.'$core'.'$dynamicRef']", (path != null ? lpath_0 : null));
                    if (rep != null) rep.addEntry("invalid optional prop value [.'$core'.'$dynamicRef']", (path != null ? lpath_0 : null));
                    return false;
                }
            }
            else if (prop.compareTo("$vocabulary") == 0)
            {
                // handle may $vocabulary property
                // .'$core'.'$vocabulary'
                res = _jm_obj_1(pval, (path != null ? lpath_0 : null), rep);
                if (! res)
                {
                    if (rep != null) rep.addEntry("unexpected element [.'$core'.'$vocabulary']", (path != null ? lpath_0 : null));
                    if (rep != null) rep.addEntry("invalid optional prop value [.'$core'.'$vocabulary']", (path != null ? lpath_0 : null));
                    return false;
                }
            }
            else if (prop.compareTo("$dynamicAnchor") == 0)
            {
                // handle may $dynamicAnchor property
                // .'$core'.'$dynamicAnchor'
                res = json_model_3(pval, (path != null ? lpath_0 : null), rep);
                if (! res)
                {
                    if (rep != null) rep.addEntry("unexpected $URI-REFERENCE [.'$core'.'$dynamicAnchor']", (path != null ? lpath_0 : null));
                    if (rep != null) rep.addEntry("invalid optional prop value [.'$core'.'$dynamicAnchor']", (path != null ? lpath_0 : null));
                    return false;
                }
            }
            else
            {
                if (rep != null) rep.addEntry("unexpected prop [.'$core']", (path != null ? lpath_0 : null));
                return false;
            }
        }
        return true;
    }

    // check $meta (.'$meta')
    public boolean json_model_5(Object val, Path path, Report rep)
    {
        // .'$meta'
        if (! json.isObject(val))
        {
            if (rep != null) rep.addEntry("not an object [.'$meta']", path);
            return false;
        }
        boolean res;
        Iterator<String> prop_loop = json.objectIterator(val);
        while (prop_loop.hasNext())
        {
            String prop = prop_loop.next();
            Object pval = json.objectValue(val, prop);
            Path lpath_3 = new Path(prop, path);
            if (prop.compareTo("title") == 0)
            {
                // handle may title property
                // .'$meta'.title
                res = json.isString(pval);
                if (! res)
                {
                    if (rep != null) rep.addEntry("unexpected string [.'$meta'.title]", (path != null ? lpath_3 : null));
                    if (rep != null) rep.addEntry("invalid optional prop value [.'$meta'.title]", (path != null ? lpath_3 : null));
                    return false;
                }
            }
            else if (prop.compareTo("default") == 0)
            {
                // handle may default property
                // .'$meta'.default
                res = true;
            }
            else if (prop.compareTo("examples") == 0)
            {
                // handle may examples property
                // .'$meta'.examples
                res = json.isArray(pval);
                if (! res)
                {
                    if (rep != null) rep.addEntry("not array or unexpected array [.'$meta'.examples]", (path != null ? lpath_3 : null));
                    if (rep != null) rep.addEntry("invalid optional prop value [.'$meta'.examples]", (path != null ? lpath_3 : null));
                    return false;
                }
            }
            else if (prop.compareTo("readOnly") == 0)
            {
                // handle may readOnly property
                // .'$meta'.readOnly
                res = json.isBoolean(pval);
                if (! res)
                {
                    if (rep != null) rep.addEntry("not a bool [.'$meta'.readOnly]", (path != null ? lpath_3 : null));
                    if (rep != null) rep.addEntry("invalid optional prop value [.'$meta'.readOnly]", (path != null ? lpath_3 : null));
                    return false;
                }
            }
            else if (prop.compareTo("writeOnly") == 0)
            {
                // handle may writeOnly property
                // .'$meta'.writeOnly
                res = json.isBoolean(pval);
                if (! res)
                {
                    if (rep != null) rep.addEntry("not a bool [.'$meta'.writeOnly]", (path != null ? lpath_3 : null));
                    if (rep != null) rep.addEntry("invalid optional prop value [.'$meta'.writeOnly]", (path != null ? lpath_3 : null));
                    return false;
                }
            }
            else if (prop.compareTo("deprecated") == 0)
            {
                // handle may deprecated property
                // .'$meta'.deprecated
                res = json.isBoolean(pval);
                if (! res)
                {
                    if (rep != null) rep.addEntry("not a bool [.'$meta'.deprecated]", (path != null ? lpath_3 : null));
                    if (rep != null) rep.addEntry("invalid optional prop value [.'$meta'.deprecated]", (path != null ? lpath_3 : null));
                    return false;
                }
            }
            else if (prop.compareTo("description") == 0)
            {
                // handle may description property
                // .'$meta'.description
                res = json.isString(pval);
                if (! res)
                {
                    if (rep != null) rep.addEntry("unexpected string [.'$meta'.description]", (path != null ? lpath_3 : null));
                    if (rep != null) rep.addEntry("invalid optional prop value [.'$meta'.description]", (path != null ? lpath_3 : null));
                    return false;
                }
            }
            else
            {
                if (rep != null) rep.addEntry("unexpected prop [.'$meta']", (path != null ? lpath_3 : null));
                return false;
            }
        }
        return true;
    }

    // check $content (.'$content')
    public boolean json_model_6(Object val, Path path, Report rep)
    {
        // .'$content'
        if (! json.isObject(val))
        {
            if (rep != null) rep.addEntry("not an object [.'$content']", path);
            return false;
        }
        boolean res;
        Iterator<String> prop_loop = json.objectIterator(val);
        while (prop_loop.hasNext())
        {
            String prop = prop_loop.next();
            Object pval = json.objectValue(val, prop);
            Path lpath_4 = new Path(prop, path);
            if (prop.compareTo("contentSchema") == 0)
            {
                // handle may contentSchema property
                // .'$content'.contentSchema
                res = json_model_17(pval, (path != null ? lpath_4 : null), rep);
                if (! res)
                {
                    if (rep != null) rep.addEntry("unexpected $Schema [.'$content'.contentSchema]", (path != null ? lpath_4 : null));
                    if (rep != null) rep.addEntry("invalid optional prop value [.'$content'.contentSchema]", (path != null ? lpath_4 : null));
                    return false;
                }
            }
            else if (prop.compareTo("contentEncoding") == 0)
            {
                // handle may contentEncoding property
                // .'$content'.contentEncoding
                res = json.isString(pval);
                if (! res)
                {
                    if (rep != null) rep.addEntry("unexpected string [.'$content'.contentEncoding]", (path != null ? lpath_4 : null));
                    if (rep != null) rep.addEntry("invalid optional prop value [.'$content'.contentEncoding]", (path != null ? lpath_4 : null));
                    return false;
                }
            }
            else if (prop.compareTo("contentMediaType") == 0)
            {
                // handle may contentMediaType property
                // .'$content'.contentMediaType
                res = json.isString(pval);
                if (! res)
                {
                    if (rep != null) rep.addEntry("unexpected string [.'$content'.contentMediaType]", (path != null ? lpath_4 : null));
                    if (rep != null) rep.addEntry("invalid optional prop value [.'$content'.contentMediaType]", (path != null ? lpath_4 : null));
                    return false;
                }
            }
            else
            {
                if (rep != null) rep.addEntry("unexpected prop [.'$content']", (path != null ? lpath_4 : null));
                return false;
            }
        }
        return true;
    }

    // check $unevaluated (.'$unevaluated')
    public boolean json_model_7(Object val, Path path, Report rep)
    {
        // .'$unevaluated'
        if (! json.isObject(val))
        {
            if (rep != null) rep.addEntry("not an object [.'$unevaluated']", path);
            return false;
        }
        boolean res;
        Iterator<String> prop_loop = json.objectIterator(val);
        while (prop_loop.hasNext())
        {
            String prop = prop_loop.next();
            Object pval = json.objectValue(val, prop);
            Path lpath_5 = new Path(prop, path);
            if (prop.compareTo("unevaluatedItems") == 0)
            {
                // handle may unevaluatedItems property
                // .'$unevaluated'.unevaluatedItems
                res = json_model_17(pval, (path != null ? lpath_5 : null), rep);
                if (! res)
                {
                    if (rep != null) rep.addEntry("unexpected $Schema [.'$unevaluated'.unevaluatedItems]", (path != null ? lpath_5 : null));
                    if (rep != null) rep.addEntry("invalid optional prop value [.'$unevaluated'.unevaluatedItems]", (path != null ? lpath_5 : null));
                    return false;
                }
            }
            else if (prop.compareTo("unevaluatedProperties") == 0)
            {
                // handle may unevaluatedProperties property
                // .'$unevaluated'.unevaluatedProperties
                res = json_model_17(pval, (path != null ? lpath_5 : null), rep);
                if (! res)
                {
                    if (rep != null) rep.addEntry("unexpected $Schema [.'$unevaluated'.unevaluatedProperties]", (path != null ? lpath_5 : null));
                    if (rep != null) rep.addEntry("invalid optional prop value [.'$unevaluated'.unevaluatedProperties]", (path != null ? lpath_5 : null));
                    return false;
                }
            }
            else
            {
                if (rep != null) rep.addEntry("unexpected prop [.'$unevaluated']", (path != null ? lpath_5 : null));
                return false;
            }
        }
        return true;
    }

    // check $format (.'$format')
    public boolean json_model_8(Object val, Path path, Report rep)
    {
        // .'$format'
        if (! json.isObject(val))
        {
            if (rep != null) rep.addEntry("not an object [.'$format']", path);
            return false;
        }
        boolean res;
        Iterator<String> prop_loop = json.objectIterator(val);
        while (prop_loop.hasNext())
        {
            String prop = prop_loop.next();
            Object pval = json.objectValue(val, prop);
            Path lpath_6 = new Path(prop, path);
            if (prop.compareTo("format") == 0)
            {
                // handle may format property
                // .'$format'.format
                res = json.isString(pval);
                if (! res)
                {
                    if (rep != null) rep.addEntry("unexpected string [.'$format'.format]", (path != null ? lpath_6 : null));
                    if (rep != null) rep.addEntry("invalid optional prop value [.'$format'.format]", (path != null ? lpath_6 : null));
                    return false;
                }
            }
            else
            {
                if (rep != null) rep.addEntry("unexpected prop [.'$format']", (path != null ? lpath_6 : null));
                return false;
            }
        }
        return true;
    }


    // check $simpleTypes (.'$simpleTypes')
    public boolean json_model_9(Object val, Path path, Report rep)
    {
        // .'$simpleTypes'
        boolean res = json.isScalar(val) && _jm_cst_0_set.contains(val);
        if (! res)
        {
            if (rep != null) rep.addEntry("value not in enum [.'$simpleTypes'.'|']", path);
        }
        return res;
    }

    // check $simpleTypesArray (.'$simpleTypesArray')
    public boolean json_model_10(Object val, Path path, Report rep)
    {
        // .'$simpleTypesArray'
        // .'$simpleTypesArray'.'@'
        boolean res = json.isArray(val);
        if (res)
        {
            int arr_0_idx = -1;
            Iterator<Object> arr_0_item_loop = json.arrayIterator(val);
            while (arr_0_item_loop.hasNext())
            {
                arr_0_idx++;
                Object arr_0_item = arr_0_item_loop.next();
                Path arr_0_lpath = new Path(arr_0_idx, path);
                // .'$simpleTypesArray'.'@'.0
                res = json_model_9(arr_0_item, (path != null ? arr_0_lpath : null), rep);
                if (! res)
                {
                    if (rep != null) rep.addEntry("unexpected $simpleTypes [.'$simpleTypesArray'.'@'.0]", (path != null ? arr_0_lpath : null));
                    break;
                }
            }
        }
        if (! res)
        {
            if (rep != null) rep.addEntry("not array or unexpected array [.'$simpleTypesArray'.'@']", path);
        }
        if (res)
        {
            long ival_0 = json.arrayLength(val);
            res = rt.array_is_unique(val, path, rep) && ival_0 >= 1;
            if (! res)
            {
                if (rep != null) rep.addEntry("constraints failed [.'$simpleTypesArray']", path);
            }
        }
        return res;
    }

    // check $stringArray (.'$stringArray')
    public boolean json_model_11(Object val, Path path, Report rep)
    {
        // .'$stringArray'
        // .'$stringArray'.'@'
        boolean res = json.isArray(val);
        if (res)
        {
            int arr_1_idx = -1;
            Iterator<Object> arr_1_item_loop = json.arrayIterator(val);
            while (arr_1_item_loop.hasNext())
            {
                arr_1_idx++;
                Object arr_1_item = arr_1_item_loop.next();
                Path arr_1_lpath = new Path(arr_1_idx, path);
                // .'$stringArray'.'@'.0
                res = json.isString(arr_1_item);
                if (! res)
                {
                    if (rep != null) rep.addEntry("unexpected string [.'$stringArray'.'@'.0]", (path != null ? arr_1_lpath : null));
                    break;
                }
            }
        }
        if (! res)
        {
            if (rep != null) rep.addEntry("not array or unexpected array [.'$stringArray'.'@']", path);
        }
        if (res)
        {
            res = rt.array_is_unique(val, path, rep);
            if (! res)
            {
                if (rep != null) rep.addEntry("constraints failed [.'$stringArray']", path);
            }
        }
        return res;
    }

    // check $nonNegativeInteger (.'$nonNegativeInteger')
    public boolean json_model_12(Object val, Path path, Report rep)
    {
        // .'$nonNegativeInteger'
        boolean res = ((json.isInteger(val) || (json.isDouble(val) && json.asDouble(val) == ((long) json.asDouble(val))))) && json.asNumber(val) >= 0;
        if (! res)
        {
            if (rep != null) rep.addEntry("not a 0 loose int [.'$nonNegativeInteger']", path);
        }
        return res;
    }

    // check json_model_13_map_const (.'$validation'.const)
    public boolean _jm_f_0(Object val, Path path, Report rep)
    {
        // .'$validation'.const
        return true;
    }

    // check json_model_13_map_dependentRequired (.'$validation'.dependentRequired)
    public boolean _jm_f_1(Object val, Path path, Report rep)
    {
        // .'$validation'.dependentRequired
        if (! json.isObject(val))
        {
            if (rep != null) rep.addEntry("not an object [.'$validation'.dependentRequired]", path);
            return false;
        }
        boolean res;
        Iterator<String> prop_loop = json.objectIterator(val);
        while (prop_loop.hasNext())
        {
            String prop = prop_loop.next();
            Object pval = json.objectValue(val, prop);
            Path lpath_8 = new Path(prop, path);
            // handle other props
            // .'$validation'.dependentRequired.''
            res = json_model_11(pval, (path != null ? lpath_8 : null), rep);
            if (! res)
            {
                if (rep != null) rep.addEntry("unexpected $stringArray [.'$validation'.dependentRequired.'']", (path != null ? lpath_8 : null));
                return false;
            }
        }
        return true;
    }

    // check json_model_13_map_enum (.'$validation'.enum)
    public boolean _jm_f_2(Object val, Path path, Report rep)
    {
        // .'$validation'.enum
        boolean res = json.isArray(val);
        if (! res)
        {
            if (rep != null) rep.addEntry("not array or unexpected array [.'$validation'.enum]", path);
        }
        return res;
    }

    // check json_model_13_map_exclusiveMaximum (.'$validation'.exclusiveMaximum)
    public boolean _jm_f_3(Object val, Path path, Report rep)
    {
        // .'$validation'.exclusiveMaximum
        boolean res = json.isNumber(val);
        if (! res)
        {
            if (rep != null) rep.addEntry("not a -1.0 loose float [.'$validation'.exclusiveMaximum]", path);
        }
        return res;
    }

    // check json_model_13_map_exclusiveMinimum (.'$validation'.exclusiveMinimum)
    public boolean _jm_f_4(Object val, Path path, Report rep)
    {
        // .'$validation'.exclusiveMinimum
        boolean res = json.isNumber(val);
        if (! res)
        {
            if (rep != null) rep.addEntry("not a -1.0 loose float [.'$validation'.exclusiveMinimum]", path);
        }
        return res;
    }

    // check json_model_13_map_maximum (.'$validation'.maximum)
    public boolean _jm_f_5(Object val, Path path, Report rep)
    {
        // .'$validation'.maximum
        boolean res = json.isNumber(val);
        if (! res)
        {
            if (rep != null) rep.addEntry("not a -1.0 loose float [.'$validation'.maximum]", path);
        }
        return res;
    }

    // check json_model_13_map_minimum (.'$validation'.minimum)
    public boolean _jm_f_6(Object val, Path path, Report rep)
    {
        // .'$validation'.minimum
        boolean res = json.isNumber(val);
        if (! res)
        {
            if (rep != null) rep.addEntry("not a -1.0 loose float [.'$validation'.minimum]", path);
        }
        return res;
    }

    // check json_model_13_map_multipleOf (.'$validation'.multipleOf)
    public boolean _jm_f_7(Object val, Path path, Report rep)
    {
        // .'$validation'.multipleOf
        boolean res = json.isNumber(val) && json.asNumber(val) > 0.0;
        if (! res)
        {
            if (rep != null) rep.addEntry("not a 1.0 loose float [.'$validation'.multipleOf]", path);
        }
        return res;
    }

    // check json_model_13_map_pattern (.'$validation'.pattern)
    public boolean _jm_f_8(Object val, Path path, Report rep)
    {
        // .'$validation'.pattern
        boolean res = json.isString(val);
        if (! res)
        {
            if (rep != null) rep.addEntry("unexpected string [.'$validation'.pattern]", path);
        }
        return res;
    }

    // check json_model_13_map_type (.'$validation'.type)
    public boolean _jm_f_9(Object val, Path path, Report rep)
    {
        // .'$validation'.type
        // .'$validation'.type.'|'.0
        boolean res = json_model_9(val, path, rep);
        if (! res)
        {
            if (rep != null) rep.addEntry("unexpected $simpleTypes [.'$validation'.type.'|'.0]", path);
        }
        if (! res)
        {
            // .'$validation'.type.'|'.1
            res = json_model_10(val, path, rep);
            if (! res)
            {
                if (rep != null) rep.addEntry("unexpected $simpleTypesArray [.'$validation'.type.'|'.1]", path);
            }
        }
        if (res)
        {
            if (rep != null) rep.clearEntries();
        }
        else
        {
            if (rep != null) rep.addEntry("no model matched [.'$validation'.type.'|']", path);
        }
        return res;
    }

    // check json_model_13_map_uniqueItems (.'$validation'.uniqueItems)
    public boolean _jm_f_10(Object val, Path path, Report rep)
    {
        // .'$validation'.uniqueItems
        boolean res = json.isBoolean(val);
        if (! res)
        {
            if (rep != null) rep.addEntry("not a bool [.'$validation'.uniqueItems]", path);
        }
        return res;
    }


    // check $validation (.'$validation')
    public boolean json_model_13(Object val, Path path, Report rep)
    {
        // .'$validation'
        if (! json.isObject(val))
        {
            if (rep != null) rep.addEntry("not an object [.'$validation']", path);
            return false;
        }
        Checker pfun;
        Iterator<String> prop_loop = json.objectIterator(val);
        while (prop_loop.hasNext())
        {
            String prop = prop_loop.next();
            Object pval = json.objectValue(val, prop);
            Path lpath_7 = new Path(prop, path);
            if ((pfun = json_model_13_map_pmap.get(prop)) != null)
            {
                // handle 20 may props
                if (pfun != null && ! (pfun.call(pval, (path != null ? lpath_7 : null), rep)))
                {
                    if (rep != null) rep.addEntry("invalid optional prop value [.'$validation']", (path != null ? lpath_7 : null));
                    return false;
                }
            }
            else
            {
                if (rep != null) rep.addEntry("unexpected prop [.'$validation']", (path != null ? lpath_7 : null));
                return false;
            }
        }
        return true;
    }

    // check $schemaArray (.'$schemaArray')
    public boolean json_model_14(Object val, Path path, Report rep)
    {
        // .'$schemaArray'
        // .'$schemaArray'.'@'
        boolean res = json.isArray(val);
        if (res)
        {
            int arr_2_idx = -1;
            Iterator<Object> arr_2_item_loop = json.arrayIterator(val);
            while (arr_2_item_loop.hasNext())
            {
                arr_2_idx++;
                Object arr_2_item = arr_2_item_loop.next();
                Path arr_2_lpath = new Path(arr_2_idx, path);
                // .'$schemaArray'.'@'.0
                res = json_model_17(arr_2_item, (path != null ? arr_2_lpath : null), rep);
                if (! res)
                {
                    if (rep != null) rep.addEntry("unexpected $Schema [.'$schemaArray'.'@'.0]", (path != null ? arr_2_lpath : null));
                    break;
                }
            }
        }
        if (! res)
        {
            if (rep != null) rep.addEntry("not array or unexpected array [.'$schemaArray'.'@']", path);
        }
        if (res)
        {
            long ival_1 = json.arrayLength(val);
            res = ival_1 >= 1;
            if (! res)
            {
                if (rep != null) rep.addEntry("constraints failed [.'$schemaArray']", path);
            }
        }
        return res;
    }

    // check json_model_15_map_dependentSchemas (.'$applicator'.dependentSchemas)
    public boolean _jm_f_11(Object val, Path path, Report rep)
    {
        // .'$applicator'.dependentSchemas
        if (! json.isObject(val))
        {
            if (rep != null) rep.addEntry("not an object [.'$applicator'.dependentSchemas]", path);
            return false;
        }
        boolean res;
        Iterator<String> prop_loop = json.objectIterator(val);
        while (prop_loop.hasNext())
        {
            String prop = prop_loop.next();
            Object pval = json.objectValue(val, prop);
            Path lpath_10 = new Path(prop, path);
            // handle other props
            // .'$applicator'.dependentSchemas.''
            res = json_model_17(pval, (path != null ? lpath_10 : null), rep);
            if (! res)
            {
                if (rep != null) rep.addEntry("unexpected $Schema [.'$applicator'.dependentSchemas.'']", (path != null ? lpath_10 : null));
                return false;
            }
        }
        return true;
    }

    // check json_model_15_map_patternProperties (.'$applicator'.patternProperties)
    public boolean _jm_f_12(Object val, Path path, Report rep)
    {
        // .'$applicator'.patternProperties
        if (! json.isObject(val))
        {
            if (rep != null) rep.addEntry("not an object [.'$applicator'.patternProperties]", path);
            return false;
        }
        boolean res;
        Iterator<String> prop_loop = json.objectIterator(val);
        while (prop_loop.hasNext())
        {
            String prop = prop_loop.next();
            Object pval = json.objectValue(val, prop);
            Path lpath_11 = new Path(prop, path);
            // handle other props
            // .'$applicator'.patternProperties.''
            res = json_model_17(pval, (path != null ? lpath_11 : null), rep);
            if (! res)
            {
                if (rep != null) rep.addEntry("unexpected $Schema [.'$applicator'.patternProperties.'']", (path != null ? lpath_11 : null));
                return false;
            }
        }
        return true;
    }

    // check json_model_15_map_properties (.'$applicator'.properties)
    public boolean _jm_f_13(Object val, Path path, Report rep)
    {
        // .'$applicator'.properties
        if (! json.isObject(val))
        {
            if (rep != null) rep.addEntry("not an object [.'$applicator'.properties]", path);
            return false;
        }
        boolean res;
        Iterator<String> prop_loop = json.objectIterator(val);
        while (prop_loop.hasNext())
        {
            String prop = prop_loop.next();
            Object pval = json.objectValue(val, prop);
            Path lpath_12 = new Path(prop, path);
            // handle other props
            // .'$applicator'.properties.''
            res = json_model_17(pval, (path != null ? lpath_12 : null), rep);
            if (! res)
            {
                if (rep != null) rep.addEntry("unexpected $Schema [.'$applicator'.properties.'']", (path != null ? lpath_12 : null));
                return false;
            }
        }
        return true;
    }


    // check $applicator (.'$applicator')
    public boolean json_model_15(Object val, Path path, Report rep)
    {
        // .'$applicator'
        if (! json.isObject(val))
        {
            if (rep != null) rep.addEntry("not an object [.'$applicator']", path);
            return false;
        }
        Checker pfun;
        Iterator<String> prop_loop = json.objectIterator(val);
        while (prop_loop.hasNext())
        {
            String prop = prop_loop.next();
            Object pval = json.objectValue(val, prop);
            Path lpath_9 = new Path(prop, path);
            if ((pfun = json_model_15_map_pmap.get(prop)) != null)
            {
                // handle 15 may props
                if (pfun != null && ! (pfun.call(pval, (path != null ? lpath_9 : null), rep)))
                {
                    if (rep != null) rep.addEntry("invalid optional prop value [.'$applicator']", (path != null ? lpath_9 : null));
                    return false;
                }
            }
            else
            {
                if (rep != null) rep.addEntry("unexpected prop [.'$applicator']", (path != null ? lpath_9 : null));
                return false;
            }
        }
        return true;
    }

    // object .'$ObjectSchema'.'$vocabulary'
    public boolean _jm_obj_2(Object val, Path path, Report rep)
    {
        if (! json.isObject(val))
        {
            if (rep != null) rep.addEntry("not an object [.'$ObjectSchema'.'$vocabulary']", path);
            return false;
        }
        boolean res;
        Iterator<String> prop_loop = json.objectIterator(val);
        while (prop_loop.hasNext())
        {
            String prop = prop_loop.next();
            Object pval = json.objectValue(val, prop);
            Path lpath_13 = new Path(prop, path);
            if (rt.is_valid_url(prop))
            {
                // handle 1 key props
                // .'$ObjectSchema'.'$vocabulary'.'$URI'
                res = json.isBoolean(pval);
                if (! res)
                {
                    if (rep != null) rep.addEntry("not a bool [.'$ObjectSchema'.'$vocabulary'.'$URI']", (path != null ? lpath_13 : null));
                    return false;
                }
            }
            else
            {
                if (rep != null) rep.addEntry("unexpected prop [.'$ObjectSchema'.'$vocabulary']", (path != null ? lpath_13 : null));
                return false;
            }
        }
        return true;
    }

    // object .'$ObjectSchema'.'$defs'
    public boolean _jm_obj_3(Object val, Path path, Report rep)
    {
        if (! json.isObject(val))
        {
            if (rep != null) rep.addEntry("not an object [.'$ObjectSchema'.'$defs']", path);
            return false;
        }
        boolean res;
        Iterator<String> prop_loop = json.objectIterator(val);
        while (prop_loop.hasNext())
        {
            String prop = prop_loop.next();
            Object pval = json.objectValue(val, prop);
            Path lpath_14 = new Path(prop, path);
            // handle other props
            // .'$ObjectSchema'.'$defs'.''
            res = json_model_17(pval, (path != null ? lpath_14 : null), rep);
            if (! res)
            {
                if (rep != null) rep.addEntry("unexpected $Schema [.'$ObjectSchema'.'$defs'.'']", (path != null ? lpath_14 : null));
                return false;
            }
        }
        return true;
    }

    // object .'$ObjectSchema'.properties
    public boolean _jm_obj_4(Object val, Path path, Report rep)
    {
        if (! json.isObject(val))
        {
            if (rep != null) rep.addEntry("not an object [.'$ObjectSchema'.properties]", path);
            return false;
        }
        boolean res;
        Iterator<String> prop_loop = json.objectIterator(val);
        while (prop_loop.hasNext())
        {
            String prop = prop_loop.next();
            Object pval = json.objectValue(val, prop);
            Path lpath_15 = new Path(prop, path);
            // handle other props
            // .'$ObjectSchema'.properties.''
            res = json_model_17(pval, (path != null ? lpath_15 : null), rep);
            if (! res)
            {
                if (rep != null) rep.addEntry("unexpected $Schema [.'$ObjectSchema'.properties.'']", (path != null ? lpath_15 : null));
                return false;
            }
        }
        return true;
    }

    // object .'$ObjectSchema'.patternProperties
    public boolean _jm_obj_5(Object val, Path path, Report rep)
    {
        if (! json.isObject(val))
        {
            if (rep != null) rep.addEntry("not an object [.'$ObjectSchema'.patternProperties]", path);
            return false;
        }
        boolean res;
        Iterator<String> prop_loop = json.objectIterator(val);
        while (prop_loop.hasNext())
        {
            String prop = prop_loop.next();
            Object pval = json.objectValue(val, prop);
            Path lpath_16 = new Path(prop, path);
            // handle other props
            // .'$ObjectSchema'.patternProperties.''
            res = json_model_17(pval, (path != null ? lpath_16 : null), rep);
            if (! res)
            {
                if (rep != null) rep.addEntry("unexpected $Schema [.'$ObjectSchema'.patternProperties.'']", (path != null ? lpath_16 : null));
                return false;
            }
        }
        return true;
    }

    // object .'$ObjectSchema'.dependentSchemas
    public boolean _jm_obj_6(Object val, Path path, Report rep)
    {
        if (! json.isObject(val))
        {
            if (rep != null) rep.addEntry("not an object [.'$ObjectSchema'.dependentSchemas]", path);
            return false;
        }
        boolean res;
        Iterator<String> prop_loop = json.objectIterator(val);
        while (prop_loop.hasNext())
        {
            String prop = prop_loop.next();
            Object pval = json.objectValue(val, prop);
            Path lpath_17 = new Path(prop, path);
            // handle other props
            // .'$ObjectSchema'.dependentSchemas.''
            res = json_model_17(pval, (path != null ? lpath_17 : null), rep);
            if (! res)
            {
                if (rep != null) rep.addEntry("unexpected $Schema [.'$ObjectSchema'.dependentSchemas.'']", (path != null ? lpath_17 : null));
                return false;
            }
        }
        return true;
    }

    // object .'$ObjectSchema'.dependentRequired
    public boolean _jm_obj_7(Object val, Path path, Report rep)
    {
        if (! json.isObject(val))
        {
            if (rep != null) rep.addEntry("not an object [.'$ObjectSchema'.dependentRequired]", path);
            return false;
        }
        boolean res;
        Iterator<String> prop_loop = json.objectIterator(val);
        while (prop_loop.hasNext())
        {
            String prop = prop_loop.next();
            Object pval = json.objectValue(val, prop);
            Path lpath_18 = new Path(prop, path);
            // handle other props
            // .'$ObjectSchema'.dependentRequired.''
            res = json_model_11(pval, (path != null ? lpath_18 : null), rep);
            if (! res)
            {
                if (rep != null) rep.addEntry("unexpected $stringArray [.'$ObjectSchema'.dependentRequired.'']", (path != null ? lpath_18 : null));
                return false;
            }
        }
        return true;
    }

    // object .'$ObjectSchema'.definitions
    public boolean _jm_obj_8(Object val, Path path, Report rep)
    {
        if (! json.isObject(val))
        {
            if (rep != null) rep.addEntry("not an object [.'$ObjectSchema'.definitions]", path);
            return false;
        }
        boolean res;
        Iterator<String> prop_loop = json.objectIterator(val);
        while (prop_loop.hasNext())
        {
            String prop = prop_loop.next();
            Object pval = json.objectValue(val, prop);
            Path lpath_19 = new Path(prop, path);
            // handle other props
            // .'$ObjectSchema'.definitions.''
            res = json_model_17(pval, (path != null ? lpath_19 : null), rep);
            if (! res)
            {
                if (rep != null) rep.addEntry("unexpected $Schema [.'$ObjectSchema'.definitions.'']", (path != null ? lpath_19 : null));
                return false;
            }
        }
        return true;
    }

    // object .'$ObjectSchema'.dependencies
    public boolean _jm_obj_9(Object val, Path path, Report rep)
    {
        if (! json.isObject(val))
        {
            if (rep != null) rep.addEntry("not an object [.'$ObjectSchema'.dependencies]", path);
            return false;
        }
        boolean res;
        Iterator<String> prop_loop = json.objectIterator(val);
        while (prop_loop.hasNext())
        {
            String prop = prop_loop.next();
            Object pval = json.objectValue(val, prop);
            Path lpath_20 = new Path(prop, path);
            // handle other props
            // .'$ObjectSchema'.dependencies.''
            // .'$ObjectSchema'.dependencies.''.'|'.0
            res = json_model_17(pval, (path != null ? lpath_20 : null), rep);
            if (! res)
            {
                if (rep != null) rep.addEntry("unexpected $Schema [.'$ObjectSchema'.dependencies.''.'|'.0]", (path != null ? lpath_20 : null));
            }
            if (! res)
            {
                // .'$ObjectSchema'.dependencies.''.'|'.1
                res = json_model_11(pval, (path != null ? lpath_20 : null), rep);
                if (! res)
                {
                    if (rep != null) rep.addEntry("unexpected $stringArray [.'$ObjectSchema'.dependencies.''.'|'.1]", (path != null ? lpath_20 : null));
                }
            }
            if (res)
            {
                if (rep != null) rep.clearEntries();
            }
            else
            {
                if (rep != null) rep.addEntry("no model matched [.'$ObjectSchema'.dependencies.''.'|']", (path != null ? lpath_20 : null));
                return false;
            }
        }
        return true;
    }

    // check $ObjectSchema (.'$ObjectSchema')
    public boolean json_model_16(Object val, Path path, Report rep)
    {
        // .'$ObjectSchema'
        // check open must/may only props
        if (! json.isObject(val))
        {
            if (rep != null) rep.addEntry("not an object [.'$ObjectSchema']", path);
            return false;
        }
        Path lpath;
        Object pval;
        boolean res;
        if ((pval = json.objectValue(val, "$id")) != null)
        {
            lpath = new Path("$id", path);
            // .'$ObjectSchema'.'$id'
            res = json_model_3(pval, (path != null ? lpath : null), rep);
            if (! res)
            {
                if (rep != null) rep.addEntry("unexpected $URI-REFERENCE [.'$ObjectSchema'.'$id']", (path != null ? lpath : null));
                if (rep != null) rep.addEntry("unexpected value for optional prop <$id> [.'$ObjectSchema']", (path != null ? lpath : null));
                return false;
            }
        }
        if ((pval = json.objectValue(val, "$schema")) != null)
        {
            lpath = new Path("$schema", path);
            // .'$ObjectSchema'.'$schema'
            res = json.isString(pval) && rt.is_valid_url(json.asString(pval));
            if (! res)
            {
                if (rep != null) rep.addEntry("unexpected $URL [.'$ObjectSchema'.'$schema']", (path != null ? lpath : null));
                if (rep != null) rep.addEntry("unexpected value for optional prop <$schema> [.'$ObjectSchema']", (path != null ? lpath : null));
                return false;
            }
        }
        if ((pval = json.objectValue(val, "$ref")) != null)
        {
            lpath = new Path("$ref", path);
            // .'$ObjectSchema'.'$ref'
            res = json_model_3(pval, (path != null ? lpath : null), rep);
            if (! res)
            {
                if (rep != null) rep.addEntry("unexpected $URI-REFERENCE [.'$ObjectSchema'.'$ref']", (path != null ? lpath : null));
                if (rep != null) rep.addEntry("unexpected value for optional prop <$ref> [.'$ObjectSchema']", (path != null ? lpath : null));
                return false;
            }
        }
        if ((pval = json.objectValue(val, "$anchor")) != null)
        {
            lpath = new Path("$anchor", path);
            // .'$ObjectSchema'.'$anchor'
            res = json_model_3(pval, (path != null ? lpath : null), rep);
            if (! res)
            {
                if (rep != null) rep.addEntry("unexpected $URI-REFERENCE [.'$ObjectSchema'.'$anchor']", (path != null ? lpath : null));
                if (rep != null) rep.addEntry("unexpected value for optional prop <$anchor> [.'$ObjectSchema']", (path != null ? lpath : null));
                return false;
            }
        }
        if ((pval = json.objectValue(val, "$dynamicRef")) != null)
        {
            lpath = new Path("$dynamicRef", path);
            // .'$ObjectSchema'.'$dynamicRef'
            res = json_model_3(pval, (path != null ? lpath : null), rep);
            if (! res)
            {
                if (rep != null) rep.addEntry("unexpected $URI-REFERENCE [.'$ObjectSchema'.'$dynamicRef']", (path != null ? lpath : null));
                if (rep != null) rep.addEntry("unexpected value for optional prop <$dynamicRef> [.'$ObjectSchema']", (path != null ? lpath : null));
                return false;
            }
        }
        if ((pval = json.objectValue(val, "$dynamicAnchor")) != null)
        {
            lpath = new Path("$dynamicAnchor", path);
            // .'$ObjectSchema'.'$dynamicAnchor'
            res = json_model_3(pval, (path != null ? lpath : null), rep);
            if (! res)
            {
                if (rep != null) rep.addEntry("unexpected $URI-REFERENCE [.'$ObjectSchema'.'$dynamicAnchor']", (path != null ? lpath : null));
                if (rep != null) rep.addEntry("unexpected value for optional prop <$dynamicAnchor> [.'$ObjectSchema']", (path != null ? lpath : null));
                return false;
            }
        }
        if ((pval = json.objectValue(val, "$vocabulary")) != null)
        {
            lpath = new Path("$vocabulary", path);
            // .'$ObjectSchema'.'$vocabulary'
            res = _jm_obj_2(pval, (path != null ? lpath : null), rep);
            if (! res)
            {
                if (rep != null) rep.addEntry("unexpected element [.'$ObjectSchema'.'$vocabulary']", (path != null ? lpath : null));
                if (rep != null) rep.addEntry("unexpected value for optional prop <$vocabulary> [.'$ObjectSchema']", (path != null ? lpath : null));
                return false;
            }
        }
        if ((pval = json.objectValue(val, "$comment")) != null)
        {
            lpath = new Path("$comment", path);
            // .'$ObjectSchema'.'$comment'
            res = json.isString(pval);
            if (! res)
            {
                if (rep != null) rep.addEntry("unexpected string [.'$ObjectSchema'.'$comment']", (path != null ? lpath : null));
                if (rep != null) rep.addEntry("unexpected value for optional prop <$comment> [.'$ObjectSchema']", (path != null ? lpath : null));
                return false;
            }
        }
        if ((pval = json.objectValue(val, "$defs")) != null)
        {
            lpath = new Path("$defs", path);
            // .'$ObjectSchema'.'$defs'
            res = _jm_obj_3(pval, (path != null ? lpath : null), rep);
            if (! res)
            {
                if (rep != null) rep.addEntry("unexpected element [.'$ObjectSchema'.'$defs']", (path != null ? lpath : null));
                if (rep != null) rep.addEntry("unexpected value for optional prop <$defs> [.'$ObjectSchema']", (path != null ? lpath : null));
                return false;
            }
        }
        if ((pval = json.objectValue(val, "prefixItems")) != null)
        {
            lpath = new Path("prefixItems", path);
            // .'$ObjectSchema'.prefixItems
            res = json_model_14(pval, (path != null ? lpath : null), rep);
            if (! res)
            {
                if (rep != null) rep.addEntry("unexpected $schemaArray [.'$ObjectSchema'.prefixItems]", (path != null ? lpath : null));
                if (rep != null) rep.addEntry("unexpected value for optional prop <prefixItems> [.'$ObjectSchema']", (path != null ? lpath : null));
                return false;
            }
        }
        if ((pval = json.objectValue(val, "items")) != null)
        {
            lpath = new Path("items", path);
            // .'$ObjectSchema'.items
            res = json_model_17(pval, (path != null ? lpath : null), rep);
            if (! res)
            {
                if (rep != null) rep.addEntry("unexpected $Schema [.'$ObjectSchema'.items]", (path != null ? lpath : null));
                if (rep != null) rep.addEntry("unexpected value for optional prop <items> [.'$ObjectSchema']", (path != null ? lpath : null));
                return false;
            }
        }
        if ((pval = json.objectValue(val, "contains")) != null)
        {
            lpath = new Path("contains", path);
            // .'$ObjectSchema'.contains
            res = json_model_17(pval, (path != null ? lpath : null), rep);
            if (! res)
            {
                if (rep != null) rep.addEntry("unexpected $Schema [.'$ObjectSchema'.contains]", (path != null ? lpath : null));
                if (rep != null) rep.addEntry("unexpected value for optional prop <contains> [.'$ObjectSchema']", (path != null ? lpath : null));
                return false;
            }
        }
        if ((pval = json.objectValue(val, "additionalProperties")) != null)
        {
            lpath = new Path("additionalProperties", path);
            // .'$ObjectSchema'.additionalProperties
            res = json_model_17(pval, (path != null ? lpath : null), rep);
            if (! res)
            {
                if (rep != null) rep.addEntry("unexpected $Schema [.'$ObjectSchema'.additionalProperties]", (path != null ? lpath : null));
                if (rep != null) rep.addEntry("unexpected value for optional prop <additionalProperties> [.'$ObjectSchema']", (path != null ? lpath : null));
                return false;
            }
        }
        if ((pval = json.objectValue(val, "properties")) != null)
        {
            lpath = new Path("properties", path);
            // .'$ObjectSchema'.properties
            res = _jm_obj_4(pval, (path != null ? lpath : null), rep);
            if (! res)
            {
                if (rep != null) rep.addEntry("unexpected element [.'$ObjectSchema'.properties]", (path != null ? lpath : null));
                if (rep != null) rep.addEntry("unexpected value for optional prop <properties> [.'$ObjectSchema']", (path != null ? lpath : null));
                return false;
            }
        }
        if ((pval = json.objectValue(val, "patternProperties")) != null)
        {
            lpath = new Path("patternProperties", path);
            // .'$ObjectSchema'.patternProperties
            res = _jm_obj_5(pval, (path != null ? lpath : null), rep);
            if (! res)
            {
                if (rep != null) rep.addEntry("unexpected element [.'$ObjectSchema'.patternProperties]", (path != null ? lpath : null));
                if (rep != null) rep.addEntry("unexpected value for optional prop <patternProperties> [.'$ObjectSchema']", (path != null ? lpath : null));
                return false;
            }
        }
        if ((pval = json.objectValue(val, "dependentSchemas")) != null)
        {
            lpath = new Path("dependentSchemas", path);
            // .'$ObjectSchema'.dependentSchemas
            res = _jm_obj_6(pval, (path != null ? lpath : null), rep);
            if (! res)
            {
                if (rep != null) rep.addEntry("unexpected element [.'$ObjectSchema'.dependentSchemas]", (path != null ? lpath : null));
                if (rep != null) rep.addEntry("unexpected value for optional prop <dependentSchemas> [.'$ObjectSchema']", (path != null ? lpath : null));
                return false;
            }
        }
        if ((pval = json.objectValue(val, "propertyNames")) != null)
        {
            lpath = new Path("propertyNames", path);
            // .'$ObjectSchema'.propertyNames
            res = json_model_17(pval, (path != null ? lpath : null), rep);
            if (! res)
            {
                if (rep != null) rep.addEntry("unexpected $Schema [.'$ObjectSchema'.propertyNames]", (path != null ? lpath : null));
                if (rep != null) rep.addEntry("unexpected value for optional prop <propertyNames> [.'$ObjectSchema']", (path != null ? lpath : null));
                return false;
            }
        }
        if ((pval = json.objectValue(val, "if")) != null)
        {
            lpath = new Path("if", path);
            // .'$ObjectSchema'.if
            res = json_model_17(pval, (path != null ? lpath : null), rep);
            if (! res)
            {
                if (rep != null) rep.addEntry("unexpected $Schema [.'$ObjectSchema'.if]", (path != null ? lpath : null));
                if (rep != null) rep.addEntry("unexpected value for optional prop <if> [.'$ObjectSchema']", (path != null ? lpath : null));
                return false;
            }
        }
        if ((pval = json.objectValue(val, "then")) != null)
        {
            lpath = new Path("then", path);
            // .'$ObjectSchema'.then
            res = json_model_17(pval, (path != null ? lpath : null), rep);
            if (! res)
            {
                if (rep != null) rep.addEntry("unexpected $Schema [.'$ObjectSchema'.then]", (path != null ? lpath : null));
                if (rep != null) rep.addEntry("unexpected value for optional prop <then> [.'$ObjectSchema']", (path != null ? lpath : null));
                return false;
            }
        }
        if ((pval = json.objectValue(val, "else")) != null)
        {
            lpath = new Path("else", path);
            // .'$ObjectSchema'.else
            res = json_model_17(pval, (path != null ? lpath : null), rep);
            if (! res)
            {
                if (rep != null) rep.addEntry("unexpected $Schema [.'$ObjectSchema'.else]", (path != null ? lpath : null));
                if (rep != null) rep.addEntry("unexpected value for optional prop <else> [.'$ObjectSchema']", (path != null ? lpath : null));
                return false;
            }
        }
        if ((pval = json.objectValue(val, "not")) != null)
        {
            lpath = new Path("not", path);
            // .'$ObjectSchema'.not
            res = json_model_17(pval, (path != null ? lpath : null), rep);
            if (! res)
            {
                if (rep != null) rep.addEntry("unexpected $Schema [.'$ObjectSchema'.not]", (path != null ? lpath : null));
                if (rep != null) rep.addEntry("unexpected value for optional prop <not> [.'$ObjectSchema']", (path != null ? lpath : null));
                return false;
            }
        }
        if ((pval = json.objectValue(val, "allOf")) != null)
        {
            lpath = new Path("allOf", path);
            // .'$ObjectSchema'.allOf
            res = json_model_14(pval, (path != null ? lpath : null), rep);
            if (! res)
            {
                if (rep != null) rep.addEntry("unexpected $schemaArray [.'$ObjectSchema'.allOf]", (path != null ? lpath : null));
                if (rep != null) rep.addEntry("unexpected value for optional prop <allOf> [.'$ObjectSchema']", (path != null ? lpath : null));
                return false;
            }
        }
        if ((pval = json.objectValue(val, "anyOf")) != null)
        {
            lpath = new Path("anyOf", path);
            // .'$ObjectSchema'.anyOf
            res = json_model_14(pval, (path != null ? lpath : null), rep);
            if (! res)
            {
                if (rep != null) rep.addEntry("unexpected $schemaArray [.'$ObjectSchema'.anyOf]", (path != null ? lpath : null));
                if (rep != null) rep.addEntry("unexpected value for optional prop <anyOf> [.'$ObjectSchema']", (path != null ? lpath : null));
                return false;
            }
        }
        if ((pval = json.objectValue(val, "oneOf")) != null)
        {
            lpath = new Path("oneOf", path);
            // .'$ObjectSchema'.oneOf
            res = json_model_14(pval, (path != null ? lpath : null), rep);
            if (! res)
            {
                if (rep != null) rep.addEntry("unexpected $schemaArray [.'$ObjectSchema'.oneOf]", (path != null ? lpath : null));
                if (rep != null) rep.addEntry("unexpected value for optional prop <oneOf> [.'$ObjectSchema']", (path != null ? lpath : null));
                return false;
            }
        }
        if ((pval = json.objectValue(val, "unevaluatedItems")) != null)
        {
            lpath = new Path("unevaluatedItems", path);
            // .'$ObjectSchema'.unevaluatedItems
            res = json_model_17(pval, (path != null ? lpath : null), rep);
            if (! res)
            {
                if (rep != null) rep.addEntry("unexpected $Schema [.'$ObjectSchema'.unevaluatedItems]", (path != null ? lpath : null));
                if (rep != null) rep.addEntry("unexpected value for optional prop <unevaluatedItems> [.'$ObjectSchema']", (path != null ? lpath : null));
                return false;
            }
        }
        if ((pval = json.objectValue(val, "unevaluatedProperties")) != null)
        {
            lpath = new Path("unevaluatedProperties", path);
            // .'$ObjectSchema'.unevaluatedProperties
            res = json_model_17(pval, (path != null ? lpath : null), rep);
            if (! res)
            {
                if (rep != null) rep.addEntry("unexpected $Schema [.'$ObjectSchema'.unevaluatedProperties]", (path != null ? lpath : null));
                if (rep != null) rep.addEntry("unexpected value for optional prop <unevaluatedProperties> [.'$ObjectSchema']", (path != null ? lpath : null));
                return false;
            }
        }
        if ((pval = json.objectValue(val, "type")) != null)
        {
            lpath = new Path("type", path);
            // .'$ObjectSchema'.type
            // .'$ObjectSchema'.type.'|'.0
            res = json_model_9(pval, (path != null ? lpath : null), rep);
            if (! res)
            {
                if (rep != null) rep.addEntry("unexpected $simpleTypes [.'$ObjectSchema'.type.'|'.0]", (path != null ? lpath : null));
            }
            if (! res)
            {
                // .'$ObjectSchema'.type.'|'.1
                res = json_model_10(pval, (path != null ? lpath : null), rep);
                if (! res)
                {
                    if (rep != null) rep.addEntry("unexpected $simpleTypesArray [.'$ObjectSchema'.type.'|'.1]", (path != null ? lpath : null));
                }
            }
            if (res)
            {
                if (rep != null) rep.clearEntries();
            }
            else
            {
                if (rep != null) rep.addEntry("no model matched [.'$ObjectSchema'.type.'|']", (path != null ? lpath : null));
                if (rep != null) rep.addEntry("unexpected value for optional prop <type> [.'$ObjectSchema']", (path != null ? lpath : null));
                return false;
            }
        }
        // ignored .'$ObjectSchema'.const
        if ((pval = json.objectValue(val, "enum")) != null)
        {
            lpath = new Path("enum", path);
            // .'$ObjectSchema'.enum
            res = json.isArray(pval);
            if (! res)
            {
                if (rep != null) rep.addEntry("not array or unexpected array [.'$ObjectSchema'.enum]", (path != null ? lpath : null));
                if (rep != null) rep.addEntry("unexpected value for optional prop <enum> [.'$ObjectSchema']", (path != null ? lpath : null));
                return false;
            }
        }
        if ((pval = json.objectValue(val, "multipleOf")) != null)
        {
            lpath = new Path("multipleOf", path);
            // .'$ObjectSchema'.multipleOf
            res = json.isNumber(pval) && json.asNumber(pval) > 0.0;
            if (! res)
            {
                if (rep != null) rep.addEntry("not a 1.0 loose float [.'$ObjectSchema'.multipleOf]", (path != null ? lpath : null));
                if (rep != null) rep.addEntry("unexpected value for optional prop <multipleOf> [.'$ObjectSchema']", (path != null ? lpath : null));
                return false;
            }
        }
        if ((pval = json.objectValue(val, "maximum")) != null)
        {
            lpath = new Path("maximum", path);
            // .'$ObjectSchema'.maximum
            res = json.isNumber(pval);
            if (! res)
            {
                if (rep != null) rep.addEntry("not a -1.0 loose float [.'$ObjectSchema'.maximum]", (path != null ? lpath : null));
                if (rep != null) rep.addEntry("unexpected value for optional prop <maximum> [.'$ObjectSchema']", (path != null ? lpath : null));
                return false;
            }
        }
        if ((pval = json.objectValue(val, "exclusiveMaximum")) != null)
        {
            lpath = new Path("exclusiveMaximum", path);
            // .'$ObjectSchema'.exclusiveMaximum
            res = json.isNumber(pval);
            if (! res)
            {
                if (rep != null) rep.addEntry("not a -1.0 loose float [.'$ObjectSchema'.exclusiveMaximum]", (path != null ? lpath : null));
                if (rep != null) rep.addEntry("unexpected value for optional prop <exclusiveMaximum> [.'$ObjectSchema']", (path != null ? lpath : null));
                return false;
            }
        }
        if ((pval = json.objectValue(val, "minimum")) != null)
        {
            lpath = new Path("minimum", path);
            // .'$ObjectSchema'.minimum
            res = json.isNumber(pval);
            if (! res)
            {
                if (rep != null) rep.addEntry("not a -1.0 loose float [.'$ObjectSchema'.minimum]", (path != null ? lpath : null));
                if (rep != null) rep.addEntry("unexpected value for optional prop <minimum> [.'$ObjectSchema']", (path != null ? lpath : null));
                return false;
            }
        }
        if ((pval = json.objectValue(val, "exclusiveMinimum")) != null)
        {
            lpath = new Path("exclusiveMinimum", path);
            // .'$ObjectSchema'.exclusiveMinimum
            res = json.isNumber(pval);
            if (! res)
            {
                if (rep != null) rep.addEntry("not a -1.0 loose float [.'$ObjectSchema'.exclusiveMinimum]", (path != null ? lpath : null));
                if (rep != null) rep.addEntry("unexpected value for optional prop <exclusiveMinimum> [.'$ObjectSchema']", (path != null ? lpath : null));
                return false;
            }
        }
        if ((pval = json.objectValue(val, "maxLength")) != null)
        {
            lpath = new Path("maxLength", path);
            // .'$ObjectSchema'.maxLength
            res = json_model_12(pval, (path != null ? lpath : null), rep);
            if (! res)
            {
                if (rep != null) rep.addEntry("unexpected $nonNegativeInteger [.'$ObjectSchema'.maxLength]", (path != null ? lpath : null));
                if (rep != null) rep.addEntry("unexpected value for optional prop <maxLength> [.'$ObjectSchema']", (path != null ? lpath : null));
                return false;
            }
        }
        if ((pval = json.objectValue(val, "minLength")) != null)
        {
            lpath = new Path("minLength", path);
            // .'$ObjectSchema'.minLength
            res = json_model_12(pval, (path != null ? lpath : null), rep);
            if (! res)
            {
                if (rep != null) rep.addEntry("unexpected $nonNegativeInteger [.'$ObjectSchema'.minLength]", (path != null ? lpath : null));
                if (rep != null) rep.addEntry("unexpected value for optional prop <minLength> [.'$ObjectSchema']", (path != null ? lpath : null));
                return false;
            }
        }
        if ((pval = json.objectValue(val, "pattern")) != null)
        {
            lpath = new Path("pattern", path);
            // .'$ObjectSchema'.pattern
            res = json.isString(pval);
            if (! res)
            {
                if (rep != null) rep.addEntry("unexpected string [.'$ObjectSchema'.pattern]", (path != null ? lpath : null));
                if (rep != null) rep.addEntry("unexpected value for optional prop <pattern> [.'$ObjectSchema']", (path != null ? lpath : null));
                return false;
            }
        }
        if ((pval = json.objectValue(val, "maxItems")) != null)
        {
            lpath = new Path("maxItems", path);
            // .'$ObjectSchema'.maxItems
            res = json_model_12(pval, (path != null ? lpath : null), rep);
            if (! res)
            {
                if (rep != null) rep.addEntry("unexpected $nonNegativeInteger [.'$ObjectSchema'.maxItems]", (path != null ? lpath : null));
                if (rep != null) rep.addEntry("unexpected value for optional prop <maxItems> [.'$ObjectSchema']", (path != null ? lpath : null));
                return false;
            }
        }
        if ((pval = json.objectValue(val, "minItems")) != null)
        {
            lpath = new Path("minItems", path);
            // .'$ObjectSchema'.minItems
            res = json_model_12(pval, (path != null ? lpath : null), rep);
            if (! res)
            {
                if (rep != null) rep.addEntry("unexpected $nonNegativeInteger [.'$ObjectSchema'.minItems]", (path != null ? lpath : null));
                if (rep != null) rep.addEntry("unexpected value for optional prop <minItems> [.'$ObjectSchema']", (path != null ? lpath : null));
                return false;
            }
        }
        if ((pval = json.objectValue(val, "uniqueItems")) != null)
        {
            lpath = new Path("uniqueItems", path);
            // .'$ObjectSchema'.uniqueItems
            res = json.isBoolean(pval);
            if (! res)
            {
                if (rep != null) rep.addEntry("not a bool [.'$ObjectSchema'.uniqueItems]", (path != null ? lpath : null));
                if (rep != null) rep.addEntry("unexpected value for optional prop <uniqueItems> [.'$ObjectSchema']", (path != null ? lpath : null));
                return false;
            }
        }
        if ((pval = json.objectValue(val, "maxContains")) != null)
        {
            lpath = new Path("maxContains", path);
            // .'$ObjectSchema'.maxContains
            res = json_model_12(pval, (path != null ? lpath : null), rep);
            if (! res)
            {
                if (rep != null) rep.addEntry("unexpected $nonNegativeInteger [.'$ObjectSchema'.maxContains]", (path != null ? lpath : null));
                if (rep != null) rep.addEntry("unexpected value for optional prop <maxContains> [.'$ObjectSchema']", (path != null ? lpath : null));
                return false;
            }
        }
        if ((pval = json.objectValue(val, "minContains")) != null)
        {
            lpath = new Path("minContains", path);
            // .'$ObjectSchema'.minContains
            res = json_model_12(pval, (path != null ? lpath : null), rep);
            if (! res)
            {
                if (rep != null) rep.addEntry("unexpected $nonNegativeInteger [.'$ObjectSchema'.minContains]", (path != null ? lpath : null));
                if (rep != null) rep.addEntry("unexpected value for optional prop <minContains> [.'$ObjectSchema']", (path != null ? lpath : null));
                return false;
            }
        }
        if ((pval = json.objectValue(val, "maxProperties")) != null)
        {
            lpath = new Path("maxProperties", path);
            // .'$ObjectSchema'.maxProperties
            res = json_model_12(pval, (path != null ? lpath : null), rep);
            if (! res)
            {
                if (rep != null) rep.addEntry("unexpected $nonNegativeInteger [.'$ObjectSchema'.maxProperties]", (path != null ? lpath : null));
                if (rep != null) rep.addEntry("unexpected value for optional prop <maxProperties> [.'$ObjectSchema']", (path != null ? lpath : null));
                return false;
            }
        }
        if ((pval = json.objectValue(val, "minProperties")) != null)
        {
            lpath = new Path("minProperties", path);
            // .'$ObjectSchema'.minProperties
            res = json_model_12(pval, (path != null ? lpath : null), rep);
            if (! res)
            {
                if (rep != null) rep.addEntry("unexpected $nonNegativeInteger [.'$ObjectSchema'.minProperties]", (path != null ? lpath : null));
                if (rep != null) rep.addEntry("unexpected value for optional prop <minProperties> [.'$ObjectSchema']", (path != null ? lpath : null));
                return false;
            }
        }
        if ((pval = json.objectValue(val, "required")) != null)
        {
            lpath = new Path("required", path);
            // .'$ObjectSchema'.required
            res = json_model_11(pval, (path != null ? lpath : null), rep);
            if (! res)
            {
                if (rep != null) rep.addEntry("unexpected $stringArray [.'$ObjectSchema'.required]", (path != null ? lpath : null));
                if (rep != null) rep.addEntry("unexpected value for optional prop <required> [.'$ObjectSchema']", (path != null ? lpath : null));
                return false;
            }
        }
        if ((pval = json.objectValue(val, "dependentRequired")) != null)
        {
            lpath = new Path("dependentRequired", path);
            // .'$ObjectSchema'.dependentRequired
            res = _jm_obj_7(pval, (path != null ? lpath : null), rep);
            if (! res)
            {
                if (rep != null) rep.addEntry("unexpected element [.'$ObjectSchema'.dependentRequired]", (path != null ? lpath : null));
                if (rep != null) rep.addEntry("unexpected value for optional prop <dependentRequired> [.'$ObjectSchema']", (path != null ? lpath : null));
                return false;
            }
        }
        if ((pval = json.objectValue(val, "title")) != null)
        {
            lpath = new Path("title", path);
            // .'$ObjectSchema'.title
            res = json.isString(pval);
            if (! res)
            {
                if (rep != null) rep.addEntry("unexpected string [.'$ObjectSchema'.title]", (path != null ? lpath : null));
                if (rep != null) rep.addEntry("unexpected value for optional prop <title> [.'$ObjectSchema']", (path != null ? lpath : null));
                return false;
            }
        }
        if ((pval = json.objectValue(val, "description")) != null)
        {
            lpath = new Path("description", path);
            // .'$ObjectSchema'.description
            res = json.isString(pval);
            if (! res)
            {
                if (rep != null) rep.addEntry("unexpected string [.'$ObjectSchema'.description]", (path != null ? lpath : null));
                if (rep != null) rep.addEntry("unexpected value for optional prop <description> [.'$ObjectSchema']", (path != null ? lpath : null));
                return false;
            }
        }
        // ignored .'$ObjectSchema'.default
        if ((pval = json.objectValue(val, "deprecated")) != null)
        {
            lpath = new Path("deprecated", path);
            // .'$ObjectSchema'.deprecated
            res = json.isBoolean(pval);
            if (! res)
            {
                if (rep != null) rep.addEntry("not a bool [.'$ObjectSchema'.deprecated]", (path != null ? lpath : null));
                if (rep != null) rep.addEntry("unexpected value for optional prop <deprecated> [.'$ObjectSchema']", (path != null ? lpath : null));
                return false;
            }
        }
        if ((pval = json.objectValue(val, "readOnly")) != null)
        {
            lpath = new Path("readOnly", path);
            // .'$ObjectSchema'.readOnly
            res = json.isBoolean(pval);
            if (! res)
            {
                if (rep != null) rep.addEntry("not a bool [.'$ObjectSchema'.readOnly]", (path != null ? lpath : null));
                if (rep != null) rep.addEntry("unexpected value for optional prop <readOnly> [.'$ObjectSchema']", (path != null ? lpath : null));
                return false;
            }
        }
        if ((pval = json.objectValue(val, "writeOnly")) != null)
        {
            lpath = new Path("writeOnly", path);
            // .'$ObjectSchema'.writeOnly
            res = json.isBoolean(pval);
            if (! res)
            {
                if (rep != null) rep.addEntry("not a bool [.'$ObjectSchema'.writeOnly]", (path != null ? lpath : null));
                if (rep != null) rep.addEntry("unexpected value for optional prop <writeOnly> [.'$ObjectSchema']", (path != null ? lpath : null));
                return false;
            }
        }
        if ((pval = json.objectValue(val, "examples")) != null)
        {
            lpath = new Path("examples", path);
            // .'$ObjectSchema'.examples
            res = json.isArray(pval);
            if (! res)
            {
                if (rep != null) rep.addEntry("not array or unexpected array [.'$ObjectSchema'.examples]", (path != null ? lpath : null));
                if (rep != null) rep.addEntry("unexpected value for optional prop <examples> [.'$ObjectSchema']", (path != null ? lpath : null));
                return false;
            }
        }
        if ((pval = json.objectValue(val, "format")) != null)
        {
            lpath = new Path("format", path);
            // .'$ObjectSchema'.format
            res = json.isString(pval);
            if (! res)
            {
                if (rep != null) rep.addEntry("unexpected string [.'$ObjectSchema'.format]", (path != null ? lpath : null));
                if (rep != null) rep.addEntry("unexpected value for optional prop <format> [.'$ObjectSchema']", (path != null ? lpath : null));
                return false;
            }
        }
        if ((pval = json.objectValue(val, "contentEncoding")) != null)
        {
            lpath = new Path("contentEncoding", path);
            // .'$ObjectSchema'.contentEncoding
            res = json.isString(pval);
            if (! res)
            {
                if (rep != null) rep.addEntry("unexpected string [.'$ObjectSchema'.contentEncoding]", (path != null ? lpath : null));
                if (rep != null) rep.addEntry("unexpected value for optional prop <contentEncoding> [.'$ObjectSchema']", (path != null ? lpath : null));
                return false;
            }
        }
        if ((pval = json.objectValue(val, "contentMediaType")) != null)
        {
            lpath = new Path("contentMediaType", path);
            // .'$ObjectSchema'.contentMediaType
            res = json.isString(pval);
            if (! res)
            {
                if (rep != null) rep.addEntry("unexpected string [.'$ObjectSchema'.contentMediaType]", (path != null ? lpath : null));
                if (rep != null) rep.addEntry("unexpected value for optional prop <contentMediaType> [.'$ObjectSchema']", (path != null ? lpath : null));
                return false;
            }
        }
        if ((pval = json.objectValue(val, "contentSchema")) != null)
        {
            lpath = new Path("contentSchema", path);
            // .'$ObjectSchema'.contentSchema
            res = json_model_17(pval, (path != null ? lpath : null), rep);
            if (! res)
            {
                if (rep != null) rep.addEntry("unexpected $Schema [.'$ObjectSchema'.contentSchema]", (path != null ? lpath : null));
                if (rep != null) rep.addEntry("unexpected value for optional prop <contentSchema> [.'$ObjectSchema']", (path != null ? lpath : null));
                return false;
            }
        }
        if ((pval = json.objectValue(val, "definitions")) != null)
        {
            lpath = new Path("definitions", path);
            // .'$ObjectSchema'.definitions
            res = _jm_obj_8(pval, (path != null ? lpath : null), rep);
            if (! res)
            {
                if (rep != null) rep.addEntry("unexpected element [.'$ObjectSchema'.definitions]", (path != null ? lpath : null));
                if (rep != null) rep.addEntry("unexpected value for optional prop <definitions> [.'$ObjectSchema']", (path != null ? lpath : null));
                return false;
            }
        }
        if ((pval = json.objectValue(val, "dependencies")) != null)
        {
            lpath = new Path("dependencies", path);
            // .'$ObjectSchema'.dependencies
            res = _jm_obj_9(pval, (path != null ? lpath : null), rep);
            if (! res)
            {
                if (rep != null) rep.addEntry("unexpected element [.'$ObjectSchema'.dependencies]", (path != null ? lpath : null));
                if (rep != null) rep.addEntry("unexpected value for optional prop <dependencies> [.'$ObjectSchema']", (path != null ? lpath : null));
                return false;
            }
        }
        if ((pval = json.objectValue(val, "$recursiveAnchor")) != null)
        {
            lpath = new Path("$recursiveAnchor", path);
            // .'$ObjectSchema'.'$recursiveAnchor'
            res = json.isString(pval);
            if (! res)
            {
                if (rep != null) rep.addEntry("unexpected string [.'$ObjectSchema'.'$recursiveAnchor']", (path != null ? lpath : null));
                if (rep != null) rep.addEntry("unexpected value for optional prop <$recursiveAnchor> [.'$ObjectSchema']", (path != null ? lpath : null));
                return false;
            }
        }
        if ((pval = json.objectValue(val, "$recursiveRef")) != null)
        {
            lpath = new Path("$recursiveRef", path);
            // .'$ObjectSchema'.'$recursiveRef'
            res = json.isString(pval);
            if (! res)
            {
                if (rep != null) rep.addEntry("unexpected string [.'$ObjectSchema'.'$recursiveRef']", (path != null ? lpath : null));
                if (rep != null) rep.addEntry("unexpected value for optional prop <$recursiveRef> [.'$ObjectSchema']", (path != null ? lpath : null));
                return false;
            }
        }
        return true;
    }

    // check $Schema (.'$Schema')
    public boolean json_model_17(Object val, Path path, Report rep)
    {
        // .'$Schema'
        // .'$Schema'.'|'.0
        boolean res = json.isBoolean(val);
        if (! res)
        {
            if (rep != null) rep.addEntry("not a bool [.'$Schema'.'|'.0]", path);
        }
        if (! res)
        {
            // .'$Schema'.'|'.1
            res = json_model_16(val, path, rep);
            if (! res)
            {
                if (rep != null) rep.addEntry("unexpected $ObjectSchema [.'$Schema'.'|'.1]", path);
            }
        }
        if (res)
        {
            if (rep != null) rep.clearEntries();
        }
        else
        {
            if (rep != null) rep.addEntry("no model matched [.'$Schema'.'|']", path);
        }
        return res;
    }

    // object .'$deprecated'.definitions
    public boolean _jm_obj_10(Object val, Path path, Report rep)
    {
        if (! json.isObject(val))
        {
            if (rep != null) rep.addEntry("not an object [.'$deprecated'.definitions]", path);
            return false;
        }
        boolean res;
        Iterator<String> prop_loop = json.objectIterator(val);
        while (prop_loop.hasNext())
        {
            String prop = prop_loop.next();
            Object pval = json.objectValue(val, prop);
            Path lpath_22 = new Path(prop, path);
            // handle other props
            // .'$deprecated'.definitions.''
            res = json_model_17(pval, (path != null ? lpath_22 : null), rep);
            if (! res)
            {
                if (rep != null) rep.addEntry("unexpected $Schema [.'$deprecated'.definitions.'']", (path != null ? lpath_22 : null));
                return false;
            }
        }
        return true;
    }

    // object .'$deprecated'.dependencies
    public boolean _jm_obj_11(Object val, Path path, Report rep)
    {
        if (! json.isObject(val))
        {
            if (rep != null) rep.addEntry("not an object [.'$deprecated'.dependencies]", path);
            return false;
        }
        boolean res;
        Iterator<String> prop_loop = json.objectIterator(val);
        while (prop_loop.hasNext())
        {
            String prop = prop_loop.next();
            Object pval = json.objectValue(val, prop);
            Path lpath_23 = new Path(prop, path);
            // handle other props
            // .'$deprecated'.dependencies.''
            // .'$deprecated'.dependencies.''.'|'.0
            res = json_model_17(pval, (path != null ? lpath_23 : null), rep);
            if (! res)
            {
                if (rep != null) rep.addEntry("unexpected $Schema [.'$deprecated'.dependencies.''.'|'.0]", (path != null ? lpath_23 : null));
            }
            if (! res)
            {
                // .'$deprecated'.dependencies.''.'|'.1
                res = json_model_11(pval, (path != null ? lpath_23 : null), rep);
                if (! res)
                {
                    if (rep != null) rep.addEntry("unexpected $stringArray [.'$deprecated'.dependencies.''.'|'.1]", (path != null ? lpath_23 : null));
                }
            }
            if (res)
            {
                if (rep != null) rep.clearEntries();
            }
            else
            {
                if (rep != null) rep.addEntry("no model matched [.'$deprecated'.dependencies.''.'|']", (path != null ? lpath_23 : null));
                return false;
            }
        }
        return true;
    }

    // check $deprecated (.'$deprecated')
    public boolean json_model_18(Object val, Path path, Report rep)
    {
        // .'$deprecated'
        if (! json.isObject(val))
        {
            if (rep != null) rep.addEntry("not an object [.'$deprecated']", path);
            return false;
        }
        boolean res;
        Iterator<String> prop_loop = json.objectIterator(val);
        while (prop_loop.hasNext())
        {
            String prop = prop_loop.next();
            Object pval = json.objectValue(val, prop);
            Path lpath_21 = new Path(prop, path);
            if (prop.compareTo("definitions") == 0)
            {
                // handle may definitions property
                // .'$deprecated'.definitions
                res = _jm_obj_10(pval, (path != null ? lpath_21 : null), rep);
                if (! res)
                {
                    if (rep != null) rep.addEntry("unexpected element [.'$deprecated'.definitions]", (path != null ? lpath_21 : null));
                    if (rep != null) rep.addEntry("invalid optional prop value [.'$deprecated'.definitions]", (path != null ? lpath_21 : null));
                    return false;
                }
            }
            else if (prop.compareTo("dependencies") == 0)
            {
                // handle may dependencies property
                // .'$deprecated'.dependencies
                res = _jm_obj_11(pval, (path != null ? lpath_21 : null), rep);
                if (! res)
                {
                    if (rep != null) rep.addEntry("unexpected element [.'$deprecated'.dependencies]", (path != null ? lpath_21 : null));
                    if (rep != null) rep.addEntry("invalid optional prop value [.'$deprecated'.dependencies]", (path != null ? lpath_21 : null));
                    return false;
                }
            }
            else if (prop.compareTo("$recursiveRef") == 0)
            {
                // handle may $recursiveRef property
                // .'$deprecated'.'$recursiveRef'
                res = json.isString(pval);
                if (! res)
                {
                    if (rep != null) rep.addEntry("unexpected string [.'$deprecated'.'$recursiveRef']", (path != null ? lpath_21 : null));
                    if (rep != null) rep.addEntry("invalid optional prop value [.'$deprecated'.'$recursiveRef']", (path != null ? lpath_21 : null));
                    return false;
                }
            }
            else if (prop.compareTo("$recursiveAnchor") == 0)
            {
                // handle may $recursiveAnchor property
                // .'$deprecated'.'$recursiveAnchor'
                res = json.isString(pval);
                if (! res)
                {
                    if (rep != null) rep.addEntry("unexpected string [.'$deprecated'.'$recursiveAnchor']", (path != null ? lpath_21 : null));
                    if (rep != null) rep.addEntry("invalid optional prop value [.'$deprecated'.'$recursiveAnchor']", (path != null ? lpath_21 : null));
                    return false;
                }
            }
            else
            {
                if (rep != null) rep.addEntry("unexpected prop [.'$deprecated']", (path != null ? lpath_21 : null));
                return false;
            }
        }
        return true;
    }

    // check $fuzzy (.'$fuzzy')
    public boolean json_model_19(Object val, Path path, Report rep)
    {
        // .'$fuzzy'
        if (! json.isObject(val))
        {
            if (rep != null) rep.addEntry("not an object [.'$fuzzy']", path);
            return false;
        }
        // accept any object
        return true;
    }

    // check $ (.)
    public boolean json_model_1(Object val, Path path, Report rep)
    {
        // .
        boolean res = json_model_17(val, path, rep);
        if (! res)
        {
            if (rep != null) rep.addEntry("unexpected $Schema [.]", path);
        }
        return res;
    }


    public void init(JSON json)
    {
        if (!initialized)
        {
            try {
            _jm_cst_0_set = new HashSet<Object>();
            _jm_cst_0_set.add(json.safeJSON("\"array\""));
            _jm_cst_0_set.add(json.safeJSON("\"boolean\""));
            _jm_cst_0_set.add(json.safeJSON("\"integer\""));
            _jm_cst_0_set.add(json.safeJSON("\"null\""));
            _jm_cst_0_set.add(json.safeJSON("\"number\""));
            _jm_cst_0_set.add(json.safeJSON("\"object\""));
            _jm_cst_0_set.add(json.safeJSON("\"string\""));
            json_model_13_map_pmap = new HashMap<String, Checker>();
            json_model_13_map_pmap.put("const", new Checker() { public boolean call(Object o, Path p, Report r) { return _jm_f_0(o, p, r);} });
            json_model_13_map_pmap.put("dependentRequired", new Checker() { public boolean call(Object o, Path p, Report r) { return _jm_f_1(o, p, r);} });
            json_model_13_map_pmap.put("enum", new Checker() { public boolean call(Object o, Path p, Report r) { return _jm_f_2(o, p, r);} });
            json_model_13_map_pmap.put("exclusiveMaximum", new Checker() { public boolean call(Object o, Path p, Report r) { return _jm_f_3(o, p, r);} });
            json_model_13_map_pmap.put("exclusiveMinimum", new Checker() { public boolean call(Object o, Path p, Report r) { return _jm_f_4(o, p, r);} });
            json_model_13_map_pmap.put("maxContains", new Checker() { public boolean call(Object o, Path p, Report r) { return json_model_12(o, p, r);} });
            json_model_13_map_pmap.put("maxItems", new Checker() { public boolean call(Object o, Path p, Report r) { return json_model_12(o, p, r);} });
            json_model_13_map_pmap.put("maxLength", new Checker() { public boolean call(Object o, Path p, Report r) { return json_model_12(o, p, r);} });
            json_model_13_map_pmap.put("maxProperties", new Checker() { public boolean call(Object o, Path p, Report r) { return json_model_12(o, p, r);} });
            json_model_13_map_pmap.put("maximum", new Checker() { public boolean call(Object o, Path p, Report r) { return _jm_f_5(o, p, r);} });
            json_model_13_map_pmap.put("minContains", new Checker() { public boolean call(Object o, Path p, Report r) { return json_model_12(o, p, r);} });
            json_model_13_map_pmap.put("minItems", new Checker() { public boolean call(Object o, Path p, Report r) { return json_model_12(o, p, r);} });
            json_model_13_map_pmap.put("minLength", new Checker() { public boolean call(Object o, Path p, Report r) { return json_model_12(o, p, r);} });
            json_model_13_map_pmap.put("minProperties", new Checker() { public boolean call(Object o, Path p, Report r) { return json_model_12(o, p, r);} });
            json_model_13_map_pmap.put("minimum", new Checker() { public boolean call(Object o, Path p, Report r) { return _jm_f_6(o, p, r);} });
            json_model_13_map_pmap.put("multipleOf", new Checker() { public boolean call(Object o, Path p, Report r) { return _jm_f_7(o, p, r);} });
            json_model_13_map_pmap.put("pattern", new Checker() { public boolean call(Object o, Path p, Report r) { return _jm_f_8(o, p, r);} });
            json_model_13_map_pmap.put("required", new Checker() { public boolean call(Object o, Path p, Report r) { return json_model_11(o, p, r);} });
            json_model_13_map_pmap.put("type", new Checker() { public boolean call(Object o, Path p, Report r) { return _jm_f_9(o, p, r);} });
            json_model_13_map_pmap.put("uniqueItems", new Checker() { public boolean call(Object o, Path p, Report r) { return _jm_f_10(o, p, r);} });
            json_model_15_map_pmap = new HashMap<String, Checker>();
            json_model_15_map_pmap.put("additionalProperties", new Checker() { public boolean call(Object o, Path p, Report r) { return json_model_17(o, p, r);} });
            json_model_15_map_pmap.put("allOf", new Checker() { public boolean call(Object o, Path p, Report r) { return json_model_14(o, p, r);} });
            json_model_15_map_pmap.put("anyOf", new Checker() { public boolean call(Object o, Path p, Report r) { return json_model_14(o, p, r);} });
            json_model_15_map_pmap.put("contains", new Checker() { public boolean call(Object o, Path p, Report r) { return json_model_17(o, p, r);} });
            json_model_15_map_pmap.put("dependentSchemas", new Checker() { public boolean call(Object o, Path p, Report r) { return _jm_f_11(o, p, r);} });
            json_model_15_map_pmap.put("else", new Checker() { public boolean call(Object o, Path p, Report r) { return json_model_17(o, p, r);} });
            json_model_15_map_pmap.put("if", new Checker() { public boolean call(Object o, Path p, Report r) { return json_model_17(o, p, r);} });
            json_model_15_map_pmap.put("items", new Checker() { public boolean call(Object o, Path p, Report r) { return json_model_17(o, p, r);} });
            json_model_15_map_pmap.put("not", new Checker() { public boolean call(Object o, Path p, Report r) { return json_model_17(o, p, r);} });
            json_model_15_map_pmap.put("oneOf", new Checker() { public boolean call(Object o, Path p, Report r) { return json_model_14(o, p, r);} });
            json_model_15_map_pmap.put("patternProperties", new Checker() { public boolean call(Object o, Path p, Report r) { return _jm_f_12(o, p, r);} });
            json_model_15_map_pmap.put("prefixItems", new Checker() { public boolean call(Object o, Path p, Report r) { return json_model_14(o, p, r);} });
            json_model_15_map_pmap.put("properties", new Checker() { public boolean call(Object o, Path p, Report r) { return _jm_f_13(o, p, r);} });
            json_model_15_map_pmap.put("propertyNames", new Checker() { public boolean call(Object o, Path p, Report r) { return json_model_17(o, p, r);} });
            json_model_15_map_pmap.put("then", new Checker() { public boolean call(Object o, Path p, Report r) { return json_model_17(o, p, r);} });
            json_schema_draft_2020_12_fuzzy_map_pmap = new HashMap<String, Checker>();
            json_schema_draft_2020_12_fuzzy_map_pmap.put("", new Checker() { public boolean call(Object o, Path p, Report r) { return json_model_17(o, p, r);} });
            json_schema_draft_2020_12_fuzzy_map_pmap.put("URI-REFERENCE", new Checker() { public boolean call(Object o, Path p, Report r) { return json_model_3(o, p, r);} });
            json_schema_draft_2020_12_fuzzy_map_pmap.put("core", new Checker() { public boolean call(Object o, Path p, Report r) { return json_model_4(o, p, r);} });
            json_schema_draft_2020_12_fuzzy_map_pmap.put("meta", new Checker() { public boolean call(Object o, Path p, Report r) { return json_model_5(o, p, r);} });
            json_schema_draft_2020_12_fuzzy_map_pmap.put("content", new Checker() { public boolean call(Object o, Path p, Report r) { return json_model_6(o, p, r);} });
            json_schema_draft_2020_12_fuzzy_map_pmap.put("unevaluated", new Checker() { public boolean call(Object o, Path p, Report r) { return json_model_7(o, p, r);} });
            json_schema_draft_2020_12_fuzzy_map_pmap.put("format", new Checker() { public boolean call(Object o, Path p, Report r) { return json_model_8(o, p, r);} });
            json_schema_draft_2020_12_fuzzy_map_pmap.put("simpleTypes", new Checker() { public boolean call(Object o, Path p, Report r) { return json_model_9(o, p, r);} });
            json_schema_draft_2020_12_fuzzy_map_pmap.put("simpleTypesArray", new Checker() { public boolean call(Object o, Path p, Report r) { return json_model_10(o, p, r);} });
            json_schema_draft_2020_12_fuzzy_map_pmap.put("stringArray", new Checker() { public boolean call(Object o, Path p, Report r) { return json_model_11(o, p, r);} });
            json_schema_draft_2020_12_fuzzy_map_pmap.put("nonNegativeInteger", new Checker() { public boolean call(Object o, Path p, Report r) { return json_model_12(o, p, r);} });
            json_schema_draft_2020_12_fuzzy_map_pmap.put("validation", new Checker() { public boolean call(Object o, Path p, Report r) { return json_model_13(o, p, r);} });
            json_schema_draft_2020_12_fuzzy_map_pmap.put("schemaArray", new Checker() { public boolean call(Object o, Path p, Report r) { return json_model_14(o, p, r);} });
            json_schema_draft_2020_12_fuzzy_map_pmap.put("applicator", new Checker() { public boolean call(Object o, Path p, Report r) { return json_model_15(o, p, r);} });
            json_schema_draft_2020_12_fuzzy_map_pmap.put("ObjectSchema", new Checker() { public boolean call(Object o, Path p, Report r) { return json_model_16(o, p, r);} });
            json_schema_draft_2020_12_fuzzy_map_pmap.put("Schema", new Checker() { public boolean call(Object o, Path p, Report r) { return json_model_17(o, p, r);} });
            json_schema_draft_2020_12_fuzzy_map_pmap.put("deprecated", new Checker() { public boolean call(Object o, Path p, Report r) { return json_model_18(o, p, r);} });
            json_schema_draft_2020_12_fuzzy_map_pmap.put("fuzzy", new Checker() { public boolean call(Object o, Path p, Report r) { return json_model_19(o, p, r);} });
                super.init(json);
            }
            catch (Exception e) {
                throw new Error("cannot initialized model checker: " + e);
            }
        }
    }

    public void free()
    {
        if (initialized)
        {
            super.free();
            _jm_cst_0_set = null;
            json_model_13_map_pmap = null;
            json_model_15_map_pmap = null;
            json_schema_draft_2020_12_fuzzy_map_pmap = null;
        }
    }

    public Checker get(String name)
    {
        return json_schema_draft_2020_12_fuzzy_map_pmap.get(name);
    }

    public Set<String> models()
    {
        return json_schema_draft_2020_12_fuzzy_map_pmap.keySet();
    }

    static public void main(String[] args) throws Exception
    {
        ModelChecker checker = new json_schema_draft_2020_12_fuzzy();
        Main.main("json_schema_draft_2020_12_fuzzy", checker, VERSION, args);
    }
}
