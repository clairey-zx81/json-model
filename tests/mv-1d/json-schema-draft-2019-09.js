#! /bin/env node
// we may need require to load re2
import { createRequire } from 'node:module';
const require = createRequire(import.meta.url);
//
// Generated by JSON Model Compiler version 2
// see https://github.com/clairey-zx81/json-model
//
import * as runtime from "json_model_runtime"
const JSON_MODEL_VERSION = "2";

let _jm_cst_0 = new Set()
var json_model_15_map = new Map()
var check_model_map = new Map()

// check $URI-REFERENCE (.'$URI-REFERENCE')
function json_model_2(val, path, rep)
{
    // .'$URI-REFERENCE'
    let res = (typeof val === 'string' || val instanceof String);
    if (! res)
    {
        rep !== null && rep.push(["unexpected string [.'$URI-REFERENCE']", path])
    }
    return res;
}

// check $id (.'$id')
function json_model_3(val, path, rep)
{
    // .'$id'
    let res = json_model_2(val, path, rep);
    if (! res)
    {
        rep !== null && rep.push(["unexpected $URI-REFERENCE [.'$id']", path])
    }
    return res;
}

// object .'$core'.'$vocabulary'
function _jm_obj_0(val, path, rep)
{
    if (! (Object.prototype.toString.call(val) === '[object Object]'))
    {
        rep !== null && rep.push(["not an object [.'$core'.'$vocabulary']", path])
        return false;
    }
    let res;
    for (const [prop, pval] of Object.entries(val))
    {
        let lpath_1 = path ? path.concat([prop]) : null;
        if (runtime.jm_is_valid_url(prop))
        {
            // handle 1 key props
            // .'$core'.'$vocabulary'.'$URI'
            res = (typeof pval === 'boolean' || pval instanceof Boolean);
            if (! res)
            {
                rep !== null && rep.push(["not a bool [.'$core'.'$vocabulary'.'$URI']", (path ? lpath_1 : null)])
                return false;
            }
        }
        else
        {
            rep !== null && rep.push(["unexpected prop [.'$core'.'$vocabulary']", (path ? lpath_1 : null)])
            return false;
        }
    }
    return true;
}

// object .'$core'.'$defs'
function _jm_obj_1(val, path, rep)
{
    if (! (Object.prototype.toString.call(val) === '[object Object]'))
    {
        rep !== null && rep.push(["not an object [.'$core'.'$defs']", path])
        return false;
    }
    let res;
    for (const [prop, pval] of Object.entries(val))
    {
        let lpath_2 = path ? path.concat([prop]) : null;
        // handle other props
        // .'$core'.'$defs'.''
        res = json_model_16(pval, (path ? lpath_2 : null), rep);
        if (! res)
        {
            rep !== null && rep.push(["unexpected $Schema [.'$core'.'$defs'.'']", (path ? lpath_2 : null)])
            return false;
        }
    }
    return true;
}

// check $core (.'$core')
function json_model_4(val, path, rep)
{
    // .'$core'
    if (! (Object.prototype.toString.call(val) === '[object Object]'))
    {
        rep !== null && rep.push(["not an object [.'$core']", path])
        return false;
    }
    let res;
    for (const [prop, pval] of Object.entries(val))
    {
        let lpath_0 = path ? path.concat([prop]) : null;
        if (prop == "$id")
        {
            // handle may $id property
            // .'$core'.'$id'
            res = json_model_2(pval, (path ? lpath_0 : null), rep);
            if (! res)
            {
                rep !== null && rep.push(["unexpected $id [.'$core'.'$id']", (path ? lpath_0 : null)])
                rep !== null && rep.push(["invalid optional prop value [.'$core'.'$id']", (path ? lpath_0 : null)])
                return false;
            }
        }
        else if (prop == "$schema")
        {
            // handle may $schema property
            // .'$core'.'$schema'
            res = ((typeof pval === 'string' || pval instanceof String)) && pval == "https://json-schema.org/draft/2019-09/schema";
            if (! res)
            {
                rep !== null && rep.push(["unexpected _https://json-schema.org/draft/2019-09/schema [.'$core'.'$schema']", (path ? lpath_0 : null)])
                rep !== null && rep.push(["invalid optional prop value [.'$core'.'$schema']", (path ? lpath_0 : null)])
                return false;
            }
        }
        else if (prop == "$ref")
        {
            // handle may $ref property
            // .'$core'.'$ref'
            res = json_model_2(pval, (path ? lpath_0 : null), rep);
            if (! res)
            {
                rep !== null && rep.push(["unexpected $URI-REFERENCE [.'$core'.'$ref']", (path ? lpath_0 : null)])
                rep !== null && rep.push(["invalid optional prop value [.'$core'.'$ref']", (path ? lpath_0 : null)])
                return false;
            }
        }
        else if (prop == "$anchor")
        {
            // handle may $anchor property
            // .'$core'.'$anchor'
            res = json_model_2(pval, (path ? lpath_0 : null), rep);
            if (! res)
            {
                rep !== null && rep.push(["unexpected $URI-REFERENCE [.'$core'.'$anchor']", (path ? lpath_0 : null)])
                rep !== null && rep.push(["invalid optional prop value [.'$core'.'$anchor']", (path ? lpath_0 : null)])
                return false;
            }
        }
        else if (prop == "$recursiveRef")
        {
            // handle may $recursiveRef property
            // .'$core'.'$recursiveRef'
            res = json_model_2(pval, (path ? lpath_0 : null), rep);
            if (! res)
            {
                rep !== null && rep.push(["unexpected $URI-REFERENCE [.'$core'.'$recursiveRef']", (path ? lpath_0 : null)])
                rep !== null && rep.push(["invalid optional prop value [.'$core'.'$recursiveRef']", (path ? lpath_0 : null)])
                return false;
            }
        }
        else if (prop == "$recursiveAnchor")
        {
            // handle may $recursiveAnchor property
            // .'$core'.'$recursiveAnchor'
            res = (typeof pval === 'boolean' || pval instanceof Boolean);
            if (! res)
            {
                rep !== null && rep.push(["not a bool [.'$core'.'$recursiveAnchor']", (path ? lpath_0 : null)])
                rep !== null && rep.push(["invalid optional prop value [.'$core'.'$recursiveAnchor']", (path ? lpath_0 : null)])
                return false;
            }
        }
        else if (prop == "$vocabulary")
        {
            // handle may $vocabulary property
            // .'$core'.'$vocabulary'
            res = _jm_obj_0(pval, (path ? lpath_0 : null), rep);
            if (! res)
            {
                rep !== null && rep.push(["unexpected element [.'$core'.'$vocabulary']", (path ? lpath_0 : null)])
                rep !== null && rep.push(["invalid optional prop value [.'$core'.'$vocabulary']", (path ? lpath_0 : null)])
                return false;
            }
        }
        else if (prop == "$comment")
        {
            // handle may $comment property
            // .'$core'.'$comment'
            res = (typeof pval === 'string' || pval instanceof String);
            if (! res)
            {
                rep !== null && rep.push(["unexpected string [.'$core'.'$comment']", (path ? lpath_0 : null)])
                rep !== null && rep.push(["invalid optional prop value [.'$core'.'$comment']", (path ? lpath_0 : null)])
                return false;
            }
        }
        else if (prop == "$defs")
        {
            // handle may $defs property
            // .'$core'.'$defs'
            res = _jm_obj_1(pval, (path ? lpath_0 : null), rep);
            if (! res)
            {
                rep !== null && rep.push(["unexpected element [.'$core'.'$defs']", (path ? lpath_0 : null)])
                rep !== null && rep.push(["invalid optional prop value [.'$core'.'$defs']", (path ? lpath_0 : null)])
                return false;
            }
        }
        else
        {
            rep !== null && rep.push(["unexpected prop [.'$core']", (path ? lpath_0 : null)])
            return false;
        }
    }
    return true;
}

// check $meta (.'$meta')
function json_model_5(val, path, rep)
{
    // .'$meta'
    if (! (Object.prototype.toString.call(val) === '[object Object]'))
    {
        rep !== null && rep.push(["not an object [.'$meta']", path])
        return false;
    }
    let res;
    for (const [prop, pval] of Object.entries(val))
    {
        let lpath_3 = path ? path.concat([prop]) : null;
        if (prop == "title")
        {
            // handle may title property
            // .'$meta'.title
            res = (typeof pval === 'string' || pval instanceof String);
            if (! res)
            {
                rep !== null && rep.push(["unexpected string [.'$meta'.title]", (path ? lpath_3 : null)])
                rep !== null && rep.push(["invalid optional prop value [.'$meta'.title]", (path ? lpath_3 : null)])
                return false;
            }
        }
        else if (prop == "description")
        {
            // handle may description property
            // .'$meta'.description
            res = (typeof pval === 'string' || pval instanceof String);
            if (! res)
            {
                rep !== null && rep.push(["unexpected string [.'$meta'.description]", (path ? lpath_3 : null)])
                rep !== null && rep.push(["invalid optional prop value [.'$meta'.description]", (path ? lpath_3 : null)])
                return false;
            }
        }
        else if (prop == "default")
        {
            // handle may default property
            // .'$meta'.default
            res = true;
        }
        else if (prop == "deprecated")
        {
            // handle may deprecated property
            // .'$meta'.deprecated
            res = (typeof pval === 'boolean' || pval instanceof Boolean);
            if (! res)
            {
                rep !== null && rep.push(["not a bool [.'$meta'.deprecated]", (path ? lpath_3 : null)])
                rep !== null && rep.push(["invalid optional prop value [.'$meta'.deprecated]", (path ? lpath_3 : null)])
                return false;
            }
        }
        else if (prop == "readOnly")
        {
            // handle may readOnly property
            // .'$meta'.readOnly
            res = (typeof pval === 'boolean' || pval instanceof Boolean);
            if (! res)
            {
                rep !== null && rep.push(["not a bool [.'$meta'.readOnly]", (path ? lpath_3 : null)])
                rep !== null && rep.push(["invalid optional prop value [.'$meta'.readOnly]", (path ? lpath_3 : null)])
                return false;
            }
        }
        else if (prop == "writeOnly")
        {
            // handle may writeOnly property
            // .'$meta'.writeOnly
            res = (typeof pval === 'boolean' || pval instanceof Boolean);
            if (! res)
            {
                rep !== null && rep.push(["not a bool [.'$meta'.writeOnly]", (path ? lpath_3 : null)])
                rep !== null && rep.push(["invalid optional prop value [.'$meta'.writeOnly]", (path ? lpath_3 : null)])
                return false;
            }
        }
        else if (prop == "examples")
        {
            // handle may examples property
            // .'$meta'.examples
            res = Array.isArray(pval);
            if (! res)
            {
                rep !== null && rep.push(["not array or unexpected array [.'$meta'.examples]", (path ? lpath_3 : null)])
                rep !== null && rep.push(["invalid optional prop value [.'$meta'.examples]", (path ? lpath_3 : null)])
                return false;
            }
        }
        else
        {
            rep !== null && rep.push(["unexpected prop [.'$meta']", (path ? lpath_3 : null)])
            return false;
        }
    }
    return true;
}

// check $content (.'$content')
function json_model_6(val, path, rep)
{
    // .'$content'
    if (! (Object.prototype.toString.call(val) === '[object Object]'))
    {
        rep !== null && rep.push(["not an object [.'$content']", path])
        return false;
    }
    let res;
    for (const [prop, pval] of Object.entries(val))
    {
        let lpath_4 = path ? path.concat([prop]) : null;
        if (prop == "contentEncoding")
        {
            // handle may contentEncoding property
            // .'$content'.contentEncoding
            res = (typeof pval === 'string' || pval instanceof String);
            if (! res)
            {
                rep !== null && rep.push(["unexpected string [.'$content'.contentEncoding]", (path ? lpath_4 : null)])
                rep !== null && rep.push(["invalid optional prop value [.'$content'.contentEncoding]", (path ? lpath_4 : null)])
                return false;
            }
        }
        else if (prop == "contentMediaType")
        {
            // handle may contentMediaType property
            // .'$content'.contentMediaType
            res = (typeof pval === 'string' || pval instanceof String);
            if (! res)
            {
                rep !== null && rep.push(["unexpected string [.'$content'.contentMediaType]", (path ? lpath_4 : null)])
                rep !== null && rep.push(["invalid optional prop value [.'$content'.contentMediaType]", (path ? lpath_4 : null)])
                return false;
            }
        }
        else if (prop == "contentSchema")
        {
            // handle may contentSchema property
            // .'$content'.contentSchema
            res = json_model_16(pval, (path ? lpath_4 : null), rep);
            if (! res)
            {
                rep !== null && rep.push(["unexpected $Schema [.'$content'.contentSchema]", (path ? lpath_4 : null)])
                rep !== null && rep.push(["invalid optional prop value [.'$content'.contentSchema]", (path ? lpath_4 : null)])
                return false;
            }
        }
        else
        {
            rep !== null && rep.push(["unexpected prop [.'$content']", (path ? lpath_4 : null)])
            return false;
        }
    }
    return true;
}

// check $format (.'$format')
function json_model_7(val, path, rep)
{
    // .'$format'
    if (! (Object.prototype.toString.call(val) === '[object Object]'))
    {
        rep !== null && rep.push(["not an object [.'$format']", path])
        return false;
    }
    let res;
    for (const [prop, pval] of Object.entries(val))
    {
        let lpath_5 = path ? path.concat([prop]) : null;
        if (prop == "format")
        {
            // handle may format property
            // .'$format'.format
            res = (typeof pval === 'string' || pval instanceof String);
            if (! res)
            {
                rep !== null && rep.push(["unexpected string [.'$format'.format]", (path ? lpath_5 : null)])
                rep !== null && rep.push(["invalid optional prop value [.'$format'.format]", (path ? lpath_5 : null)])
                return false;
            }
        }
        else
        {
            rep !== null && rep.push(["unexpected prop [.'$format']", (path ? lpath_5 : null)])
            return false;
        }
    }
    return true;
}


// check $simpleTypes (.'$simpleTypes')
function json_model_8(val, path, rep)
{
    // .'$simpleTypes'
    let res = ((val === null || (typeof val === 'number' || val instanceof Number) || (typeof val === 'boolean' || val instanceof Boolean) || (typeof val === 'string' || val instanceof String))) && _jm_cst_0.has(val);
    if (! res)
    {
        rep !== null && rep.push(["value not in enum [.'$simpleTypes'.'|']", path])
    }
    return res;
}

// check $simpleTypesArray (.'$simpleTypesArray')
function json_model_9(val, path, rep)
{
    // .'$simpleTypesArray'
    // .'$simpleTypesArray'.'@'
    let res = Array.isArray(val);
    if (res)
    {
        for (let arr_0_idx = 0; arr_0_idx < val.length; arr_0_idx++)
        {
            let arr_0_item = val[arr_0_idx]
            let arr_0_lpath = path ? path.concat([arr_0_idx]) : null;
            // .'$simpleTypesArray'.'@'.0
            res = json_model_8(arr_0_item, (path ? arr_0_lpath : null), rep);
            if (! res)
            {
                rep !== null && rep.push(["unexpected $simpleTypes [.'$simpleTypesArray'.'@'.0]", (path ? arr_0_lpath : null)])
                break;
            }
        }
    }
    if (! res)
    {
        rep !== null && rep.push(["not array or unexpected array [.'$simpleTypesArray'.'@']", path])
    }
    if (res)
    {
        let ival_0 = val.length;
        res = runtime.jm_array_is_unique(val, path, rep) && ival_0 >= 1;
        if (! res)
        {
            rep !== null && rep.push(["constraints failed [.'$simpleTypesArray']", path])
        }
    }
    return res;
}

// check $stringArray (.'$stringArray')
function json_model_10(val, path, rep)
{
    // .'$stringArray'
    // .'$stringArray'.'@'
    let res = Array.isArray(val);
    if (res)
    {
        for (let arr_1_idx = 0; arr_1_idx < val.length; arr_1_idx++)
        {
            let arr_1_item = val[arr_1_idx]
            let arr_1_lpath = path ? path.concat([arr_1_idx]) : null;
            // .'$stringArray'.'@'.0
            res = (typeof arr_1_item === 'string' || arr_1_item instanceof String);
            if (! res)
            {
                rep !== null && rep.push(["unexpected string [.'$stringArray'.'@'.0]", (path ? arr_1_lpath : null)])
                break;
            }
        }
    }
    if (! res)
    {
        rep !== null && rep.push(["not array or unexpected array [.'$stringArray'.'@']", path])
    }
    if (res)
    {
        res = runtime.jm_array_is_unique(val, path, rep);
        if (! res)
        {
            rep !== null && rep.push(["constraints failed [.'$stringArray']", path])
        }
    }
    return res;
}

// check $nonNegativeInteger (.'$nonNegativeInteger')
function json_model_11(val, path, rep)
{
    // .'$nonNegativeInteger'
    let res = ((typeof val === 'number' || val instanceof Number) && Number.isInteger(val)) && val >= 0;
    if (! res)
    {
        rep !== null && rep.push(["not a 0 loose int [.'$nonNegativeInteger']", path])
    }
    return res;
}

// object .'$validation'.dependentRequired
function _jm_obj_2(val, path, rep)
{
    if (! (Object.prototype.toString.call(val) === '[object Object]'))
    {
        rep !== null && rep.push(["not an object [.'$validation'.dependentRequired]", path])
        return false;
    }
    let res;
    for (const [prop, pval] of Object.entries(val))
    {
        let lpath_7 = path ? path.concat([prop]) : null;
        // handle other props
        // .'$validation'.dependentRequired.''
        res = json_model_10(pval, (path ? lpath_7 : null), rep);
        if (! res)
        {
            rep !== null && rep.push(["unexpected $stringArray [.'$validation'.dependentRequired.'']", (path ? lpath_7 : null)])
            return false;
        }
    }
    return true;
}

// check $validation (.'$validation')
function json_model_12(val, path, rep)
{
    // .'$validation'
    if (! (Object.prototype.toString.call(val) === '[object Object]'))
    {
        rep !== null && rep.push(["not an object [.'$validation']", path])
        return false;
    }
    let res;
    for (const [prop, pval] of Object.entries(val))
    {
        let lpath_6 = path ? path.concat([prop]) : null;
        if (prop == "type")
        {
            // handle may type property
            // .'$validation'.type
            // .'$validation'.type.'|'.0
            res = json_model_8(pval, (path ? lpath_6 : null), rep);
            if (! res)
            {
                rep !== null && rep.push(["unexpected $simpleTypes [.'$validation'.type.'|'.0]", (path ? lpath_6 : null)])
            }
            if (! res)
            {
                // .'$validation'.type.'|'.1
                res = json_model_9(pval, (path ? lpath_6 : null), rep);
                if (! res)
                {
                    rep !== null && rep.push(["unexpected $simpleTypesArray [.'$validation'.type.'|'.1]", (path ? lpath_6 : null)])
                }
            }
            if (res)
            {
                if (rep !== null) rep.length = 0
            }
            else
            {
                rep !== null && rep.push(["no model matched [.'$validation'.type.'|']", (path ? lpath_6 : null)])
                rep !== null && rep.push(["invalid optional prop value [.'$validation'.type]", (path ? lpath_6 : null)])
                return false;
            }
        }
        else if (prop == "const")
        {
            // handle may const property
            // .'$validation'.const
            res = true;
        }
        else if (prop == "enum")
        {
            // handle may enum property
            // .'$validation'.enum
            res = Array.isArray(pval);
            if (! res)
            {
                rep !== null && rep.push(["not array or unexpected array [.'$validation'.enum]", (path ? lpath_6 : null)])
                rep !== null && rep.push(["invalid optional prop value [.'$validation'.enum]", (path ? lpath_6 : null)])
                return false;
            }
        }
        else if (prop == "multipleOf")
        {
            // handle may multipleOf property
            // .'$validation'.multipleOf
            res = ((typeof pval === 'number' || pval instanceof Number)) && pval > 0.0;
            if (! res)
            {
                rep !== null && rep.push(["not a 1.0 loose float [.'$validation'.multipleOf]", (path ? lpath_6 : null)])
                rep !== null && rep.push(["invalid optional prop value [.'$validation'.multipleOf]", (path ? lpath_6 : null)])
                return false;
            }
        }
        else if (prop == "maximum")
        {
            // handle may maximum property
            // .'$validation'.maximum
            res = (typeof pval === 'number' || pval instanceof Number);
            if (! res)
            {
                rep !== null && rep.push(["not a -1.0 loose float [.'$validation'.maximum]", (path ? lpath_6 : null)])
                rep !== null && rep.push(["invalid optional prop value [.'$validation'.maximum]", (path ? lpath_6 : null)])
                return false;
            }
        }
        else if (prop == "exclusiveMaximum")
        {
            // handle may exclusiveMaximum property
            // .'$validation'.exclusiveMaximum
            res = (typeof pval === 'number' || pval instanceof Number);
            if (! res)
            {
                rep !== null && rep.push(["not a -1.0 loose float [.'$validation'.exclusiveMaximum]", (path ? lpath_6 : null)])
                rep !== null && rep.push(["invalid optional prop value [.'$validation'.exclusiveMaximum]", (path ? lpath_6 : null)])
                return false;
            }
        }
        else if (prop == "minimum")
        {
            // handle may minimum property
            // .'$validation'.minimum
            res = (typeof pval === 'number' || pval instanceof Number);
            if (! res)
            {
                rep !== null && rep.push(["not a -1.0 loose float [.'$validation'.minimum]", (path ? lpath_6 : null)])
                rep !== null && rep.push(["invalid optional prop value [.'$validation'.minimum]", (path ? lpath_6 : null)])
                return false;
            }
        }
        else if (prop == "exclusiveMinimum")
        {
            // handle may exclusiveMinimum property
            // .'$validation'.exclusiveMinimum
            res = (typeof pval === 'number' || pval instanceof Number);
            if (! res)
            {
                rep !== null && rep.push(["not a -1.0 loose float [.'$validation'.exclusiveMinimum]", (path ? lpath_6 : null)])
                rep !== null && rep.push(["invalid optional prop value [.'$validation'.exclusiveMinimum]", (path ? lpath_6 : null)])
                return false;
            }
        }
        else if (prop == "maxLength")
        {
            // handle may maxLength property
            // .'$validation'.maxLength
            res = json_model_11(pval, (path ? lpath_6 : null), rep);
            if (! res)
            {
                rep !== null && rep.push(["unexpected $nonNegativeInteger [.'$validation'.maxLength]", (path ? lpath_6 : null)])
                rep !== null && rep.push(["invalid optional prop value [.'$validation'.maxLength]", (path ? lpath_6 : null)])
                return false;
            }
        }
        else if (prop == "minLength")
        {
            // handle may minLength property
            // .'$validation'.minLength
            res = json_model_11(pval, (path ? lpath_6 : null), rep);
            if (! res)
            {
                rep !== null && rep.push(["unexpected $nonNegativeInteger [.'$validation'.minLength]", (path ? lpath_6 : null)])
                rep !== null && rep.push(["invalid optional prop value [.'$validation'.minLength]", (path ? lpath_6 : null)])
                return false;
            }
        }
        else if (prop == "pattern")
        {
            // handle may pattern property
            // .'$validation'.pattern
            res = runtime.jm_is_valid_regex(pval, false);
            if (! res)
            {
                rep !== null && rep.push(["unexpected $REGEX [.'$validation'.pattern]", (path ? lpath_6 : null)])
                rep !== null && rep.push(["invalid optional prop value [.'$validation'.pattern]", (path ? lpath_6 : null)])
                return false;
            }
        }
        else if (prop == "maxItems")
        {
            // handle may maxItems property
            // .'$validation'.maxItems
            res = json_model_11(pval, (path ? lpath_6 : null), rep);
            if (! res)
            {
                rep !== null && rep.push(["unexpected $nonNegativeInteger [.'$validation'.maxItems]", (path ? lpath_6 : null)])
                rep !== null && rep.push(["invalid optional prop value [.'$validation'.maxItems]", (path ? lpath_6 : null)])
                return false;
            }
        }
        else if (prop == "minItems")
        {
            // handle may minItems property
            // .'$validation'.minItems
            res = json_model_11(pval, (path ? lpath_6 : null), rep);
            if (! res)
            {
                rep !== null && rep.push(["unexpected $nonNegativeInteger [.'$validation'.minItems]", (path ? lpath_6 : null)])
                rep !== null && rep.push(["invalid optional prop value [.'$validation'.minItems]", (path ? lpath_6 : null)])
                return false;
            }
        }
        else if (prop == "uniqueItems")
        {
            // handle may uniqueItems property
            // .'$validation'.uniqueItems
            res = (typeof pval === 'boolean' || pval instanceof Boolean);
            if (! res)
            {
                rep !== null && rep.push(["not a bool [.'$validation'.uniqueItems]", (path ? lpath_6 : null)])
                rep !== null && rep.push(["invalid optional prop value [.'$validation'.uniqueItems]", (path ? lpath_6 : null)])
                return false;
            }
        }
        else if (prop == "maxContains")
        {
            // handle may maxContains property
            // .'$validation'.maxContains
            res = json_model_11(pval, (path ? lpath_6 : null), rep);
            if (! res)
            {
                rep !== null && rep.push(["unexpected $nonNegativeInteger [.'$validation'.maxContains]", (path ? lpath_6 : null)])
                rep !== null && rep.push(["invalid optional prop value [.'$validation'.maxContains]", (path ? lpath_6 : null)])
                return false;
            }
        }
        else if (prop == "minContains")
        {
            // handle may minContains property
            // .'$validation'.minContains
            res = json_model_11(pval, (path ? lpath_6 : null), rep);
            if (! res)
            {
                rep !== null && rep.push(["unexpected $nonNegativeInteger [.'$validation'.minContains]", (path ? lpath_6 : null)])
                rep !== null && rep.push(["invalid optional prop value [.'$validation'.minContains]", (path ? lpath_6 : null)])
                return false;
            }
        }
        else if (prop == "maxProperties")
        {
            // handle may maxProperties property
            // .'$validation'.maxProperties
            res = json_model_11(pval, (path ? lpath_6 : null), rep);
            if (! res)
            {
                rep !== null && rep.push(["unexpected $nonNegativeInteger [.'$validation'.maxProperties]", (path ? lpath_6 : null)])
                rep !== null && rep.push(["invalid optional prop value [.'$validation'.maxProperties]", (path ? lpath_6 : null)])
                return false;
            }
        }
        else if (prop == "minProperties")
        {
            // handle may minProperties property
            // .'$validation'.minProperties
            res = json_model_11(pval, (path ? lpath_6 : null), rep);
            if (! res)
            {
                rep !== null && rep.push(["unexpected $nonNegativeInteger [.'$validation'.minProperties]", (path ? lpath_6 : null)])
                rep !== null && rep.push(["invalid optional prop value [.'$validation'.minProperties]", (path ? lpath_6 : null)])
                return false;
            }
        }
        else if (prop == "required")
        {
            // handle may required property
            // .'$validation'.required
            res = json_model_10(pval, (path ? lpath_6 : null), rep);
            if (! res)
            {
                rep !== null && rep.push(["unexpected $stringArray [.'$validation'.required]", (path ? lpath_6 : null)])
                rep !== null && rep.push(["invalid optional prop value [.'$validation'.required]", (path ? lpath_6 : null)])
                return false;
            }
        }
        else if (prop == "dependentRequired")
        {
            // handle may dependentRequired property
            // .'$validation'.dependentRequired
            res = _jm_obj_2(pval, (path ? lpath_6 : null), rep);
            if (! res)
            {
                rep !== null && rep.push(["unexpected element [.'$validation'.dependentRequired]", (path ? lpath_6 : null)])
                rep !== null && rep.push(["invalid optional prop value [.'$validation'.dependentRequired]", (path ? lpath_6 : null)])
                return false;
            }
        }
        else
        {
            rep !== null && rep.push(["unexpected prop [.'$validation']", (path ? lpath_6 : null)])
            return false;
        }
    }
    return true;
}

// check $schemaArray (.'$schemaArray')
function json_model_13(val, path, rep)
{
    // .'$schemaArray'
    // .'$schemaArray'.'@'
    let res = Array.isArray(val);
    if (res)
    {
        for (let arr_2_idx = 0; arr_2_idx < val.length; arr_2_idx++)
        {
            let arr_2_item = val[arr_2_idx]
            let arr_2_lpath = path ? path.concat([arr_2_idx]) : null;
            // .'$schemaArray'.'@'.0
            res = json_model_16(arr_2_item, (path ? arr_2_lpath : null), rep);
            if (! res)
            {
                rep !== null && rep.push(["unexpected $Schema [.'$schemaArray'.'@'.0]", (path ? arr_2_lpath : null)])
                break;
            }
        }
    }
    if (! res)
    {
        rep !== null && rep.push(["not array or unexpected array [.'$schemaArray'.'@']", path])
    }
    if (res)
    {
        let ival_1 = val.length;
        res = ival_1 >= 1;
        if (! res)
        {
            rep !== null && rep.push(["constraints failed [.'$schemaArray']", path])
        }
    }
    return res;
}

// object .'$applicator'.properties
function _jm_obj_3(val, path, rep)
{
    if (! (Object.prototype.toString.call(val) === '[object Object]'))
    {
        rep !== null && rep.push(["not an object [.'$applicator'.properties]", path])
        return false;
    }
    let res;
    for (const [prop, pval] of Object.entries(val))
    {
        let lpath_9 = path ? path.concat([prop]) : null;
        // handle other props
        // .'$applicator'.properties.''
        res = json_model_16(pval, (path ? lpath_9 : null), rep);
        if (! res)
        {
            rep !== null && rep.push(["unexpected $Schema [.'$applicator'.properties.'']", (path ? lpath_9 : null)])
            return false;
        }
    }
    return true;
}

// object .'$applicator'.patternProperties
function _jm_obj_4(val, path, rep)
{
    if (! (Object.prototype.toString.call(val) === '[object Object]'))
    {
        rep !== null && rep.push(["not an object [.'$applicator'.patternProperties]", path])
        return false;
    }
    let res;
    for (const [prop, pval] of Object.entries(val))
    {
        let lpath_10 = path ? path.concat([prop]) : null;
        if (runtime.jm_is_valid_regex(prop, false))
        {
            // handle 1 key props
            // .'$applicator'.patternProperties.'$REGEX'
            res = json_model_16(pval, (path ? lpath_10 : null), rep);
            if (! res)
            {
                rep !== null && rep.push(["unexpected $Schema [.'$applicator'.patternProperties.'$REGEX']", (path ? lpath_10 : null)])
                return false;
            }
        }
        else
        {
            rep !== null && rep.push(["unexpected prop [.'$applicator'.patternProperties]", (path ? lpath_10 : null)])
            return false;
        }
    }
    return true;
}

// object .'$applicator'.dependentSchemas
function _jm_obj_5(val, path, rep)
{
    if (! (Object.prototype.toString.call(val) === '[object Object]'))
    {
        rep !== null && rep.push(["not an object [.'$applicator'.dependentSchemas]", path])
        return false;
    }
    let res;
    for (const [prop, pval] of Object.entries(val))
    {
        let lpath_11 = path ? path.concat([prop]) : null;
        // handle other props
        // .'$applicator'.dependentSchemas.''
        res = json_model_16(pval, (path ? lpath_11 : null), rep);
        if (! res)
        {
            rep !== null && rep.push(["unexpected $Schema [.'$applicator'.dependentSchemas.'']", (path ? lpath_11 : null)])
            return false;
        }
    }
    return true;
}

// check $applicator (.'$applicator')
function json_model_14(val, path, rep)
{
    // .'$applicator'
    if (! (Object.prototype.toString.call(val) === '[object Object]'))
    {
        rep !== null && rep.push(["not an object [.'$applicator']", path])
        return false;
    }
    let res;
    for (const [prop, pval] of Object.entries(val))
    {
        let lpath_8 = path ? path.concat([prop]) : null;
        if (prop == "items")
        {
            // handle may items property
            // .'$applicator'.items
            // .'$applicator'.items.'|'.0
            res = json_model_16(pval, (path ? lpath_8 : null), rep);
            if (! res)
            {
                rep !== null && rep.push(["unexpected $Schema [.'$applicator'.items.'|'.0]", (path ? lpath_8 : null)])
            }
            if (! res)
            {
                // .'$applicator'.items.'|'.1
                res = json_model_13(pval, (path ? lpath_8 : null), rep);
                if (! res)
                {
                    rep !== null && rep.push(["unexpected $schemaArray [.'$applicator'.items.'|'.1]", (path ? lpath_8 : null)])
                }
            }
            if (res)
            {
                if (rep !== null) rep.length = 0
            }
            else
            {
                rep !== null && rep.push(["no model matched [.'$applicator'.items.'|']", (path ? lpath_8 : null)])
                rep !== null && rep.push(["invalid optional prop value [.'$applicator'.items]", (path ? lpath_8 : null)])
                return false;
            }
        }
        else if (prop == "contains")
        {
            // handle may contains property
            // .'$applicator'.contains
            res = json_model_16(pval, (path ? lpath_8 : null), rep);
            if (! res)
            {
                rep !== null && rep.push(["unexpected $Schema [.'$applicator'.contains]", (path ? lpath_8 : null)])
                rep !== null && rep.push(["invalid optional prop value [.'$applicator'.contains]", (path ? lpath_8 : null)])
                return false;
            }
        }
        else if (prop == "additionalItems")
        {
            // handle may additionalItems property
            // .'$applicator'.additionalItems
            res = json_model_16(pval, (path ? lpath_8 : null), rep);
            if (! res)
            {
                rep !== null && rep.push(["unexpected $Schema [.'$applicator'.additionalItems]", (path ? lpath_8 : null)])
                rep !== null && rep.push(["invalid optional prop value [.'$applicator'.additionalItems]", (path ? lpath_8 : null)])
                return false;
            }
        }
        else if (prop == "additionalProperties")
        {
            // handle may additionalProperties property
            // .'$applicator'.additionalProperties
            res = json_model_16(pval, (path ? lpath_8 : null), rep);
            if (! res)
            {
                rep !== null && rep.push(["unexpected $Schema [.'$applicator'.additionalProperties]", (path ? lpath_8 : null)])
                rep !== null && rep.push(["invalid optional prop value [.'$applicator'.additionalProperties]", (path ? lpath_8 : null)])
                return false;
            }
        }
        else if (prop == "properties")
        {
            // handle may properties property
            // .'$applicator'.properties
            res = _jm_obj_3(pval, (path ? lpath_8 : null), rep);
            if (! res)
            {
                rep !== null && rep.push(["unexpected element [.'$applicator'.properties]", (path ? lpath_8 : null)])
                rep !== null && rep.push(["invalid optional prop value [.'$applicator'.properties]", (path ? lpath_8 : null)])
                return false;
            }
        }
        else if (prop == "patternProperties")
        {
            // handle may patternProperties property
            // .'$applicator'.patternProperties
            res = _jm_obj_4(pval, (path ? lpath_8 : null), rep);
            if (! res)
            {
                rep !== null && rep.push(["unexpected element [.'$applicator'.patternProperties]", (path ? lpath_8 : null)])
                rep !== null && rep.push(["invalid optional prop value [.'$applicator'.patternProperties]", (path ? lpath_8 : null)])
                return false;
            }
        }
        else if (prop == "dependentSchemas")
        {
            // handle may dependentSchemas property
            // .'$applicator'.dependentSchemas
            res = _jm_obj_5(pval, (path ? lpath_8 : null), rep);
            if (! res)
            {
                rep !== null && rep.push(["unexpected element [.'$applicator'.dependentSchemas]", (path ? lpath_8 : null)])
                rep !== null && rep.push(["invalid optional prop value [.'$applicator'.dependentSchemas]", (path ? lpath_8 : null)])
                return false;
            }
        }
        else if (prop == "propertyNames")
        {
            // handle may propertyNames property
            // .'$applicator'.propertyNames
            res = json_model_16(pval, (path ? lpath_8 : null), rep);
            if (! res)
            {
                rep !== null && rep.push(["unexpected $Schema [.'$applicator'.propertyNames]", (path ? lpath_8 : null)])
                rep !== null && rep.push(["invalid optional prop value [.'$applicator'.propertyNames]", (path ? lpath_8 : null)])
                return false;
            }
        }
        else if (prop == "unevaluatedItems")
        {
            // handle may unevaluatedItems property
            // .'$applicator'.unevaluatedItems
            res = json_model_16(pval, (path ? lpath_8 : null), rep);
            if (! res)
            {
                rep !== null && rep.push(["unexpected $Schema [.'$applicator'.unevaluatedItems]", (path ? lpath_8 : null)])
                rep !== null && rep.push(["invalid optional prop value [.'$applicator'.unevaluatedItems]", (path ? lpath_8 : null)])
                return false;
            }
        }
        else if (prop == "unevaluatedProperties")
        {
            // handle may unevaluatedProperties property
            // .'$applicator'.unevaluatedProperties
            res = json_model_16(pval, (path ? lpath_8 : null), rep);
            if (! res)
            {
                rep !== null && rep.push(["unexpected $Schema [.'$applicator'.unevaluatedProperties]", (path ? lpath_8 : null)])
                rep !== null && rep.push(["invalid optional prop value [.'$applicator'.unevaluatedProperties]", (path ? lpath_8 : null)])
                return false;
            }
        }
        else if (prop == "if")
        {
            // handle may if property
            // .'$applicator'.if
            res = json_model_16(pval, (path ? lpath_8 : null), rep);
            if (! res)
            {
                rep !== null && rep.push(["unexpected $Schema [.'$applicator'.if]", (path ? lpath_8 : null)])
                rep !== null && rep.push(["invalid optional prop value [.'$applicator'.if]", (path ? lpath_8 : null)])
                return false;
            }
        }
        else if (prop == "then")
        {
            // handle may then property
            // .'$applicator'.then
            res = json_model_16(pval, (path ? lpath_8 : null), rep);
            if (! res)
            {
                rep !== null && rep.push(["unexpected $Schema [.'$applicator'.then]", (path ? lpath_8 : null)])
                rep !== null && rep.push(["invalid optional prop value [.'$applicator'.then]", (path ? lpath_8 : null)])
                return false;
            }
        }
        else if (prop == "else")
        {
            // handle may else property
            // .'$applicator'.else
            res = json_model_16(pval, (path ? lpath_8 : null), rep);
            if (! res)
            {
                rep !== null && rep.push(["unexpected $Schema [.'$applicator'.else]", (path ? lpath_8 : null)])
                rep !== null && rep.push(["invalid optional prop value [.'$applicator'.else]", (path ? lpath_8 : null)])
                return false;
            }
        }
        else if (prop == "not")
        {
            // handle may not property
            // .'$applicator'.not
            res = json_model_16(pval, (path ? lpath_8 : null), rep);
            if (! res)
            {
                rep !== null && rep.push(["unexpected $Schema [.'$applicator'.not]", (path ? lpath_8 : null)])
                rep !== null && rep.push(["invalid optional prop value [.'$applicator'.not]", (path ? lpath_8 : null)])
                return false;
            }
        }
        else if (prop == "allOf")
        {
            // handle may allOf property
            // .'$applicator'.allOf
            res = json_model_13(pval, (path ? lpath_8 : null), rep);
            if (! res)
            {
                rep !== null && rep.push(["unexpected $schemaArray [.'$applicator'.allOf]", (path ? lpath_8 : null)])
                rep !== null && rep.push(["invalid optional prop value [.'$applicator'.allOf]", (path ? lpath_8 : null)])
                return false;
            }
        }
        else if (prop == "anyOf")
        {
            // handle may anyOf property
            // .'$applicator'.anyOf
            res = json_model_13(pval, (path ? lpath_8 : null), rep);
            if (! res)
            {
                rep !== null && rep.push(["unexpected $schemaArray [.'$applicator'.anyOf]", (path ? lpath_8 : null)])
                rep !== null && rep.push(["invalid optional prop value [.'$applicator'.anyOf]", (path ? lpath_8 : null)])
                return false;
            }
        }
        else if (prop == "oneOf")
        {
            // handle may oneOf property
            // .'$applicator'.oneOf
            res = json_model_13(pval, (path ? lpath_8 : null), rep);
            if (! res)
            {
                rep !== null && rep.push(["unexpected $schemaArray [.'$applicator'.oneOf]", (path ? lpath_8 : null)])
                rep !== null && rep.push(["invalid optional prop value [.'$applicator'.oneOf]", (path ? lpath_8 : null)])
                return false;
            }
        }
        else
        {
            rep !== null && rep.push(["unexpected prop [.'$applicator']", (path ? lpath_8 : null)])
            return false;
        }
    }
    return true;
}

// check json_model_15_map_$comment (.'$ObjectSchema'.'$comment')
function _jm_f_0(val, path, rep)
{
    // .'$ObjectSchema'.'$comment'
    let res = (typeof val === 'string' || val instanceof String);
    if (! res)
    {
        rep !== null && rep.push(["unexpected string [.'$ObjectSchema'.'$comment']", path])
    }
    return res;
}

// check json_model_15_map_$defs (.'$ObjectSchema'.'$defs')
function _jm_f_1(val, path, rep)
{
    // .'$ObjectSchema'.'$defs'
    if (! (Object.prototype.toString.call(val) === '[object Object]'))
    {
        rep !== null && rep.push(["not an object [.'$ObjectSchema'.'$defs']", path])
        return false;
    }
    let res;
    for (const [prop, pval] of Object.entries(val))
    {
        let lpath_13 = path ? path.concat([prop]) : null;
        // handle other props
        // .'$ObjectSchema'.'$defs'.''
        res = json_model_16(pval, (path ? lpath_13 : null), rep);
        if (! res)
        {
            rep !== null && rep.push(["unexpected $Schema [.'$ObjectSchema'.'$defs'.'']", (path ? lpath_13 : null)])
            return false;
        }
    }
    return true;
}

// check json_model_15_map_$recursiveAnchor (.'$ObjectSchema'.'$recursiveAnchor')
function _jm_f_2(val, path, rep)
{
    // .'$ObjectSchema'.'$recursiveAnchor'
    let res = (typeof val === 'boolean' || val instanceof Boolean);
    if (! res)
    {
        rep !== null && rep.push(["not a bool [.'$ObjectSchema'.'$recursiveAnchor']", path])
    }
    return res;
}

// check json_model_15_map_$schema (.'$ObjectSchema'.'$schema')
function _jm_f_3(val, path, rep)
{
    // .'$ObjectSchema'.'$schema'
    let res = ((typeof val === 'string' || val instanceof String)) && val == "https://json-schema.org/draft/2019-09/schema";
    if (! res)
    {
        rep !== null && rep.push(["unexpected _https://json-schema.org/draft/2019-09/schema [.'$ObjectSchema'.'$schema']", path])
    }
    return res;
}

// check json_model_15_map_$vocabulary (.'$ObjectSchema'.'$vocabulary')
function _jm_f_4(val, path, rep)
{
    // .'$ObjectSchema'.'$vocabulary'
    if (! (Object.prototype.toString.call(val) === '[object Object]'))
    {
        rep !== null && rep.push(["not an object [.'$ObjectSchema'.'$vocabulary']", path])
        return false;
    }
    let res;
    for (const [prop, pval] of Object.entries(val))
    {
        let lpath_14 = path ? path.concat([prop]) : null;
        if (runtime.jm_is_valid_url(prop))
        {
            // handle 1 key props
            // .'$ObjectSchema'.'$vocabulary'.'$URI'
            res = (typeof pval === 'boolean' || pval instanceof Boolean);
            if (! res)
            {
                rep !== null && rep.push(["not a bool [.'$ObjectSchema'.'$vocabulary'.'$URI']", (path ? lpath_14 : null)])
                return false;
            }
        }
        else
        {
            rep !== null && rep.push(["unexpected prop [.'$ObjectSchema'.'$vocabulary']", (path ? lpath_14 : null)])
            return false;
        }
    }
    return true;
}

// check json_model_15_map_const (.'$ObjectSchema'.const)
function _jm_f_5(val, path, rep)
{
    // .'$ObjectSchema'.const
    return true;
}

// check json_model_15_map_contentEncoding (.'$ObjectSchema'.contentEncoding)
function _jm_f_6(val, path, rep)
{
    // .'$ObjectSchema'.contentEncoding
    let res = (typeof val === 'string' || val instanceof String);
    if (! res)
    {
        rep !== null && rep.push(["unexpected string [.'$ObjectSchema'.contentEncoding]", path])
    }
    return res;
}

// check json_model_15_map_contentMediaType (.'$ObjectSchema'.contentMediaType)
function _jm_f_7(val, path, rep)
{
    // .'$ObjectSchema'.contentMediaType
    let res = (typeof val === 'string' || val instanceof String);
    if (! res)
    {
        rep !== null && rep.push(["unexpected string [.'$ObjectSchema'.contentMediaType]", path])
    }
    return res;
}

// check json_model_15_map_default (.'$ObjectSchema'.default)
function _jm_f_8(val, path, rep)
{
    // .'$ObjectSchema'.default
    return true;
}

// check json_model_15_map_dependentRequired (.'$ObjectSchema'.dependentRequired)
function _jm_f_9(val, path, rep)
{
    // .'$ObjectSchema'.dependentRequired
    if (! (Object.prototype.toString.call(val) === '[object Object]'))
    {
        rep !== null && rep.push(["not an object [.'$ObjectSchema'.dependentRequired]", path])
        return false;
    }
    let res;
    for (const [prop, pval] of Object.entries(val))
    {
        let lpath_15 = path ? path.concat([prop]) : null;
        // handle other props
        // .'$ObjectSchema'.dependentRequired.''
        res = json_model_10(pval, (path ? lpath_15 : null), rep);
        if (! res)
        {
            rep !== null && rep.push(["unexpected $stringArray [.'$ObjectSchema'.dependentRequired.'']", (path ? lpath_15 : null)])
            return false;
        }
    }
    return true;
}

// check json_model_15_map_dependentSchemas (.'$ObjectSchema'.dependentSchemas)
function _jm_f_10(val, path, rep)
{
    // .'$ObjectSchema'.dependentSchemas
    if (! (Object.prototype.toString.call(val) === '[object Object]'))
    {
        rep !== null && rep.push(["not an object [.'$ObjectSchema'.dependentSchemas]", path])
        return false;
    }
    let res;
    for (const [prop, pval] of Object.entries(val))
    {
        let lpath_16 = path ? path.concat([prop]) : null;
        // handle other props
        // .'$ObjectSchema'.dependentSchemas.''
        res = json_model_16(pval, (path ? lpath_16 : null), rep);
        if (! res)
        {
            rep !== null && rep.push(["unexpected $Schema [.'$ObjectSchema'.dependentSchemas.'']", (path ? lpath_16 : null)])
            return false;
        }
    }
    return true;
}

// check json_model_15_map_deprecated (.'$ObjectSchema'.deprecated)
function _jm_f_11(val, path, rep)
{
    // .'$ObjectSchema'.deprecated
    let res = (typeof val === 'boolean' || val instanceof Boolean);
    if (! res)
    {
        rep !== null && rep.push(["not a bool [.'$ObjectSchema'.deprecated]", path])
    }
    return res;
}

// check json_model_15_map_description (.'$ObjectSchema'.description)
function _jm_f_12(val, path, rep)
{
    // .'$ObjectSchema'.description
    let res = (typeof val === 'string' || val instanceof String);
    if (! res)
    {
        rep !== null && rep.push(["unexpected string [.'$ObjectSchema'.description]", path])
    }
    return res;
}

// check json_model_15_map_enum (.'$ObjectSchema'.enum)
function _jm_f_13(val, path, rep)
{
    // .'$ObjectSchema'.enum
    let res = Array.isArray(val);
    if (! res)
    {
        rep !== null && rep.push(["not array or unexpected array [.'$ObjectSchema'.enum]", path])
    }
    return res;
}

// check json_model_15_map_examples (.'$ObjectSchema'.examples)
function _jm_f_14(val, path, rep)
{
    // .'$ObjectSchema'.examples
    let res = Array.isArray(val);
    if (! res)
    {
        rep !== null && rep.push(["not array or unexpected array [.'$ObjectSchema'.examples]", path])
    }
    return res;
}

// check json_model_15_map_exclusiveMaximum (.'$ObjectSchema'.exclusiveMaximum)
function _jm_f_15(val, path, rep)
{
    // .'$ObjectSchema'.exclusiveMaximum
    let res = (typeof val === 'number' || val instanceof Number);
    if (! res)
    {
        rep !== null && rep.push(["not a -1.0 loose float [.'$ObjectSchema'.exclusiveMaximum]", path])
    }
    return res;
}

// check json_model_15_map_exclusiveMinimum (.'$ObjectSchema'.exclusiveMinimum)
function _jm_f_16(val, path, rep)
{
    // .'$ObjectSchema'.exclusiveMinimum
    let res = (typeof val === 'number' || val instanceof Number);
    if (! res)
    {
        rep !== null && rep.push(["not a -1.0 loose float [.'$ObjectSchema'.exclusiveMinimum]", path])
    }
    return res;
}

// check json_model_15_map_format (.'$ObjectSchema'.format)
function _jm_f_17(val, path, rep)
{
    // .'$ObjectSchema'.format
    let res = (typeof val === 'string' || val instanceof String);
    if (! res)
    {
        rep !== null && rep.push(["unexpected string [.'$ObjectSchema'.format]", path])
    }
    return res;
}

// check json_model_15_map_items (.'$ObjectSchema'.items)
function _jm_f_18(val, path, rep)
{
    // .'$ObjectSchema'.items
    // .'$ObjectSchema'.items.'|'.0
    let res = json_model_16(val, path, rep);
    if (! res)
    {
        rep !== null && rep.push(["unexpected $Schema [.'$ObjectSchema'.items.'|'.0]", path])
    }
    if (! res)
    {
        // .'$ObjectSchema'.items.'|'.1
        res = json_model_13(val, path, rep);
        if (! res)
        {
            rep !== null && rep.push(["unexpected $schemaArray [.'$ObjectSchema'.items.'|'.1]", path])
        }
    }
    if (res)
    {
        if (rep !== null) rep.length = 0
    }
    else
    {
        rep !== null && rep.push(["no model matched [.'$ObjectSchema'.items.'|']", path])
    }
    return res;
}

// check json_model_15_map_maximum (.'$ObjectSchema'.maximum)
function _jm_f_19(val, path, rep)
{
    // .'$ObjectSchema'.maximum
    let res = (typeof val === 'number' || val instanceof Number);
    if (! res)
    {
        rep !== null && rep.push(["not a -1.0 loose float [.'$ObjectSchema'.maximum]", path])
    }
    return res;
}

// check json_model_15_map_minimum (.'$ObjectSchema'.minimum)
function _jm_f_20(val, path, rep)
{
    // .'$ObjectSchema'.minimum
    let res = (typeof val === 'number' || val instanceof Number);
    if (! res)
    {
        rep !== null && rep.push(["not a -1.0 loose float [.'$ObjectSchema'.minimum]", path])
    }
    return res;
}

// check json_model_15_map_multipleOf (.'$ObjectSchema'.multipleOf)
function _jm_f_21(val, path, rep)
{
    // .'$ObjectSchema'.multipleOf
    let res = ((typeof val === 'number' || val instanceof Number)) && val > 0.0;
    if (! res)
    {
        rep !== null && rep.push(["not a 1.0 loose float [.'$ObjectSchema'.multipleOf]", path])
    }
    return res;
}

// check json_model_15_map_pattern (.'$ObjectSchema'.pattern)
function _jm_f_22(val, path, rep)
{
    // .'$ObjectSchema'.pattern
    let res = runtime.jm_is_valid_regex(val, false);
    if (! res)
    {
        rep !== null && rep.push(["unexpected $REGEX [.'$ObjectSchema'.pattern]", path])
    }
    return res;
}

// check json_model_15_map_patternProperties (.'$ObjectSchema'.patternProperties)
function _jm_f_23(val, path, rep)
{
    // .'$ObjectSchema'.patternProperties
    if (! (Object.prototype.toString.call(val) === '[object Object]'))
    {
        rep !== null && rep.push(["not an object [.'$ObjectSchema'.patternProperties]", path])
        return false;
    }
    let res;
    for (const [prop, pval] of Object.entries(val))
    {
        let lpath_17 = path ? path.concat([prop]) : null;
        if (runtime.jm_is_valid_regex(prop, false))
        {
            // handle 1 key props
            // .'$ObjectSchema'.patternProperties.'$REGEX'
            res = json_model_16(pval, (path ? lpath_17 : null), rep);
            if (! res)
            {
                rep !== null && rep.push(["unexpected $Schema [.'$ObjectSchema'.patternProperties.'$REGEX']", (path ? lpath_17 : null)])
                return false;
            }
        }
        else
        {
            rep !== null && rep.push(["unexpected prop [.'$ObjectSchema'.patternProperties]", (path ? lpath_17 : null)])
            return false;
        }
    }
    return true;
}

// check json_model_15_map_properties (.'$ObjectSchema'.properties)
function _jm_f_24(val, path, rep)
{
    // .'$ObjectSchema'.properties
    if (! (Object.prototype.toString.call(val) === '[object Object]'))
    {
        rep !== null && rep.push(["not an object [.'$ObjectSchema'.properties]", path])
        return false;
    }
    let res;
    for (const [prop, pval] of Object.entries(val))
    {
        let lpath_18 = path ? path.concat([prop]) : null;
        // handle other props
        // .'$ObjectSchema'.properties.''
        res = json_model_16(pval, (path ? lpath_18 : null), rep);
        if (! res)
        {
            rep !== null && rep.push(["unexpected $Schema [.'$ObjectSchema'.properties.'']", (path ? lpath_18 : null)])
            return false;
        }
    }
    return true;
}

// check json_model_15_map_readOnly (.'$ObjectSchema'.readOnly)
function _jm_f_25(val, path, rep)
{
    // .'$ObjectSchema'.readOnly
    let res = (typeof val === 'boolean' || val instanceof Boolean);
    if (! res)
    {
        rep !== null && rep.push(["not a bool [.'$ObjectSchema'.readOnly]", path])
    }
    return res;
}

// check json_model_15_map_title (.'$ObjectSchema'.title)
function _jm_f_26(val, path, rep)
{
    // .'$ObjectSchema'.title
    let res = (typeof val === 'string' || val instanceof String);
    if (! res)
    {
        rep !== null && rep.push(["unexpected string [.'$ObjectSchema'.title]", path])
    }
    return res;
}

// check json_model_15_map_type (.'$ObjectSchema'.type)
function _jm_f_27(val, path, rep)
{
    // .'$ObjectSchema'.type
    // .'$ObjectSchema'.type.'|'.0
    let res = json_model_8(val, path, rep);
    if (! res)
    {
        rep !== null && rep.push(["unexpected $simpleTypes [.'$ObjectSchema'.type.'|'.0]", path])
    }
    if (! res)
    {
        // .'$ObjectSchema'.type.'|'.1
        res = json_model_9(val, path, rep);
        if (! res)
        {
            rep !== null && rep.push(["unexpected $simpleTypesArray [.'$ObjectSchema'.type.'|'.1]", path])
        }
    }
    if (res)
    {
        if (rep !== null) rep.length = 0
    }
    else
    {
        rep !== null && rep.push(["no model matched [.'$ObjectSchema'.type.'|']", path])
    }
    return res;
}

// check json_model_15_map_uniqueItems (.'$ObjectSchema'.uniqueItems)
function _jm_f_28(val, path, rep)
{
    // .'$ObjectSchema'.uniqueItems
    let res = (typeof val === 'boolean' || val instanceof Boolean);
    if (! res)
    {
        rep !== null && rep.push(["not a bool [.'$ObjectSchema'.uniqueItems]", path])
    }
    return res;
}

// check json_model_15_map_writeOnly (.'$ObjectSchema'.writeOnly)
function _jm_f_29(val, path, rep)
{
    // .'$ObjectSchema'.writeOnly
    let res = (typeof val === 'boolean' || val instanceof Boolean);
    if (! res)
    {
        rep !== null && rep.push(["not a bool [.'$ObjectSchema'.writeOnly]", path])
    }
    return res;
}


// check $ObjectSchema (.'$ObjectSchema')
function json_model_15(val, path, rep)
{
    // .'$ObjectSchema'
    if (! (Object.prototype.toString.call(val) === '[object Object]'))
    {
        rep !== null && rep.push(["not an object [.'$ObjectSchema']", path])
        return false;
    }
    let pfun;
    for (const [prop, pval] of Object.entries(val))
    {
        let lpath_12 = path ? path.concat([prop]) : null;
        if ((pfun = json_model_15_map.get(prop)))
        {
            // handle 57 may props
            if (pfun !== undefined && ! pfun(pval, (path ? lpath_12 : null), rep))
            {
                rep !== null && rep.push(["invalid optional prop value [.'$ObjectSchema']", (path ? lpath_12 : null)])
                return false;
            }
        }
        else
        {
            rep !== null && rep.push(["unexpected prop [.'$ObjectSchema']", (path ? lpath_12 : null)])
            return false;
        }
    }
    return true;
}

// check $Schema (.'$Schema')
function json_model_16(val, path, rep)
{
    // .'$Schema'
    // .'$Schema'.'|'.0
    let res = (typeof val === 'boolean' || val instanceof Boolean);
    if (! res)
    {
        rep !== null && rep.push(["not a bool [.'$Schema'.'|'.0]", path])
    }
    if (! res)
    {
        // .'$Schema'.'|'.1
        res = json_model_15(val, path, rep);
        if (! res)
        {
            rep !== null && rep.push(["unexpected $ObjectSchema [.'$Schema'.'|'.1]", path])
        }
    }
    if (res)
    {
        if (rep !== null) rep.length = 0
    }
    else
    {
        rep !== null && rep.push(["no model matched [.'$Schema'.'|']", path])
    }
    return res;
}

// check $ (.)
function json_model_1(val, path, rep)
{
    // JSON Model for JSON Schema 2019-09 (aka 08) [JSON_MODEL_LOOSE_NUMBER]
    // .
    // .'@'
    let res = json_model_16(val, path, rep);
    if (! res)
    {
        rep !== null && rep.push(["unexpected $Schema [.'@']", path])
    }
    return res;
}


var initialized = false

// differed module initializations
export function check_model_init()
{
    if (! initialized)
    {
        initialized = true;
        runtime.jm_set_rx(RegExp)
        _jm_cst_0.add("array")
        _jm_cst_0.add("boolean")
        _jm_cst_0.add("integer")
        _jm_cst_0.add("null")
        _jm_cst_0.add("number")
        _jm_cst_0.add("object")
        _jm_cst_0.add("string")
        json_model_15_map.set("$anchor", json_model_2)
        json_model_15_map.set("$comment", _jm_f_0)
        json_model_15_map.set("$defs", _jm_f_1)
        json_model_15_map.set("$id", json_model_2)
        json_model_15_map.set("$recursiveAnchor", _jm_f_2)
        json_model_15_map.set("$recursiveRef", json_model_2)
        json_model_15_map.set("$ref", json_model_2)
        json_model_15_map.set("$schema", _jm_f_3)
        json_model_15_map.set("$vocabulary", _jm_f_4)
        json_model_15_map.set("additionalItems", json_model_16)
        json_model_15_map.set("additionalProperties", json_model_16)
        json_model_15_map.set("allOf", json_model_13)
        json_model_15_map.set("anyOf", json_model_13)
        json_model_15_map.set("const", _jm_f_5)
        json_model_15_map.set("contains", json_model_16)
        json_model_15_map.set("contentEncoding", _jm_f_6)
        json_model_15_map.set("contentMediaType", _jm_f_7)
        json_model_15_map.set("contentSchema", json_model_16)
        json_model_15_map.set("default", _jm_f_8)
        json_model_15_map.set("dependentRequired", _jm_f_9)
        json_model_15_map.set("dependentSchemas", _jm_f_10)
        json_model_15_map.set("deprecated", _jm_f_11)
        json_model_15_map.set("description", _jm_f_12)
        json_model_15_map.set("else", json_model_16)
        json_model_15_map.set("enum", _jm_f_13)
        json_model_15_map.set("examples", _jm_f_14)
        json_model_15_map.set("exclusiveMaximum", _jm_f_15)
        json_model_15_map.set("exclusiveMinimum", _jm_f_16)
        json_model_15_map.set("format", _jm_f_17)
        json_model_15_map.set("if", json_model_16)
        json_model_15_map.set("items", _jm_f_18)
        json_model_15_map.set("maxContains", json_model_11)
        json_model_15_map.set("maxItems", json_model_11)
        json_model_15_map.set("maxLength", json_model_11)
        json_model_15_map.set("maxProperties", json_model_11)
        json_model_15_map.set("maximum", _jm_f_19)
        json_model_15_map.set("minContains", json_model_11)
        json_model_15_map.set("minItems", json_model_11)
        json_model_15_map.set("minLength", json_model_11)
        json_model_15_map.set("minProperties", json_model_11)
        json_model_15_map.set("minimum", _jm_f_20)
        json_model_15_map.set("multipleOf", _jm_f_21)
        json_model_15_map.set("not", json_model_16)
        json_model_15_map.set("oneOf", json_model_13)
        json_model_15_map.set("pattern", _jm_f_22)
        json_model_15_map.set("patternProperties", _jm_f_23)
        json_model_15_map.set("properties", _jm_f_24)
        json_model_15_map.set("propertyNames", json_model_16)
        json_model_15_map.set("readOnly", _jm_f_25)
        json_model_15_map.set("required", json_model_10)
        json_model_15_map.set("then", json_model_16)
        json_model_15_map.set("title", _jm_f_26)
        json_model_15_map.set("type", _jm_f_27)
        json_model_15_map.set("unevaluatedItems", json_model_16)
        json_model_15_map.set("unevaluatedProperties", json_model_16)
        json_model_15_map.set("uniqueItems", _jm_f_28)
        json_model_15_map.set("writeOnly", _jm_f_29)
        check_model_map.set("", json_model_1)
        check_model_map.set("URI-REFERENCE", json_model_2)
        check_model_map.set("id", json_model_2)
        check_model_map.set("core", json_model_4)
        check_model_map.set("meta", json_model_5)
        check_model_map.set("content", json_model_6)
        check_model_map.set("format", json_model_7)
        check_model_map.set("simpleTypes", json_model_8)
        check_model_map.set("simpleTypesArray", json_model_9)
        check_model_map.set("stringArray", json_model_10)
        check_model_map.set("nonNegativeInteger", json_model_11)
        check_model_map.set("validation", json_model_12)
        check_model_map.set("schemaArray", json_model_13)
        check_model_map.set("applicator", json_model_14)
        check_model_map.set("ObjectSchema", json_model_15)
        check_model_map.set("Schema", json_model_16)
    }
}

// differed module cleanup
export function check_model_free()
{
    if (initialized)
    {
        initialized = false;
    }
}

export function check_model(val, name, rep)
{
    let checker = check_model_map.get(name)
    if (checker === undefined)
        throw `no checker for "${name}"`
    let path = rep !== null ? [] : null

    return checker(val, path, rep)
}

// possibly run as main based on a guess
import main from "json_model_runtime/main.js"

if (import.meta.url.endsWith(process.argv[1]))
    main(check_model_init, check_model, check_model_free)
