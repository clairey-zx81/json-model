//
// Generated by JSON Model Compiler version 2
// see https://github.com/clairey-zx81/json-model
//

import json_model.*;
import java.util.Map;
import java.util.Set;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Iterator;
import java.util.regex.Pattern;
import java.util.regex.Matcher;

@SuppressWarnings("unchecked")
public class json_schema_draft_2019_09 extends ModelChecker
{
    static public final String VERSION = "2";

    Map<String, Checker> json_model_4_map_pmap;
    Map<String, Checker> json_model_5_map_pmap;
    Set<Object> _jm_cst_0_set;
    Map<String, Checker> json_model_12_map_pmap;
    Map<String, Checker> json_model_14_map_pmap;
    Map<String, Checker> json_model_15_map_pmap;
    public Map<String, Checker> json_schema_draft_2019_09_map_pmap;

    // check $URI-REFERENCE (.'$URI-REFERENCE')
    public boolean json_model_2(Object val, Path path, Report rep)
    {
        boolean res;
        // .'$URI-REFERENCE'
        res = json.isString(val);
        if (! res)
        {
            if (rep != null) rep.addEntry("unexpected string [.'$URI-REFERENCE']", path);
        }
        return res;
    }

    // check $id (.'$id')
    public boolean json_model_3(Object val, Path path, Report rep)
    {
        boolean res;
        // .'$id'
        res = json_model_2(val, path, rep);
        if (! res)
        {
            if (rep != null) rep.addEntry("unexpected $URI-REFERENCE [.'$id']", path);
        }
        return res;
    }

    // check json_model_4_map_$comment (.'$core'.'$comment')
    public boolean _jm_f_0(Object val, Path path, Report rep)
    {
        boolean res;
        // .'$core'.'$comment'
        res = json.isString(val);
        if (! res)
        {
            if (rep != null) rep.addEntry("unexpected string [.'$core'.'$comment']", path);
        }
        return res;
    }

    // check json_model_4_map_$defs (.'$core'.'$defs')
    public boolean _jm_f_1(Object val, Path path, Report rep)
    {
        // .'$core'.'$defs'
        if (! json.isObject(val))
        {
            if (rep != null) rep.addEntry("not an object [.'$core'.'$defs']", path);
            return false;
        }
        boolean res;
        Iterator<String> prop_loop = json.objectIterator(val);
        while (prop_loop.hasNext())
        {
            String prop = prop_loop.next();
            Object pval = json.objectValue(val, prop);
            Path lpath_1 = new Path(prop, path);
            // handle other props
            // .'$core'.'$defs'.''
            res = json_model_16(pval, (path != null ? lpath_1 : null), rep);
            if (! res)
            {
                if (rep != null) rep.addEntry("unexpected $Schema [.'$core'.'$defs'.'']", (path != null ? lpath_1 : null));
                return false;
            }
        }
        return true;
    }

    // check json_model_4_map_$recursiveAnchor (.'$core'.'$recursiveAnchor')
    public boolean _jm_f_2(Object val, Path path, Report rep)
    {
        boolean res;
        // .'$core'.'$recursiveAnchor'
        res = json.isBoolean(val);
        if (! res)
        {
            if (rep != null) rep.addEntry("not a bool [.'$core'.'$recursiveAnchor']", path);
        }
        return res;
    }

    // check json_model_4_map_$schema (.'$core'.'$schema')
    public boolean _jm_f_3(Object val, Path path, Report rep)
    {
        boolean res;
        // .'$core'.'$schema'
        res = json.isString(val) && json.asString(val).compareTo("https://json-schema.org/draft/2019-09/schema") == 0;
        if (! res)
        {
            if (rep != null) rep.addEntry("unexpected _https://json-schema.org/draft/2019-09/schema [.'$core'.'$schema']", path);
        }
        return res;
    }

    // check json_model_4_map_$vocabulary (.'$core'.'$vocabulary')
    public boolean _jm_f_4(Object val, Path path, Report rep)
    {
        // .'$core'.'$vocabulary'
        if (! json.isObject(val))
        {
            if (rep != null) rep.addEntry("not an object [.'$core'.'$vocabulary']", path);
            return false;
        }
        boolean res;
        Iterator<String> prop_loop = json.objectIterator(val);
        while (prop_loop.hasNext())
        {
            String prop = prop_loop.next();
            Object pval = json.objectValue(val, prop);
            Path lpath_2 = new Path(prop, path);
            if (rt.is_valid_url(prop))
            {
                // handle 1 key props
                // .'$core'.'$vocabulary'.'$URI'
                res = json.isBoolean(pval);
                if (! res)
                {
                    if (rep != null) rep.addEntry("not a bool [.'$core'.'$vocabulary'.'$URI']", (path != null ? lpath_2 : null));
                    return false;
                }
            }
            else
            {
                if (rep != null) rep.addEntry("unexpected prop [.'$core'.'$vocabulary']", (path != null ? lpath_2 : null));
                return false;
            }
        }
        return true;
    }


    // check $core (.'$core')
    public boolean json_model_4(Object val, Path path, Report rep)
    {
        // .'$core'
        if (! json.isObject(val))
        {
            if (rep != null) rep.addEntry("not an object [.'$core']", path);
            return false;
        }
        Checker pfun;
        Iterator<String> prop_loop = json.objectIterator(val);
        while (prop_loop.hasNext())
        {
            String prop = prop_loop.next();
            Object pval = json.objectValue(val, prop);
            Path lpath_0 = new Path(prop, path);
            if ((pfun = json_model_4_map_pmap.get(prop)) != null)
            {
                // handle 9 may props
                if (pfun != null && ! (pfun.call(pval, (path != null ? lpath_0 : null), rep)))
                {
                    if (rep != null) rep.addEntry("invalid optional prop value [.'$core']", (path != null ? lpath_0 : null));
                    return false;
                }
            }
            else
            {
                if (rep != null) rep.addEntry("unexpected prop [.'$core']", (path != null ? lpath_0 : null));
                return false;
            }
        }
        return true;
    }

    // check json_model_5_map_default (.'$meta'.default)
    public boolean _jm_f_5(Object val, Path path, Report rep)
    {
        boolean res;
        // .'$meta'.default
        res = true;
        return res;
    }

    // check json_model_5_map_deprecated (.'$meta'.deprecated)
    public boolean _jm_f_6(Object val, Path path, Report rep)
    {
        boolean res;
        // .'$meta'.deprecated
        res = json.isBoolean(val);
        if (! res)
        {
            if (rep != null) rep.addEntry("not a bool [.'$meta'.deprecated]", path);
        }
        return res;
    }

    // check json_model_5_map_description (.'$meta'.description)
    public boolean _jm_f_7(Object val, Path path, Report rep)
    {
        boolean res;
        // .'$meta'.description
        res = json.isString(val);
        if (! res)
        {
            if (rep != null) rep.addEntry("unexpected string [.'$meta'.description]", path);
        }
        return res;
    }

    // check json_model_5_map_examples (.'$meta'.examples)
    public boolean _jm_f_8(Object val, Path path, Report rep)
    {
        boolean res;
        // .'$meta'.examples
        res = json.isArray(val);
        if (! res)
        {
            if (rep != null) rep.addEntry("not array or unexpected array [.'$meta'.examples]", path);
        }
        return res;
    }

    // check json_model_5_map_readOnly (.'$meta'.readOnly)
    public boolean _jm_f_9(Object val, Path path, Report rep)
    {
        boolean res;
        // .'$meta'.readOnly
        res = json.isBoolean(val);
        if (! res)
        {
            if (rep != null) rep.addEntry("not a bool [.'$meta'.readOnly]", path);
        }
        return res;
    }

    // check json_model_5_map_title (.'$meta'.title)
    public boolean _jm_f_10(Object val, Path path, Report rep)
    {
        boolean res;
        // .'$meta'.title
        res = json.isString(val);
        if (! res)
        {
            if (rep != null) rep.addEntry("unexpected string [.'$meta'.title]", path);
        }
        return res;
    }

    // check json_model_5_map_writeOnly (.'$meta'.writeOnly)
    public boolean _jm_f_11(Object val, Path path, Report rep)
    {
        boolean res;
        // .'$meta'.writeOnly
        res = json.isBoolean(val);
        if (! res)
        {
            if (rep != null) rep.addEntry("not a bool [.'$meta'.writeOnly]", path);
        }
        return res;
    }


    // check $meta (.'$meta')
    public boolean json_model_5(Object val, Path path, Report rep)
    {
        // .'$meta'
        if (! json.isObject(val))
        {
            if (rep != null) rep.addEntry("not an object [.'$meta']", path);
            return false;
        }
        Checker pfun;
        Iterator<String> prop_loop = json.objectIterator(val);
        while (prop_loop.hasNext())
        {
            String prop = prop_loop.next();
            Object pval = json.objectValue(val, prop);
            Path lpath_3 = new Path(prop, path);
            if ((pfun = json_model_5_map_pmap.get(prop)) != null)
            {
                // handle 7 may props
                if (pfun != null && ! (pfun.call(pval, (path != null ? lpath_3 : null), rep)))
                {
                    if (rep != null) rep.addEntry("invalid optional prop value [.'$meta']", (path != null ? lpath_3 : null));
                    return false;
                }
            }
            else
            {
                if (rep != null) rep.addEntry("unexpected prop [.'$meta']", (path != null ? lpath_3 : null));
                return false;
            }
        }
        return true;
    }

    // check $content (.'$content')
    public boolean json_model_6(Object val, Path path, Report rep)
    {
        // .'$content'
        if (! json.isObject(val))
        {
            if (rep != null) rep.addEntry("not an object [.'$content']", path);
            return false;
        }
        boolean res;
        Iterator<String> prop_loop = json.objectIterator(val);
        while (prop_loop.hasNext())
        {
            String prop = prop_loop.next();
            Object pval = json.objectValue(val, prop);
            Path lpath_4 = new Path(prop, path);
            if (prop.compareTo("contentEncoding") == 0)
            {
                // handle may contentEncoding property
                // .'$content'.contentEncoding
                res = json.isString(pval);
                if (! res)
                {
                    if (rep != null) rep.addEntry("unexpected string [.'$content'.contentEncoding]", (path != null ? lpath_4 : null));
                    if (rep != null) rep.addEntry("invalid optional prop value [.'$content'.contentEncoding]", (path != null ? lpath_4 : null));
                    return false;
                }
            }
            else if (prop.compareTo("contentMediaType") == 0)
            {
                // handle may contentMediaType property
                // .'$content'.contentMediaType
                res = json.isString(pval);
                if (! res)
                {
                    if (rep != null) rep.addEntry("unexpected string [.'$content'.contentMediaType]", (path != null ? lpath_4 : null));
                    if (rep != null) rep.addEntry("invalid optional prop value [.'$content'.contentMediaType]", (path != null ? lpath_4 : null));
                    return false;
                }
            }
            else if (prop.compareTo("contentSchema") == 0)
            {
                // handle may contentSchema property
                // .'$content'.contentSchema
                res = json_model_16(pval, (path != null ? lpath_4 : null), rep);
                if (! res)
                {
                    if (rep != null) rep.addEntry("unexpected $Schema [.'$content'.contentSchema]", (path != null ? lpath_4 : null));
                    if (rep != null) rep.addEntry("invalid optional prop value [.'$content'.contentSchema]", (path != null ? lpath_4 : null));
                    return false;
                }
            }
            else
            {
                if (rep != null) rep.addEntry("unexpected prop [.'$content']", (path != null ? lpath_4 : null));
                return false;
            }
        }
        return true;
    }

    // check $format (.'$format')
    public boolean json_model_7(Object val, Path path, Report rep)
    {
        // .'$format'
        if (! json.isObject(val))
        {
            if (rep != null) rep.addEntry("not an object [.'$format']", path);
            return false;
        }
        boolean res;
        Iterator<String> prop_loop = json.objectIterator(val);
        while (prop_loop.hasNext())
        {
            String prop = prop_loop.next();
            Object pval = json.objectValue(val, prop);
            Path lpath_5 = new Path(prop, path);
            if (prop.compareTo("format") == 0)
            {
                // handle may format property
                // .'$format'.format
                res = json.isString(pval);
                if (! res)
                {
                    if (rep != null) rep.addEntry("unexpected string [.'$format'.format]", (path != null ? lpath_5 : null));
                    if (rep != null) rep.addEntry("invalid optional prop value [.'$format'.format]", (path != null ? lpath_5 : null));
                    return false;
                }
            }
            else
            {
                if (rep != null) rep.addEntry("unexpected prop [.'$format']", (path != null ? lpath_5 : null));
                return false;
            }
        }
        return true;
    }


    // check $simpleTypes (.'$simpleTypes')
    public boolean json_model_8(Object val, Path path, Report rep)
    {
        boolean res;
        // .'$simpleTypes'
        res = json.isScalar(val) && _jm_cst_0_set.contains(val);
        if (! res)
        {
            if (rep != null) rep.addEntry("value not in enum [.'$simpleTypes'.'|']", path);
        }
        return res;
    }

    // check $simpleTypesArray (.'$simpleTypesArray')
    public boolean json_model_9(Object val, Path path, Report rep)
    {
        boolean res;
        // .'$simpleTypesArray'
        // .'$simpleTypesArray'.'@'
        res = json.isArray(val);
        if (res)
        {
            int arr_0_idx = -1;
            Iterator<Object> arr_0_item_loop = json.arrayIterator(val);
            while (arr_0_item_loop.hasNext())
            {
                arr_0_idx++;
                Object arr_0_item = arr_0_item_loop.next();
                Path arr_0_lpath = new Path(arr_0_idx, path);
                // .'$simpleTypesArray'.'@'.0
                res = json_model_8(arr_0_item, (path != null ? arr_0_lpath : null), rep);
                if (! res)
                {
                    if (rep != null) rep.addEntry("unexpected $simpleTypes [.'$simpleTypesArray'.'@'.0]", (path != null ? arr_0_lpath : null));
                    break;
                }
            }
        }
        if (! res)
        {
            if (rep != null) rep.addEntry("not array or unexpected array [.'$simpleTypesArray'.'@']", path);
        }
        if (res)
        {
            long ival_0 = json.arrayLength(val);
            res = rt.array_is_unique(val, path, rep) && ival_0 >= 1;
            if (! res)
            {
                if (rep != null) rep.addEntry("constraints failed [.'$simpleTypesArray']", path);
            }
        }
        return res;
    }

    // check $stringArray (.'$stringArray')
    public boolean json_model_10(Object val, Path path, Report rep)
    {
        boolean res;
        // .'$stringArray'
        // .'$stringArray'.'@'
        res = json.isArray(val);
        if (res)
        {
            int arr_1_idx = -1;
            Iterator<Object> arr_1_item_loop = json.arrayIterator(val);
            while (arr_1_item_loop.hasNext())
            {
                arr_1_idx++;
                Object arr_1_item = arr_1_item_loop.next();
                Path arr_1_lpath = new Path(arr_1_idx, path);
                // .'$stringArray'.'@'.0
                res = json.isString(arr_1_item);
                if (! res)
                {
                    if (rep != null) rep.addEntry("unexpected string [.'$stringArray'.'@'.0]", (path != null ? arr_1_lpath : null));
                    break;
                }
            }
        }
        if (! res)
        {
            if (rep != null) rep.addEntry("not array or unexpected array [.'$stringArray'.'@']", path);
        }
        if (res)
        {
            res = rt.array_is_unique(val, path, rep);
            if (! res)
            {
                if (rep != null) rep.addEntry("constraints failed [.'$stringArray']", path);
            }
        }
        return res;
    }

    // check $nonNegativeInteger (.'$nonNegativeInteger')
    public boolean json_model_11(Object val, Path path, Report rep)
    {
        boolean res;
        // .'$nonNegativeInteger'
        res = ((json.isInteger(val) || (json.isDouble(val) && json.asDouble(val) == ((long) json.asDouble(val))))) && json.asNumber(val) >= 0;
        if (! res)
        {
            if (rep != null) rep.addEntry("not a 0 loose int [.'$nonNegativeInteger']", path);
        }
        return res;
    }

    // check json_model_12_map_const (.'$validation'.const)
    public boolean _jm_f_12(Object val, Path path, Report rep)
    {
        boolean res;
        // .'$validation'.const
        res = true;
        return res;
    }

    // check json_model_12_map_dependentRequired (.'$validation'.dependentRequired)
    public boolean _jm_f_13(Object val, Path path, Report rep)
    {
        // .'$validation'.dependentRequired
        if (! json.isObject(val))
        {
            if (rep != null) rep.addEntry("not an object [.'$validation'.dependentRequired]", path);
            return false;
        }
        boolean res;
        Iterator<String> prop_loop = json.objectIterator(val);
        while (prop_loop.hasNext())
        {
            String prop = prop_loop.next();
            Object pval = json.objectValue(val, prop);
            Path lpath_7 = new Path(prop, path);
            // handle other props
            // .'$validation'.dependentRequired.''
            res = json_model_10(pval, (path != null ? lpath_7 : null), rep);
            if (! res)
            {
                if (rep != null) rep.addEntry("unexpected $stringArray [.'$validation'.dependentRequired.'']", (path != null ? lpath_7 : null));
                return false;
            }
        }
        return true;
    }

    // check json_model_12_map_enum (.'$validation'.enum)
    public boolean _jm_f_14(Object val, Path path, Report rep)
    {
        boolean res;
        // .'$validation'.enum
        res = json.isArray(val);
        if (! res)
        {
            if (rep != null) rep.addEntry("not array or unexpected array [.'$validation'.enum]", path);
        }
        return res;
    }

    // check json_model_12_map_exclusiveMaximum (.'$validation'.exclusiveMaximum)
    public boolean _jm_f_15(Object val, Path path, Report rep)
    {
        boolean res;
        // .'$validation'.exclusiveMaximum
        res = json.isNumber(val);
        if (! res)
        {
            if (rep != null) rep.addEntry("not a -1.0 loose float [.'$validation'.exclusiveMaximum]", path);
        }
        return res;
    }

    // check json_model_12_map_exclusiveMinimum (.'$validation'.exclusiveMinimum)
    public boolean _jm_f_16(Object val, Path path, Report rep)
    {
        boolean res;
        // .'$validation'.exclusiveMinimum
        res = json.isNumber(val);
        if (! res)
        {
            if (rep != null) rep.addEntry("not a -1.0 loose float [.'$validation'.exclusiveMinimum]", path);
        }
        return res;
    }

    // check json_model_12_map_maximum (.'$validation'.maximum)
    public boolean _jm_f_17(Object val, Path path, Report rep)
    {
        boolean res;
        // .'$validation'.maximum
        res = json.isNumber(val);
        if (! res)
        {
            if (rep != null) rep.addEntry("not a -1.0 loose float [.'$validation'.maximum]", path);
        }
        return res;
    }

    // check json_model_12_map_minimum (.'$validation'.minimum)
    public boolean _jm_f_18(Object val, Path path, Report rep)
    {
        boolean res;
        // .'$validation'.minimum
        res = json.isNumber(val);
        if (! res)
        {
            if (rep != null) rep.addEntry("not a -1.0 loose float [.'$validation'.minimum]", path);
        }
        return res;
    }

    // check json_model_12_map_multipleOf (.'$validation'.multipleOf)
    public boolean _jm_f_19(Object val, Path path, Report rep)
    {
        boolean res;
        // .'$validation'.multipleOf
        res = json.isNumber(val) && json.asNumber(val) > 0.0;
        if (! res)
        {
            if (rep != null) rep.addEntry("not a 1.0 loose float [.'$validation'.multipleOf]", path);
        }
        return res;
    }

    // check json_model_12_map_pattern (.'$validation'.pattern)
    public boolean _jm_f_20(Object val, Path path, Report rep)
    {
        boolean res;
        // .'$validation'.pattern
        res = json.isString(val) && rt.is_valid_regex(json.asString(val));
        if (! res)
        {
            if (rep != null) rep.addEntry("unexpected $REGEX [.'$validation'.pattern]", path);
        }
        return res;
    }

    // check json_model_12_map_type (.'$validation'.type)
    public boolean _jm_f_21(Object val, Path path, Report rep)
    {
        boolean res;
        // .'$validation'.type
        // .'$validation'.type.'|'.0
        res = json_model_8(val, path, rep);
        if (! res)
        {
            if (rep != null) rep.addEntry("unexpected $simpleTypes [.'$validation'.type.'|'.0]", path);
        }
        if (! res)
        {
            // .'$validation'.type.'|'.1
            res = json_model_9(val, path, rep);
            if (! res)
            {
                if (rep != null) rep.addEntry("unexpected $simpleTypesArray [.'$validation'.type.'|'.1]", path);
            }
        }
        if (res)
        {
            if (rep != null) rep.clearEntries();
        }
        else
        {
            if (rep != null) rep.addEntry("no model matched [.'$validation'.type.'|']", path);
        }
        return res;
    }

    // check json_model_12_map_uniqueItems (.'$validation'.uniqueItems)
    public boolean _jm_f_22(Object val, Path path, Report rep)
    {
        boolean res;
        // .'$validation'.uniqueItems
        res = json.isBoolean(val);
        if (! res)
        {
            if (rep != null) rep.addEntry("not a bool [.'$validation'.uniqueItems]", path);
        }
        return res;
    }


    // check $validation (.'$validation')
    public boolean json_model_12(Object val, Path path, Report rep)
    {
        // .'$validation'
        if (! json.isObject(val))
        {
            if (rep != null) rep.addEntry("not an object [.'$validation']", path);
            return false;
        }
        Checker pfun;
        Iterator<String> prop_loop = json.objectIterator(val);
        while (prop_loop.hasNext())
        {
            String prop = prop_loop.next();
            Object pval = json.objectValue(val, prop);
            Path lpath_6 = new Path(prop, path);
            if ((pfun = json_model_12_map_pmap.get(prop)) != null)
            {
                // handle 20 may props
                if (pfun != null && ! (pfun.call(pval, (path != null ? lpath_6 : null), rep)))
                {
                    if (rep != null) rep.addEntry("invalid optional prop value [.'$validation']", (path != null ? lpath_6 : null));
                    return false;
                }
            }
            else
            {
                if (rep != null) rep.addEntry("unexpected prop [.'$validation']", (path != null ? lpath_6 : null));
                return false;
            }
        }
        return true;
    }

    // check $schemaArray (.'$schemaArray')
    public boolean json_model_13(Object val, Path path, Report rep)
    {
        boolean res;
        // .'$schemaArray'
        // .'$schemaArray'.'@'
        res = json.isArray(val);
        if (res)
        {
            int arr_2_idx = -1;
            Iterator<Object> arr_2_item_loop = json.arrayIterator(val);
            while (arr_2_item_loop.hasNext())
            {
                arr_2_idx++;
                Object arr_2_item = arr_2_item_loop.next();
                Path arr_2_lpath = new Path(arr_2_idx, path);
                // .'$schemaArray'.'@'.0
                res = json_model_16(arr_2_item, (path != null ? arr_2_lpath : null), rep);
                if (! res)
                {
                    if (rep != null) rep.addEntry("unexpected $Schema [.'$schemaArray'.'@'.0]", (path != null ? arr_2_lpath : null));
                    break;
                }
            }
        }
        if (! res)
        {
            if (rep != null) rep.addEntry("not array or unexpected array [.'$schemaArray'.'@']", path);
        }
        if (res)
        {
            long ival_1 = json.arrayLength(val);
            res = ival_1 >= 1;
            if (! res)
            {
                if (rep != null) rep.addEntry("constraints failed [.'$schemaArray']", path);
            }
        }
        return res;
    }

    // check json_model_14_map_dependentSchemas (.'$applicator'.dependentSchemas)
    public boolean _jm_f_23(Object val, Path path, Report rep)
    {
        // .'$applicator'.dependentSchemas
        if (! json.isObject(val))
        {
            if (rep != null) rep.addEntry("not an object [.'$applicator'.dependentSchemas]", path);
            return false;
        }
        boolean res;
        Iterator<String> prop_loop = json.objectIterator(val);
        while (prop_loop.hasNext())
        {
            String prop = prop_loop.next();
            Object pval = json.objectValue(val, prop);
            Path lpath_9 = new Path(prop, path);
            // handle other props
            // .'$applicator'.dependentSchemas.''
            res = json_model_16(pval, (path != null ? lpath_9 : null), rep);
            if (! res)
            {
                if (rep != null) rep.addEntry("unexpected $Schema [.'$applicator'.dependentSchemas.'']", (path != null ? lpath_9 : null));
                return false;
            }
        }
        return true;
    }

    // check json_model_14_map_items (.'$applicator'.items)
    public boolean _jm_f_24(Object val, Path path, Report rep)
    {
        boolean res;
        // .'$applicator'.items
        // .'$applicator'.items.'|'.0
        res = json_model_16(val, path, rep);
        if (! res)
        {
            if (rep != null) rep.addEntry("unexpected $Schema [.'$applicator'.items.'|'.0]", path);
        }
        if (! res)
        {
            // .'$applicator'.items.'|'.1
            res = json_model_13(val, path, rep);
            if (! res)
            {
                if (rep != null) rep.addEntry("unexpected $schemaArray [.'$applicator'.items.'|'.1]", path);
            }
        }
        if (res)
        {
            if (rep != null) rep.clearEntries();
        }
        else
        {
            if (rep != null) rep.addEntry("no model matched [.'$applicator'.items.'|']", path);
        }
        return res;
    }

    // check json_model_14_map_patternProperties (.'$applicator'.patternProperties)
    public boolean _jm_f_25(Object val, Path path, Report rep)
    {
        // .'$applicator'.patternProperties
        if (! json.isObject(val))
        {
            if (rep != null) rep.addEntry("not an object [.'$applicator'.patternProperties]", path);
            return false;
        }
        boolean res;
        Iterator<String> prop_loop = json.objectIterator(val);
        while (prop_loop.hasNext())
        {
            String prop = prop_loop.next();
            Object pval = json.objectValue(val, prop);
            Path lpath_10 = new Path(prop, path);
            if (rt.is_valid_regex(prop))
            {
                // handle 1 key props
                // .'$applicator'.patternProperties.'$REGEX'
                res = json_model_16(pval, (path != null ? lpath_10 : null), rep);
                if (! res)
                {
                    if (rep != null) rep.addEntry("unexpected $Schema [.'$applicator'.patternProperties.'$REGEX']", (path != null ? lpath_10 : null));
                    return false;
                }
            }
            else
            {
                if (rep != null) rep.addEntry("unexpected prop [.'$applicator'.patternProperties]", (path != null ? lpath_10 : null));
                return false;
            }
        }
        return true;
    }

    // check json_model_14_map_properties (.'$applicator'.properties)
    public boolean _jm_f_26(Object val, Path path, Report rep)
    {
        // .'$applicator'.properties
        if (! json.isObject(val))
        {
            if (rep != null) rep.addEntry("not an object [.'$applicator'.properties]", path);
            return false;
        }
        boolean res;
        Iterator<String> prop_loop = json.objectIterator(val);
        while (prop_loop.hasNext())
        {
            String prop = prop_loop.next();
            Object pval = json.objectValue(val, prop);
            Path lpath_11 = new Path(prop, path);
            // handle other props
            // .'$applicator'.properties.''
            res = json_model_16(pval, (path != null ? lpath_11 : null), rep);
            if (! res)
            {
                if (rep != null) rep.addEntry("unexpected $Schema [.'$applicator'.properties.'']", (path != null ? lpath_11 : null));
                return false;
            }
        }
        return true;
    }


    // check $applicator (.'$applicator')
    public boolean json_model_14(Object val, Path path, Report rep)
    {
        // .'$applicator'
        if (! json.isObject(val))
        {
            if (rep != null) rep.addEntry("not an object [.'$applicator']", path);
            return false;
        }
        Checker pfun;
        Iterator<String> prop_loop = json.objectIterator(val);
        while (prop_loop.hasNext())
        {
            String prop = prop_loop.next();
            Object pval = json.objectValue(val, prop);
            Path lpath_8 = new Path(prop, path);
            if ((pfun = json_model_14_map_pmap.get(prop)) != null)
            {
                // handle 17 may props
                if (pfun != null && ! (pfun.call(pval, (path != null ? lpath_8 : null), rep)))
                {
                    if (rep != null) rep.addEntry("invalid optional prop value [.'$applicator']", (path != null ? lpath_8 : null));
                    return false;
                }
            }
            else
            {
                if (rep != null) rep.addEntry("unexpected prop [.'$applicator']", (path != null ? lpath_8 : null));
                return false;
            }
        }
        return true;
    }

    // check json_model_15_map_$comment (.'$ObjectSchema'.'$comment')
    public boolean _jm_f_27(Object val, Path path, Report rep)
    {
        boolean res;
        // .'$ObjectSchema'.'$comment'
        res = json.isString(val);
        if (! res)
        {
            if (rep != null) rep.addEntry("unexpected string [.'$ObjectSchema'.'$comment']", path);
        }
        return res;
    }

    // check json_model_15_map_$defs (.'$ObjectSchema'.'$defs')
    public boolean _jm_f_28(Object val, Path path, Report rep)
    {
        // .'$ObjectSchema'.'$defs'
        if (! json.isObject(val))
        {
            if (rep != null) rep.addEntry("not an object [.'$ObjectSchema'.'$defs']", path);
            return false;
        }
        boolean res;
        Iterator<String> prop_loop = json.objectIterator(val);
        while (prop_loop.hasNext())
        {
            String prop = prop_loop.next();
            Object pval = json.objectValue(val, prop);
            Path lpath_13 = new Path(prop, path);
            // handle other props
            // .'$ObjectSchema'.'$defs'.''
            res = json_model_16(pval, (path != null ? lpath_13 : null), rep);
            if (! res)
            {
                if (rep != null) rep.addEntry("unexpected $Schema [.'$ObjectSchema'.'$defs'.'']", (path != null ? lpath_13 : null));
                return false;
            }
        }
        return true;
    }

    // check json_model_15_map_$recursiveAnchor (.'$ObjectSchema'.'$recursiveAnchor')
    public boolean _jm_f_29(Object val, Path path, Report rep)
    {
        boolean res;
        // .'$ObjectSchema'.'$recursiveAnchor'
        res = json.isBoolean(val);
        if (! res)
        {
            if (rep != null) rep.addEntry("not a bool [.'$ObjectSchema'.'$recursiveAnchor']", path);
        }
        return res;
    }

    // check json_model_15_map_$schema (.'$ObjectSchema'.'$schema')
    public boolean _jm_f_30(Object val, Path path, Report rep)
    {
        boolean res;
        // .'$ObjectSchema'.'$schema'
        res = json.isString(val) && json.asString(val).compareTo("https://json-schema.org/draft/2019-09/schema") == 0;
        if (! res)
        {
            if (rep != null) rep.addEntry("unexpected _https://json-schema.org/draft/2019-09/schema [.'$ObjectSchema'.'$schema']", path);
        }
        return res;
    }

    // check json_model_15_map_$vocabulary (.'$ObjectSchema'.'$vocabulary')
    public boolean _jm_f_31(Object val, Path path, Report rep)
    {
        // .'$ObjectSchema'.'$vocabulary'
        if (! json.isObject(val))
        {
            if (rep != null) rep.addEntry("not an object [.'$ObjectSchema'.'$vocabulary']", path);
            return false;
        }
        boolean res;
        Iterator<String> prop_loop = json.objectIterator(val);
        while (prop_loop.hasNext())
        {
            String prop = prop_loop.next();
            Object pval = json.objectValue(val, prop);
            Path lpath_14 = new Path(prop, path);
            if (rt.is_valid_url(prop))
            {
                // handle 1 key props
                // .'$ObjectSchema'.'$vocabulary'.'$URI'
                res = json.isBoolean(pval);
                if (! res)
                {
                    if (rep != null) rep.addEntry("not a bool [.'$ObjectSchema'.'$vocabulary'.'$URI']", (path != null ? lpath_14 : null));
                    return false;
                }
            }
            else
            {
                if (rep != null) rep.addEntry("unexpected prop [.'$ObjectSchema'.'$vocabulary']", (path != null ? lpath_14 : null));
                return false;
            }
        }
        return true;
    }

    // check json_model_15_map_const (.'$ObjectSchema'.const)
    public boolean _jm_f_32(Object val, Path path, Report rep)
    {
        boolean res;
        // .'$ObjectSchema'.const
        res = true;
        return res;
    }

    // check json_model_15_map_contentEncoding (.'$ObjectSchema'.contentEncoding)
    public boolean _jm_f_33(Object val, Path path, Report rep)
    {
        boolean res;
        // .'$ObjectSchema'.contentEncoding
        res = json.isString(val);
        if (! res)
        {
            if (rep != null) rep.addEntry("unexpected string [.'$ObjectSchema'.contentEncoding]", path);
        }
        return res;
    }

    // check json_model_15_map_contentMediaType (.'$ObjectSchema'.contentMediaType)
    public boolean _jm_f_34(Object val, Path path, Report rep)
    {
        boolean res;
        // .'$ObjectSchema'.contentMediaType
        res = json.isString(val);
        if (! res)
        {
            if (rep != null) rep.addEntry("unexpected string [.'$ObjectSchema'.contentMediaType]", path);
        }
        return res;
    }

    // check json_model_15_map_default (.'$ObjectSchema'.default)
    public boolean _jm_f_35(Object val, Path path, Report rep)
    {
        boolean res;
        // .'$ObjectSchema'.default
        res = true;
        return res;
    }

    // check json_model_15_map_dependentRequired (.'$ObjectSchema'.dependentRequired)
    public boolean _jm_f_36(Object val, Path path, Report rep)
    {
        // .'$ObjectSchema'.dependentRequired
        if (! json.isObject(val))
        {
            if (rep != null) rep.addEntry("not an object [.'$ObjectSchema'.dependentRequired]", path);
            return false;
        }
        boolean res;
        Iterator<String> prop_loop = json.objectIterator(val);
        while (prop_loop.hasNext())
        {
            String prop = prop_loop.next();
            Object pval = json.objectValue(val, prop);
            Path lpath_15 = new Path(prop, path);
            // handle other props
            // .'$ObjectSchema'.dependentRequired.''
            res = json_model_10(pval, (path != null ? lpath_15 : null), rep);
            if (! res)
            {
                if (rep != null) rep.addEntry("unexpected $stringArray [.'$ObjectSchema'.dependentRequired.'']", (path != null ? lpath_15 : null));
                return false;
            }
        }
        return true;
    }

    // check json_model_15_map_dependentSchemas (.'$ObjectSchema'.dependentSchemas)
    public boolean _jm_f_37(Object val, Path path, Report rep)
    {
        // .'$ObjectSchema'.dependentSchemas
        if (! json.isObject(val))
        {
            if (rep != null) rep.addEntry("not an object [.'$ObjectSchema'.dependentSchemas]", path);
            return false;
        }
        boolean res;
        Iterator<String> prop_loop = json.objectIterator(val);
        while (prop_loop.hasNext())
        {
            String prop = prop_loop.next();
            Object pval = json.objectValue(val, prop);
            Path lpath_16 = new Path(prop, path);
            // handle other props
            // .'$ObjectSchema'.dependentSchemas.''
            res = json_model_16(pval, (path != null ? lpath_16 : null), rep);
            if (! res)
            {
                if (rep != null) rep.addEntry("unexpected $Schema [.'$ObjectSchema'.dependentSchemas.'']", (path != null ? lpath_16 : null));
                return false;
            }
        }
        return true;
    }

    // check json_model_15_map_deprecated (.'$ObjectSchema'.deprecated)
    public boolean _jm_f_38(Object val, Path path, Report rep)
    {
        boolean res;
        // .'$ObjectSchema'.deprecated
        res = json.isBoolean(val);
        if (! res)
        {
            if (rep != null) rep.addEntry("not a bool [.'$ObjectSchema'.deprecated]", path);
        }
        return res;
    }

    // check json_model_15_map_description (.'$ObjectSchema'.description)
    public boolean _jm_f_39(Object val, Path path, Report rep)
    {
        boolean res;
        // .'$ObjectSchema'.description
        res = json.isString(val);
        if (! res)
        {
            if (rep != null) rep.addEntry("unexpected string [.'$ObjectSchema'.description]", path);
        }
        return res;
    }

    // check json_model_15_map_enum (.'$ObjectSchema'.enum)
    public boolean _jm_f_40(Object val, Path path, Report rep)
    {
        boolean res;
        // .'$ObjectSchema'.enum
        res = json.isArray(val);
        if (! res)
        {
            if (rep != null) rep.addEntry("not array or unexpected array [.'$ObjectSchema'.enum]", path);
        }
        return res;
    }

    // check json_model_15_map_examples (.'$ObjectSchema'.examples)
    public boolean _jm_f_41(Object val, Path path, Report rep)
    {
        boolean res;
        // .'$ObjectSchema'.examples
        res = json.isArray(val);
        if (! res)
        {
            if (rep != null) rep.addEntry("not array or unexpected array [.'$ObjectSchema'.examples]", path);
        }
        return res;
    }

    // check json_model_15_map_exclusiveMaximum (.'$ObjectSchema'.exclusiveMaximum)
    public boolean _jm_f_42(Object val, Path path, Report rep)
    {
        boolean res;
        // .'$ObjectSchema'.exclusiveMaximum
        res = json.isNumber(val);
        if (! res)
        {
            if (rep != null) rep.addEntry("not a -1.0 loose float [.'$ObjectSchema'.exclusiveMaximum]", path);
        }
        return res;
    }

    // check json_model_15_map_exclusiveMinimum (.'$ObjectSchema'.exclusiveMinimum)
    public boolean _jm_f_43(Object val, Path path, Report rep)
    {
        boolean res;
        // .'$ObjectSchema'.exclusiveMinimum
        res = json.isNumber(val);
        if (! res)
        {
            if (rep != null) rep.addEntry("not a -1.0 loose float [.'$ObjectSchema'.exclusiveMinimum]", path);
        }
        return res;
    }

    // check json_model_15_map_format (.'$ObjectSchema'.format)
    public boolean _jm_f_44(Object val, Path path, Report rep)
    {
        boolean res;
        // .'$ObjectSchema'.format
        res = json.isString(val);
        if (! res)
        {
            if (rep != null) rep.addEntry("unexpected string [.'$ObjectSchema'.format]", path);
        }
        return res;
    }

    // check json_model_15_map_items (.'$ObjectSchema'.items)
    public boolean _jm_f_45(Object val, Path path, Report rep)
    {
        boolean res;
        // .'$ObjectSchema'.items
        // .'$ObjectSchema'.items.'|'.0
        res = json_model_16(val, path, rep);
        if (! res)
        {
            if (rep != null) rep.addEntry("unexpected $Schema [.'$ObjectSchema'.items.'|'.0]", path);
        }
        if (! res)
        {
            // .'$ObjectSchema'.items.'|'.1
            res = json_model_13(val, path, rep);
            if (! res)
            {
                if (rep != null) rep.addEntry("unexpected $schemaArray [.'$ObjectSchema'.items.'|'.1]", path);
            }
        }
        if (res)
        {
            if (rep != null) rep.clearEntries();
        }
        else
        {
            if (rep != null) rep.addEntry("no model matched [.'$ObjectSchema'.items.'|']", path);
        }
        return res;
    }

    // check json_model_15_map_maximum (.'$ObjectSchema'.maximum)
    public boolean _jm_f_46(Object val, Path path, Report rep)
    {
        boolean res;
        // .'$ObjectSchema'.maximum
        res = json.isNumber(val);
        if (! res)
        {
            if (rep != null) rep.addEntry("not a -1.0 loose float [.'$ObjectSchema'.maximum]", path);
        }
        return res;
    }

    // check json_model_15_map_minimum (.'$ObjectSchema'.minimum)
    public boolean _jm_f_47(Object val, Path path, Report rep)
    {
        boolean res;
        // .'$ObjectSchema'.minimum
        res = json.isNumber(val);
        if (! res)
        {
            if (rep != null) rep.addEntry("not a -1.0 loose float [.'$ObjectSchema'.minimum]", path);
        }
        return res;
    }

    // check json_model_15_map_multipleOf (.'$ObjectSchema'.multipleOf)
    public boolean _jm_f_48(Object val, Path path, Report rep)
    {
        boolean res;
        // .'$ObjectSchema'.multipleOf
        res = json.isNumber(val) && json.asNumber(val) > 0.0;
        if (! res)
        {
            if (rep != null) rep.addEntry("not a 1.0 loose float [.'$ObjectSchema'.multipleOf]", path);
        }
        return res;
    }

    // check json_model_15_map_pattern (.'$ObjectSchema'.pattern)
    public boolean _jm_f_49(Object val, Path path, Report rep)
    {
        boolean res;
        // .'$ObjectSchema'.pattern
        res = json.isString(val) && rt.is_valid_regex(json.asString(val));
        if (! res)
        {
            if (rep != null) rep.addEntry("unexpected $REGEX [.'$ObjectSchema'.pattern]", path);
        }
        return res;
    }

    // check json_model_15_map_patternProperties (.'$ObjectSchema'.patternProperties)
    public boolean _jm_f_50(Object val, Path path, Report rep)
    {
        // .'$ObjectSchema'.patternProperties
        if (! json.isObject(val))
        {
            if (rep != null) rep.addEntry("not an object [.'$ObjectSchema'.patternProperties]", path);
            return false;
        }
        boolean res;
        Iterator<String> prop_loop = json.objectIterator(val);
        while (prop_loop.hasNext())
        {
            String prop = prop_loop.next();
            Object pval = json.objectValue(val, prop);
            Path lpath_17 = new Path(prop, path);
            if (rt.is_valid_regex(prop))
            {
                // handle 1 key props
                // .'$ObjectSchema'.patternProperties.'$REGEX'
                res = json_model_16(pval, (path != null ? lpath_17 : null), rep);
                if (! res)
                {
                    if (rep != null) rep.addEntry("unexpected $Schema [.'$ObjectSchema'.patternProperties.'$REGEX']", (path != null ? lpath_17 : null));
                    return false;
                }
            }
            else
            {
                if (rep != null) rep.addEntry("unexpected prop [.'$ObjectSchema'.patternProperties]", (path != null ? lpath_17 : null));
                return false;
            }
        }
        return true;
    }

    // check json_model_15_map_properties (.'$ObjectSchema'.properties)
    public boolean _jm_f_51(Object val, Path path, Report rep)
    {
        // .'$ObjectSchema'.properties
        if (! json.isObject(val))
        {
            if (rep != null) rep.addEntry("not an object [.'$ObjectSchema'.properties]", path);
            return false;
        }
        boolean res;
        Iterator<String> prop_loop = json.objectIterator(val);
        while (prop_loop.hasNext())
        {
            String prop = prop_loop.next();
            Object pval = json.objectValue(val, prop);
            Path lpath_18 = new Path(prop, path);
            // handle other props
            // .'$ObjectSchema'.properties.''
            res = json_model_16(pval, (path != null ? lpath_18 : null), rep);
            if (! res)
            {
                if (rep != null) rep.addEntry("unexpected $Schema [.'$ObjectSchema'.properties.'']", (path != null ? lpath_18 : null));
                return false;
            }
        }
        return true;
    }

    // check json_model_15_map_readOnly (.'$ObjectSchema'.readOnly)
    public boolean _jm_f_52(Object val, Path path, Report rep)
    {
        boolean res;
        // .'$ObjectSchema'.readOnly
        res = json.isBoolean(val);
        if (! res)
        {
            if (rep != null) rep.addEntry("not a bool [.'$ObjectSchema'.readOnly]", path);
        }
        return res;
    }

    // check json_model_15_map_title (.'$ObjectSchema'.title)
    public boolean _jm_f_53(Object val, Path path, Report rep)
    {
        boolean res;
        // .'$ObjectSchema'.title
        res = json.isString(val);
        if (! res)
        {
            if (rep != null) rep.addEntry("unexpected string [.'$ObjectSchema'.title]", path);
        }
        return res;
    }

    // check json_model_15_map_type (.'$ObjectSchema'.type)
    public boolean _jm_f_54(Object val, Path path, Report rep)
    {
        boolean res;
        // .'$ObjectSchema'.type
        // .'$ObjectSchema'.type.'|'.0
        res = json_model_8(val, path, rep);
        if (! res)
        {
            if (rep != null) rep.addEntry("unexpected $simpleTypes [.'$ObjectSchema'.type.'|'.0]", path);
        }
        if (! res)
        {
            // .'$ObjectSchema'.type.'|'.1
            res = json_model_9(val, path, rep);
            if (! res)
            {
                if (rep != null) rep.addEntry("unexpected $simpleTypesArray [.'$ObjectSchema'.type.'|'.1]", path);
            }
        }
        if (res)
        {
            if (rep != null) rep.clearEntries();
        }
        else
        {
            if (rep != null) rep.addEntry("no model matched [.'$ObjectSchema'.type.'|']", path);
        }
        return res;
    }

    // check json_model_15_map_uniqueItems (.'$ObjectSchema'.uniqueItems)
    public boolean _jm_f_55(Object val, Path path, Report rep)
    {
        boolean res;
        // .'$ObjectSchema'.uniqueItems
        res = json.isBoolean(val);
        if (! res)
        {
            if (rep != null) rep.addEntry("not a bool [.'$ObjectSchema'.uniqueItems]", path);
        }
        return res;
    }

    // check json_model_15_map_writeOnly (.'$ObjectSchema'.writeOnly)
    public boolean _jm_f_56(Object val, Path path, Report rep)
    {
        boolean res;
        // .'$ObjectSchema'.writeOnly
        res = json.isBoolean(val);
        if (! res)
        {
            if (rep != null) rep.addEntry("not a bool [.'$ObjectSchema'.writeOnly]", path);
        }
        return res;
    }


    // check $ObjectSchema (.'$ObjectSchema')
    public boolean json_model_15(Object val, Path path, Report rep)
    {
        // .'$ObjectSchema'
        if (! json.isObject(val))
        {
            if (rep != null) rep.addEntry("not an object [.'$ObjectSchema']", path);
            return false;
        }
        Checker pfun;
        Iterator<String> prop_loop = json.objectIterator(val);
        while (prop_loop.hasNext())
        {
            String prop = prop_loop.next();
            Object pval = json.objectValue(val, prop);
            Path lpath_12 = new Path(prop, path);
            if ((pfun = json_model_15_map_pmap.get(prop)) != null)
            {
                // handle 57 may props
                if (pfun != null && ! (pfun.call(pval, (path != null ? lpath_12 : null), rep)))
                {
                    if (rep != null) rep.addEntry("invalid optional prop value [.'$ObjectSchema']", (path != null ? lpath_12 : null));
                    return false;
                }
            }
            else
            {
                if (rep != null) rep.addEntry("unexpected prop [.'$ObjectSchema']", (path != null ? lpath_12 : null));
                return false;
            }
        }
        return true;
    }

    // check $Schema (.'$Schema')
    public boolean json_model_16(Object val, Path path, Report rep)
    {
        boolean res;
        // .'$Schema'
        // .'$Schema'.'|'.0
        res = json.isBoolean(val);
        if (! res)
        {
            if (rep != null) rep.addEntry("not a bool [.'$Schema'.'|'.0]", path);
        }
        if (! res)
        {
            // .'$Schema'.'|'.1
            res = json_model_15(val, path, rep);
            if (! res)
            {
                if (rep != null) rep.addEntry("unexpected $ObjectSchema [.'$Schema'.'|'.1]", path);
            }
        }
        if (res)
        {
            if (rep != null) rep.clearEntries();
        }
        else
        {
            if (rep != null) rep.addEntry("no model matched [.'$Schema'.'|']", path);
        }
        return res;
    }

    // check $ (.)
    public boolean json_model_1(Object val, Path path, Report rep)
    {
        boolean res;
        // JSON Model for JSON Schema 2019-09 (aka 08) [JSON_MODEL_LOOSE_NUMBER]
        // .
        // .'@'
        res = json_model_16(val, path, rep);
        if (! res)
        {
            if (rep != null) rep.addEntry("unexpected $Schema [.'@']", path);
        }
        return res;
    }


    public void init(JSON json)
    {
        if (!initialized)
        {
            try {
            json_model_4_map_pmap = new HashMap<String, Checker>();
            json_model_4_map_pmap.put("$anchor", new Checker() { public boolean call(Object o, Path p, Report r) { return json_model_2(o, p, r);} });
            json_model_4_map_pmap.put("$comment", new Checker() { public boolean call(Object o, Path p, Report r) { return _jm_f_0(o, p, r);} });
            json_model_4_map_pmap.put("$defs", new Checker() { public boolean call(Object o, Path p, Report r) { return _jm_f_1(o, p, r);} });
            json_model_4_map_pmap.put("$id", new Checker() { public boolean call(Object o, Path p, Report r) { return json_model_2(o, p, r);} });
            json_model_4_map_pmap.put("$recursiveAnchor", new Checker() { public boolean call(Object o, Path p, Report r) { return _jm_f_2(o, p, r);} });
            json_model_4_map_pmap.put("$recursiveRef", new Checker() { public boolean call(Object o, Path p, Report r) { return json_model_2(o, p, r);} });
            json_model_4_map_pmap.put("$ref", new Checker() { public boolean call(Object o, Path p, Report r) { return json_model_2(o, p, r);} });
            json_model_4_map_pmap.put("$schema", new Checker() { public boolean call(Object o, Path p, Report r) { return _jm_f_3(o, p, r);} });
            json_model_4_map_pmap.put("$vocabulary", new Checker() { public boolean call(Object o, Path p, Report r) { return _jm_f_4(o, p, r);} });
            json_model_5_map_pmap = new HashMap<String, Checker>();
            json_model_5_map_pmap.put("default", new Checker() { public boolean call(Object o, Path p, Report r) { return _jm_f_5(o, p, r);} });
            json_model_5_map_pmap.put("deprecated", new Checker() { public boolean call(Object o, Path p, Report r) { return _jm_f_6(o, p, r);} });
            json_model_5_map_pmap.put("description", new Checker() { public boolean call(Object o, Path p, Report r) { return _jm_f_7(o, p, r);} });
            json_model_5_map_pmap.put("examples", new Checker() { public boolean call(Object o, Path p, Report r) { return _jm_f_8(o, p, r);} });
            json_model_5_map_pmap.put("readOnly", new Checker() { public boolean call(Object o, Path p, Report r) { return _jm_f_9(o, p, r);} });
            json_model_5_map_pmap.put("title", new Checker() { public boolean call(Object o, Path p, Report r) { return _jm_f_10(o, p, r);} });
            json_model_5_map_pmap.put("writeOnly", new Checker() { public boolean call(Object o, Path p, Report r) { return _jm_f_11(o, p, r);} });
            _jm_cst_0_set = new HashSet<Object>();
            _jm_cst_0_set.add(json.safeJSON("\"array\""));
            _jm_cst_0_set.add(json.safeJSON("\"boolean\""));
            _jm_cst_0_set.add(json.safeJSON("\"integer\""));
            _jm_cst_0_set.add(json.safeJSON("\"null\""));
            _jm_cst_0_set.add(json.safeJSON("\"number\""));
            _jm_cst_0_set.add(json.safeJSON("\"object\""));
            _jm_cst_0_set.add(json.safeJSON("\"string\""));
            json_model_12_map_pmap = new HashMap<String, Checker>();
            json_model_12_map_pmap.put("const", new Checker() { public boolean call(Object o, Path p, Report r) { return _jm_f_12(o, p, r);} });
            json_model_12_map_pmap.put("dependentRequired", new Checker() { public boolean call(Object o, Path p, Report r) { return _jm_f_13(o, p, r);} });
            json_model_12_map_pmap.put("enum", new Checker() { public boolean call(Object o, Path p, Report r) { return _jm_f_14(o, p, r);} });
            json_model_12_map_pmap.put("exclusiveMaximum", new Checker() { public boolean call(Object o, Path p, Report r) { return _jm_f_15(o, p, r);} });
            json_model_12_map_pmap.put("exclusiveMinimum", new Checker() { public boolean call(Object o, Path p, Report r) { return _jm_f_16(o, p, r);} });
            json_model_12_map_pmap.put("maxContains", new Checker() { public boolean call(Object o, Path p, Report r) { return json_model_11(o, p, r);} });
            json_model_12_map_pmap.put("maxItems", new Checker() { public boolean call(Object o, Path p, Report r) { return json_model_11(o, p, r);} });
            json_model_12_map_pmap.put("maxLength", new Checker() { public boolean call(Object o, Path p, Report r) { return json_model_11(o, p, r);} });
            json_model_12_map_pmap.put("maxProperties", new Checker() { public boolean call(Object o, Path p, Report r) { return json_model_11(o, p, r);} });
            json_model_12_map_pmap.put("maximum", new Checker() { public boolean call(Object o, Path p, Report r) { return _jm_f_17(o, p, r);} });
            json_model_12_map_pmap.put("minContains", new Checker() { public boolean call(Object o, Path p, Report r) { return json_model_11(o, p, r);} });
            json_model_12_map_pmap.put("minItems", new Checker() { public boolean call(Object o, Path p, Report r) { return json_model_11(o, p, r);} });
            json_model_12_map_pmap.put("minLength", new Checker() { public boolean call(Object o, Path p, Report r) { return json_model_11(o, p, r);} });
            json_model_12_map_pmap.put("minProperties", new Checker() { public boolean call(Object o, Path p, Report r) { return json_model_11(o, p, r);} });
            json_model_12_map_pmap.put("minimum", new Checker() { public boolean call(Object o, Path p, Report r) { return _jm_f_18(o, p, r);} });
            json_model_12_map_pmap.put("multipleOf", new Checker() { public boolean call(Object o, Path p, Report r) { return _jm_f_19(o, p, r);} });
            json_model_12_map_pmap.put("pattern", new Checker() { public boolean call(Object o, Path p, Report r) { return _jm_f_20(o, p, r);} });
            json_model_12_map_pmap.put("required", new Checker() { public boolean call(Object o, Path p, Report r) { return json_model_10(o, p, r);} });
            json_model_12_map_pmap.put("type", new Checker() { public boolean call(Object o, Path p, Report r) { return _jm_f_21(o, p, r);} });
            json_model_12_map_pmap.put("uniqueItems", new Checker() { public boolean call(Object o, Path p, Report r) { return _jm_f_22(o, p, r);} });
            json_model_14_map_pmap = new HashMap<String, Checker>();
            json_model_14_map_pmap.put("additionalItems", new Checker() { public boolean call(Object o, Path p, Report r) { return json_model_16(o, p, r);} });
            json_model_14_map_pmap.put("additionalProperties", new Checker() { public boolean call(Object o, Path p, Report r) { return json_model_16(o, p, r);} });
            json_model_14_map_pmap.put("allOf", new Checker() { public boolean call(Object o, Path p, Report r) { return json_model_13(o, p, r);} });
            json_model_14_map_pmap.put("anyOf", new Checker() { public boolean call(Object o, Path p, Report r) { return json_model_13(o, p, r);} });
            json_model_14_map_pmap.put("contains", new Checker() { public boolean call(Object o, Path p, Report r) { return json_model_16(o, p, r);} });
            json_model_14_map_pmap.put("dependentSchemas", new Checker() { public boolean call(Object o, Path p, Report r) { return _jm_f_23(o, p, r);} });
            json_model_14_map_pmap.put("else", new Checker() { public boolean call(Object o, Path p, Report r) { return json_model_16(o, p, r);} });
            json_model_14_map_pmap.put("if", new Checker() { public boolean call(Object o, Path p, Report r) { return json_model_16(o, p, r);} });
            json_model_14_map_pmap.put("items", new Checker() { public boolean call(Object o, Path p, Report r) { return _jm_f_24(o, p, r);} });
            json_model_14_map_pmap.put("not", new Checker() { public boolean call(Object o, Path p, Report r) { return json_model_16(o, p, r);} });
            json_model_14_map_pmap.put("oneOf", new Checker() { public boolean call(Object o, Path p, Report r) { return json_model_13(o, p, r);} });
            json_model_14_map_pmap.put("patternProperties", new Checker() { public boolean call(Object o, Path p, Report r) { return _jm_f_25(o, p, r);} });
            json_model_14_map_pmap.put("properties", new Checker() { public boolean call(Object o, Path p, Report r) { return _jm_f_26(o, p, r);} });
            json_model_14_map_pmap.put("propertyNames", new Checker() { public boolean call(Object o, Path p, Report r) { return json_model_16(o, p, r);} });
            json_model_14_map_pmap.put("then", new Checker() { public boolean call(Object o, Path p, Report r) { return json_model_16(o, p, r);} });
            json_model_14_map_pmap.put("unevaluatedItems", new Checker() { public boolean call(Object o, Path p, Report r) { return json_model_16(o, p, r);} });
            json_model_14_map_pmap.put("unevaluatedProperties", new Checker() { public boolean call(Object o, Path p, Report r) { return json_model_16(o, p, r);} });
            json_model_15_map_pmap = new HashMap<String, Checker>();
            json_model_15_map_pmap.put("$anchor", new Checker() { public boolean call(Object o, Path p, Report r) { return json_model_2(o, p, r);} });
            json_model_15_map_pmap.put("$comment", new Checker() { public boolean call(Object o, Path p, Report r) { return _jm_f_27(o, p, r);} });
            json_model_15_map_pmap.put("$defs", new Checker() { public boolean call(Object o, Path p, Report r) { return _jm_f_28(o, p, r);} });
            json_model_15_map_pmap.put("$id", new Checker() { public boolean call(Object o, Path p, Report r) { return json_model_2(o, p, r);} });
            json_model_15_map_pmap.put("$recursiveAnchor", new Checker() { public boolean call(Object o, Path p, Report r) { return _jm_f_29(o, p, r);} });
            json_model_15_map_pmap.put("$recursiveRef", new Checker() { public boolean call(Object o, Path p, Report r) { return json_model_2(o, p, r);} });
            json_model_15_map_pmap.put("$ref", new Checker() { public boolean call(Object o, Path p, Report r) { return json_model_2(o, p, r);} });
            json_model_15_map_pmap.put("$schema", new Checker() { public boolean call(Object o, Path p, Report r) { return _jm_f_30(o, p, r);} });
            json_model_15_map_pmap.put("$vocabulary", new Checker() { public boolean call(Object o, Path p, Report r) { return _jm_f_31(o, p, r);} });
            json_model_15_map_pmap.put("additionalItems", new Checker() { public boolean call(Object o, Path p, Report r) { return json_model_16(o, p, r);} });
            json_model_15_map_pmap.put("additionalProperties", new Checker() { public boolean call(Object o, Path p, Report r) { return json_model_16(o, p, r);} });
            json_model_15_map_pmap.put("allOf", new Checker() { public boolean call(Object o, Path p, Report r) { return json_model_13(o, p, r);} });
            json_model_15_map_pmap.put("anyOf", new Checker() { public boolean call(Object o, Path p, Report r) { return json_model_13(o, p, r);} });
            json_model_15_map_pmap.put("const", new Checker() { public boolean call(Object o, Path p, Report r) { return _jm_f_32(o, p, r);} });
            json_model_15_map_pmap.put("contains", new Checker() { public boolean call(Object o, Path p, Report r) { return json_model_16(o, p, r);} });
            json_model_15_map_pmap.put("contentEncoding", new Checker() { public boolean call(Object o, Path p, Report r) { return _jm_f_33(o, p, r);} });
            json_model_15_map_pmap.put("contentMediaType", new Checker() { public boolean call(Object o, Path p, Report r) { return _jm_f_34(o, p, r);} });
            json_model_15_map_pmap.put("contentSchema", new Checker() { public boolean call(Object o, Path p, Report r) { return json_model_16(o, p, r);} });
            json_model_15_map_pmap.put("default", new Checker() { public boolean call(Object o, Path p, Report r) { return _jm_f_35(o, p, r);} });
            json_model_15_map_pmap.put("dependentRequired", new Checker() { public boolean call(Object o, Path p, Report r) { return _jm_f_36(o, p, r);} });
            json_model_15_map_pmap.put("dependentSchemas", new Checker() { public boolean call(Object o, Path p, Report r) { return _jm_f_37(o, p, r);} });
            json_model_15_map_pmap.put("deprecated", new Checker() { public boolean call(Object o, Path p, Report r) { return _jm_f_38(o, p, r);} });
            json_model_15_map_pmap.put("description", new Checker() { public boolean call(Object o, Path p, Report r) { return _jm_f_39(o, p, r);} });
            json_model_15_map_pmap.put("else", new Checker() { public boolean call(Object o, Path p, Report r) { return json_model_16(o, p, r);} });
            json_model_15_map_pmap.put("enum", new Checker() { public boolean call(Object o, Path p, Report r) { return _jm_f_40(o, p, r);} });
            json_model_15_map_pmap.put("examples", new Checker() { public boolean call(Object o, Path p, Report r) { return _jm_f_41(o, p, r);} });
            json_model_15_map_pmap.put("exclusiveMaximum", new Checker() { public boolean call(Object o, Path p, Report r) { return _jm_f_42(o, p, r);} });
            json_model_15_map_pmap.put("exclusiveMinimum", new Checker() { public boolean call(Object o, Path p, Report r) { return _jm_f_43(o, p, r);} });
            json_model_15_map_pmap.put("format", new Checker() { public boolean call(Object o, Path p, Report r) { return _jm_f_44(o, p, r);} });
            json_model_15_map_pmap.put("if", new Checker() { public boolean call(Object o, Path p, Report r) { return json_model_16(o, p, r);} });
            json_model_15_map_pmap.put("items", new Checker() { public boolean call(Object o, Path p, Report r) { return _jm_f_45(o, p, r);} });
            json_model_15_map_pmap.put("maxContains", new Checker() { public boolean call(Object o, Path p, Report r) { return json_model_11(o, p, r);} });
            json_model_15_map_pmap.put("maxItems", new Checker() { public boolean call(Object o, Path p, Report r) { return json_model_11(o, p, r);} });
            json_model_15_map_pmap.put("maxLength", new Checker() { public boolean call(Object o, Path p, Report r) { return json_model_11(o, p, r);} });
            json_model_15_map_pmap.put("maxProperties", new Checker() { public boolean call(Object o, Path p, Report r) { return json_model_11(o, p, r);} });
            json_model_15_map_pmap.put("maximum", new Checker() { public boolean call(Object o, Path p, Report r) { return _jm_f_46(o, p, r);} });
            json_model_15_map_pmap.put("minContains", new Checker() { public boolean call(Object o, Path p, Report r) { return json_model_11(o, p, r);} });
            json_model_15_map_pmap.put("minItems", new Checker() { public boolean call(Object o, Path p, Report r) { return json_model_11(o, p, r);} });
            json_model_15_map_pmap.put("minLength", new Checker() { public boolean call(Object o, Path p, Report r) { return json_model_11(o, p, r);} });
            json_model_15_map_pmap.put("minProperties", new Checker() { public boolean call(Object o, Path p, Report r) { return json_model_11(o, p, r);} });
            json_model_15_map_pmap.put("minimum", new Checker() { public boolean call(Object o, Path p, Report r) { return _jm_f_47(o, p, r);} });
            json_model_15_map_pmap.put("multipleOf", new Checker() { public boolean call(Object o, Path p, Report r) { return _jm_f_48(o, p, r);} });
            json_model_15_map_pmap.put("not", new Checker() { public boolean call(Object o, Path p, Report r) { return json_model_16(o, p, r);} });
            json_model_15_map_pmap.put("oneOf", new Checker() { public boolean call(Object o, Path p, Report r) { return json_model_13(o, p, r);} });
            json_model_15_map_pmap.put("pattern", new Checker() { public boolean call(Object o, Path p, Report r) { return _jm_f_49(o, p, r);} });
            json_model_15_map_pmap.put("patternProperties", new Checker() { public boolean call(Object o, Path p, Report r) { return _jm_f_50(o, p, r);} });
            json_model_15_map_pmap.put("properties", new Checker() { public boolean call(Object o, Path p, Report r) { return _jm_f_51(o, p, r);} });
            json_model_15_map_pmap.put("propertyNames", new Checker() { public boolean call(Object o, Path p, Report r) { return json_model_16(o, p, r);} });
            json_model_15_map_pmap.put("readOnly", new Checker() { public boolean call(Object o, Path p, Report r) { return _jm_f_52(o, p, r);} });
            json_model_15_map_pmap.put("required", new Checker() { public boolean call(Object o, Path p, Report r) { return json_model_10(o, p, r);} });
            json_model_15_map_pmap.put("then", new Checker() { public boolean call(Object o, Path p, Report r) { return json_model_16(o, p, r);} });
            json_model_15_map_pmap.put("title", new Checker() { public boolean call(Object o, Path p, Report r) { return _jm_f_53(o, p, r);} });
            json_model_15_map_pmap.put("type", new Checker() { public boolean call(Object o, Path p, Report r) { return _jm_f_54(o, p, r);} });
            json_model_15_map_pmap.put("unevaluatedItems", new Checker() { public boolean call(Object o, Path p, Report r) { return json_model_16(o, p, r);} });
            json_model_15_map_pmap.put("unevaluatedProperties", new Checker() { public boolean call(Object o, Path p, Report r) { return json_model_16(o, p, r);} });
            json_model_15_map_pmap.put("uniqueItems", new Checker() { public boolean call(Object o, Path p, Report r) { return _jm_f_55(o, p, r);} });
            json_model_15_map_pmap.put("writeOnly", new Checker() { public boolean call(Object o, Path p, Report r) { return _jm_f_56(o, p, r);} });
            json_schema_draft_2019_09_map_pmap = new HashMap<String, Checker>();
            json_schema_draft_2019_09_map_pmap.put("", new Checker() { public boolean call(Object o, Path p, Report r) { return json_model_1(o, p, r);} });
            json_schema_draft_2019_09_map_pmap.put("URI-REFERENCE", new Checker() { public boolean call(Object o, Path p, Report r) { return json_model_2(o, p, r);} });
            json_schema_draft_2019_09_map_pmap.put("id", new Checker() { public boolean call(Object o, Path p, Report r) { return json_model_2(o, p, r);} });
            json_schema_draft_2019_09_map_pmap.put("core", new Checker() { public boolean call(Object o, Path p, Report r) { return json_model_4(o, p, r);} });
            json_schema_draft_2019_09_map_pmap.put("meta", new Checker() { public boolean call(Object o, Path p, Report r) { return json_model_5(o, p, r);} });
            json_schema_draft_2019_09_map_pmap.put("content", new Checker() { public boolean call(Object o, Path p, Report r) { return json_model_6(o, p, r);} });
            json_schema_draft_2019_09_map_pmap.put("format", new Checker() { public boolean call(Object o, Path p, Report r) { return json_model_7(o, p, r);} });
            json_schema_draft_2019_09_map_pmap.put("simpleTypes", new Checker() { public boolean call(Object o, Path p, Report r) { return json_model_8(o, p, r);} });
            json_schema_draft_2019_09_map_pmap.put("simpleTypesArray", new Checker() { public boolean call(Object o, Path p, Report r) { return json_model_9(o, p, r);} });
            json_schema_draft_2019_09_map_pmap.put("stringArray", new Checker() { public boolean call(Object o, Path p, Report r) { return json_model_10(o, p, r);} });
            json_schema_draft_2019_09_map_pmap.put("nonNegativeInteger", new Checker() { public boolean call(Object o, Path p, Report r) { return json_model_11(o, p, r);} });
            json_schema_draft_2019_09_map_pmap.put("validation", new Checker() { public boolean call(Object o, Path p, Report r) { return json_model_12(o, p, r);} });
            json_schema_draft_2019_09_map_pmap.put("schemaArray", new Checker() { public boolean call(Object o, Path p, Report r) { return json_model_13(o, p, r);} });
            json_schema_draft_2019_09_map_pmap.put("applicator", new Checker() { public boolean call(Object o, Path p, Report r) { return json_model_14(o, p, r);} });
            json_schema_draft_2019_09_map_pmap.put("ObjectSchema", new Checker() { public boolean call(Object o, Path p, Report r) { return json_model_15(o, p, r);} });
            json_schema_draft_2019_09_map_pmap.put("Schema", new Checker() { public boolean call(Object o, Path p, Report r) { return json_model_16(o, p, r);} });
                super.init(json);
            }
            catch (Exception e) {
                throw new Error("cannot initialized model checker: " + e);
            }
        }
    }

    public void free()
    {
        if (initialized)
        {
            super.free();
            json_model_4_map_pmap = null;
            json_model_5_map_pmap = null;
            _jm_cst_0_set = null;
            json_model_12_map_pmap = null;
            json_model_14_map_pmap = null;
            json_model_15_map_pmap = null;
            json_schema_draft_2019_09_map_pmap = null;
        }
    }

    public Checker get(String name)
    {
        return json_schema_draft_2019_09_map_pmap.get(name);
    }

    public Set<String> models()
    {
        return json_schema_draft_2019_09_map_pmap.keySet();
    }

    static public void main(String[] args) throws Exception
    {
        ModelChecker checker = new json_schema_draft_2019_09();
        Main.main("json_schema_draft_2019_09", checker, VERSION, args);
    }
}
