#! /bin/env node
// we may need require to load re2
import { createRequire } from 'node:module';
const require = createRequire(import.meta.url);
//
// Generated by JSON Model Compiler version 2.0b1
// see https://github.com/clairey-zx81/json-model
//
import * as runtime from "json_model_runtime"
const JSON_MODEL_VERSION = "2.0b1";

let _jm_cst_0 = new Set()
var _jm_obj_0_map = new Map()
var check_model_map = new Map()

// check $schemaArray (.'$schemaArray')
function json_model_2(val, path, rep)
{
    let res;
    // .'$schemaArray'
    // .'$schemaArray'.'@'
    res = Array.isArray(val);
    if (res)
    {
        for (let arr_0_idx = 0; arr_0_idx < val.length; arr_0_idx++)
        {
            let arr_0_item = val[arr_0_idx]
            let arr_0_lpath = path ? path.concat([arr_0_idx]) : null;
            // .'$schemaArray'.'@'.0
            res = json_model_1(arr_0_item, (path ? arr_0_lpath : null), rep);
            if (! res)
            {
                rep !== null && rep.push(["unexpected $Schema [.'$schemaArray'.'@'.0]", (path ? arr_0_lpath : null)])
            }
            if (! res)
            {
                break;
            }
        }
    }
    if (! res)
    {
        rep !== null && rep.push(["not array or unexpected array [.'$schemaArray'.'@']", path])
    }
    if (res)
    {
        let ival_0 = val.length;
        res = ival_0 >= 1;
        if (! res)
        {
            rep !== null && rep.push(["constraints failed [.'$schemaArray']", path])
        }
    }
    return res;
}


// check $simpleTypes (.'$simpleTypes')
function json_model_3(val, path, rep)
{
    let res;
    // .'$simpleTypes'
    res = ((val === null || (typeof val === 'number' || val instanceof Number) || (typeof val === 'boolean' || val instanceof Boolean) || (typeof val === 'string' || val instanceof String))) && _jm_cst_0.has(val);
    if (! res)
    {
        rep !== null && rep.push(["value not in enum [.'$simpleTypes'.'|']", path])
    }
    return res;
}

// check $stringArray (.'$stringArray')
function json_model_4(val, path, rep)
{
    let res;
    // .'$stringArray'
    // .'$stringArray'.'@'
    res = Array.isArray(val);
    if (res)
    {
        for (let arr_1_idx = 0; arr_1_idx < val.length; arr_1_idx++)
        {
            let arr_1_item = val[arr_1_idx]
            let arr_1_lpath = path ? path.concat([arr_1_idx]) : null;
            // .'$stringArray'.'@'.0
            res = (typeof arr_1_item === 'string' || arr_1_item instanceof String);
            if (! res)
            {
                rep !== null && rep.push(["unexpected string [.'$stringArray'.'@'.0]", (path ? arr_1_lpath : null)])
            }
            if (! res)
            {
                break;
            }
        }
    }
    if (! res)
    {
        rep !== null && rep.push(["not array or unexpected array [.'$stringArray'.'@']", path])
    }
    if (res)
    {
        let ival_1 = val.length;
        res = runtime.jm_array_is_unique(val, path, rep) && ival_1 >= 1;
        if (! res)
        {
            rep !== null && rep.push(["constraints failed [.'$stringArray']", path])
        }
    }
    return res;
}

// check $typeArray (.'$typeArray')
function json_model_5(val, path, rep)
{
    let res;
    // .'$typeArray'
    // .'$typeArray'.'@'
    res = Array.isArray(val);
    if (res)
    {
        for (let arr_2_idx = 0; arr_2_idx < val.length; arr_2_idx++)
        {
            let arr_2_item = val[arr_2_idx]
            let arr_2_lpath = path ? path.concat([arr_2_idx]) : null;
            // .'$typeArray'.'@'.0
            res = json_model_3(arr_2_item, (path ? arr_2_lpath : null), rep);
            if (! res)
            {
                rep !== null && rep.push(["unexpected $simpleTypes [.'$typeArray'.'@'.0]", (path ? arr_2_lpath : null)])
            }
            if (! res)
            {
                break;
            }
        }
    }
    if (! res)
    {
        rep !== null && rep.push(["not array or unexpected array [.'$typeArray'.'@']", path])
    }
    if (res)
    {
        let ival_2 = val.length;
        res = runtime.jm_array_is_unique(val, path, rep) && ival_2 >= 1;
        if (! res)
        {
            rep !== null && rep.push(["constraints failed [.'$typeArray']", path])
        }
    }
    return res;
}

// check _jm_obj_0_map_$ref (.'$ref')
function _jm_f_0(val, path, rep)
{
    let res;
    // .'$ref'
    res = runtime.jm_is_valid_url(val);
    if (! res)
    {
        rep !== null && rep.push(["unexpected $URI [.'$ref']", path])
    }
    return res;
}

// check _jm_obj_0_map_$schema (.'$schema')
function _jm_f_1(val, path, rep)
{
    let res;
    // .'$schema'
    res = (typeof val === 'string' || val instanceof String);
    if (! res)
    {
        rep !== null && rep.push(["unexpected string [.'$schema']", path])
    }
    return res;
}

// check _jm_obj_0_map_additionalItems (.additionalItems)
function _jm_f_2(val, path, rep)
{
    let res;
    // .additionalItems
    // .additionalItems.'|'.0
    res = (typeof val === 'boolean' || val instanceof Boolean);
    if (! res)
    {
        rep !== null && rep.push(["not a bool [.additionalItems.'|'.0]", path])
    }
    if (! res)
    {
        // .additionalItems.'|'.1
        res = json_model_1(val, path, rep);
        if (! res)
        {
            rep !== null && rep.push(["unexpected $Schema [.additionalItems.'|'.1]", path])
        }
    }
    if (res)
    {
        if (rep !== null) rep.length = 0
    }
    else
    {
        rep !== null && rep.push(["no model matched [.additionalItems.'|']", path])
    }
    return res;
}

// check _jm_obj_0_map_additionalProperties (.additionalProperties)
function _jm_f_3(val, path, rep)
{
    let res;
    // .additionalProperties
    // .additionalProperties.'|'.0
    res = (typeof val === 'boolean' || val instanceof Boolean);
    if (! res)
    {
        rep !== null && rep.push(["not a bool [.additionalProperties.'|'.0]", path])
    }
    if (! res)
    {
        // .additionalProperties.'|'.1
        res = json_model_1(val, path, rep);
        if (! res)
        {
            rep !== null && rep.push(["unexpected $Schema [.additionalProperties.'|'.1]", path])
        }
    }
    if (res)
    {
        if (rep !== null) rep.length = 0
    }
    else
    {
        rep !== null && rep.push(["no model matched [.additionalProperties.'|']", path])
    }
    return res;
}

// check _jm_obj_0_map_allOf (.allOf)
function _jm_f_4(val, path, rep)
{
    let res;
    // .allOf
    res = json_model_2(val, path, rep);
    if (! res)
    {
        rep !== null && rep.push(["unexpected $schemaArray [.allOf]", path])
    }
    return res;
}

// check _jm_obj_0_map_anyOf (.anyOf)
function _jm_f_5(val, path, rep)
{
    let res;
    // .anyOf
    res = json_model_2(val, path, rep);
    if (! res)
    {
        rep !== null && rep.push(["unexpected $schemaArray [.anyOf]", path])
    }
    return res;
}

// check _jm_obj_0_map_default (.default)
function _jm_f_6(val, path, rep)
{
    let res;
    // .default
    res = true;
    if (! res)
    {
        rep !== null && rep.push(["unexpected $ANY [.default]", path])
    }
    return res;
}

// object .definitions
function _jm_obj_1(val, path, rep)
{
    if (! (Object.prototype.toString.call(val) === '[object Object]'))
    {
        rep !== null && rep.push(["not an object [.definitions]", path])
        return false;
    }
    let res;
    for (const [prop, pval] of Object.entries(val))
    {
        let lpath_1 = path ? path.concat([prop]) : null;
        // handle other props
        // .definitions.''
        res = json_model_1(pval, (path ? lpath_1 : null), rep);
        if (! res)
        {
            rep !== null && rep.push(["unexpected $Schema [.definitions.'']", (path ? lpath_1 : null)])
        }
        if (! res)
        {
            return false;
        }
    }
    return true;
}

// check _jm_obj_0_map_definitions (.definitions)
function _jm_f_7(val, path, rep)
{
    let res;
    // .definitions
    res = _jm_obj_1(val, path, rep);
    if (! res)
    {
        rep !== null && rep.push(["unexpected element [.definitions]", path])
    }
    return res;
}

// object .dependencies
function _jm_obj_2(val, path, rep)
{
    if (! (Object.prototype.toString.call(val) === '[object Object]'))
    {
        rep !== null && rep.push(["not an object [.dependencies]", path])
        return false;
    }
    let res;
    for (const [prop, pval] of Object.entries(val))
    {
        let lpath_2 = path ? path.concat([prop]) : null;
        // handle other props
        // .dependencies.''
        // .dependencies.''.'|'.0
        res = json_model_1(pval, (path ? lpath_2 : null), rep);
        if (! res)
        {
            rep !== null && rep.push(["unexpected $Schema [.dependencies.''.'|'.0]", (path ? lpath_2 : null)])
        }
        if (! res)
        {
            // .dependencies.''.'|'.1
            res = json_model_4(pval, (path ? lpath_2 : null), rep);
            if (! res)
            {
                rep !== null && rep.push(["unexpected $stringArray [.dependencies.''.'|'.1]", (path ? lpath_2 : null)])
            }
        }
        if (res)
        {
            if (rep !== null) rep.length = 0
        }
        else
        {
            rep !== null && rep.push(["no model matched [.dependencies.''.'|']", (path ? lpath_2 : null)])
        }
        if (! res)
        {
            return false;
        }
    }
    return true;
}

// check _jm_obj_0_map_dependencies (.dependencies)
function _jm_f_8(val, path, rep)
{
    let res;
    // .dependencies
    res = _jm_obj_2(val, path, rep);
    if (! res)
    {
        rep !== null && rep.push(["unexpected element [.dependencies]", path])
    }
    return res;
}

// check _jm_obj_0_map_description (.description)
function _jm_f_9(val, path, rep)
{
    let res;
    // .description
    res = (typeof val === 'string' || val instanceof String);
    if (! res)
    {
        rep !== null && rep.push(["unexpected string [.description]", path])
    }
    return res;
}

// check _jm_obj_0_map_enum (.enum)
function _jm_f_10(val, path, rep)
{
    let res;
    // .enum
    // .enum.'@'
    res = Array.isArray(val);
    if (res)
    {
        // accept any array
    }
    if (! res)
    {
        rep !== null && rep.push(["not array or unexpected array [.enum.'@']", path])
    }
    if (res)
    {
        let ival_3 = val.length;
        res = runtime.jm_array_is_unique(val, path, rep) && ival_3 >= 1;
        if (! res)
        {
            rep !== null && rep.push(["constraints failed [.enum]", path])
        }
    }
    return res;
}

// check _jm_obj_0_map_exclusiveMaximum (.exclusiveMaximum)
function _jm_f_11(val, path, rep)
{
    let res;
    // .exclusiveMaximum
    res = (typeof val === 'boolean' || val instanceof Boolean);
    if (! res)
    {
        rep !== null && rep.push(["not a bool [.exclusiveMaximum]", path])
    }
    return res;
}

// check _jm_obj_0_map_exclusiveMinimum (.exclusiveMinimum)
function _jm_f_12(val, path, rep)
{
    let res;
    // .exclusiveMinimum
    res = (typeof val === 'boolean' || val instanceof Boolean);
    if (! res)
    {
        rep !== null && rep.push(["not a bool [.exclusiveMinimum]", path])
    }
    return res;
}

// check _jm_obj_0_map_format (.format)
function _jm_f_13(val, path, rep)
{
    let res;
    // .format
    res = (typeof val === 'string' || val instanceof String);
    if (! res)
    {
        rep !== null && rep.push(["unexpected string [.format]", path])
    }
    return res;
}

// check _jm_obj_0_map_id (.id)
function _jm_f_14(val, path, rep)
{
    let res;
    // .id
    res = (typeof val === 'string' || val instanceof String);
    if (! res)
    {
        rep !== null && rep.push(["unexpected string [.id]", path])
    }
    return res;
}

// check _jm_obj_0_map_items (.items)
function _jm_f_15(val, path, rep)
{
    let res;
    // .items
    // .items.'|'.0
    res = json_model_1(val, path, rep);
    if (! res)
    {
        rep !== null && rep.push(["unexpected $Schema [.items.'|'.0]", path])
    }
    if (! res)
    {
        // .items.'|'.1
        res = json_model_2(val, path, rep);
        if (! res)
        {
            rep !== null && rep.push(["unexpected $schemaArray [.items.'|'.1]", path])
        }
    }
    if (res)
    {
        if (rep !== null) rep.length = 0
    }
    else
    {
        rep !== null && rep.push(["no model matched [.items.'|']", path])
    }
    return res;
}

// check _jm_obj_0_map_maxItems (.maxItems)
function _jm_f_16(val, path, rep)
{
    let res;
    // .maxItems
    res = ((typeof val === 'number' || val instanceof Number) && Number.isInteger(val)) && val >= 0;
    if (! res)
    {
        rep !== null && rep.push(["not a 0 strict int [.maxItems]", path])
    }
    return res;
}

// check _jm_obj_0_map_maxLength (.maxLength)
function _jm_f_17(val, path, rep)
{
    let res;
    // .maxLength
    res = ((typeof val === 'number' || val instanceof Number) && Number.isInteger(val)) && val >= 0;
    if (! res)
    {
        rep !== null && rep.push(["not a 0 strict int [.maxLength]", path])
    }
    return res;
}

// check _jm_obj_0_map_maxProperties (.maxProperties)
function _jm_f_18(val, path, rep)
{
    let res;
    // .maxProperties
    res = ((typeof val === 'number' || val instanceof Number) && Number.isInteger(val)) && val >= 0;
    if (! res)
    {
        rep !== null && rep.push(["not a 0 strict int [.maxProperties]", path])
    }
    return res;
}

// check _jm_obj_0_map_maximum (.maximum)
function _jm_f_19(val, path, rep)
{
    let res;
    // .maximum
    res = (typeof val === 'number' || val instanceof Number);
    if (! res)
    {
        rep !== null && rep.push(["not a -1.0 loose float [.maximum]", path])
    }
    return res;
}

// check _jm_obj_0_map_minItems (.minItems)
function _jm_f_20(val, path, rep)
{
    let res;
    // .minItems
    res = ((typeof val === 'number' || val instanceof Number) && Number.isInteger(val)) && val >= 0;
    if (! res)
    {
        rep !== null && rep.push(["not a 0 strict int [.minItems]", path])
    }
    return res;
}

// check _jm_obj_0_map_minLength (.minLength)
function _jm_f_21(val, path, rep)
{
    let res;
    // .minLength
    res = ((typeof val === 'number' || val instanceof Number) && Number.isInteger(val)) && val >= 0;
    if (! res)
    {
        rep !== null && rep.push(["not a 0 strict int [.minLength]", path])
    }
    return res;
}

// check _jm_obj_0_map_minProperties (.minProperties)
function _jm_f_22(val, path, rep)
{
    let res;
    // .minProperties
    res = ((typeof val === 'number' || val instanceof Number) && Number.isInteger(val)) && val >= 0;
    if (! res)
    {
        rep !== null && rep.push(["not a 0 strict int [.minProperties]", path])
    }
    return res;
}

// check _jm_obj_0_map_minimum (.minimum)
function _jm_f_23(val, path, rep)
{
    let res;
    // .minimum
    res = (typeof val === 'number' || val instanceof Number);
    if (! res)
    {
        rep !== null && rep.push(["not a -1.0 loose float [.minimum]", path])
    }
    return res;
}

// check _jm_obj_0_map_multipleOf (.multipleOf)
function _jm_f_24(val, path, rep)
{
    let res;
    // .multipleOf
    res = ((typeof val === 'number' || val instanceof Number)) && val > 0.0;
    if (! res)
    {
        rep !== null && rep.push(["not a 1.0 loose float [.multipleOf]", path])
    }
    return res;
}

// check _jm_obj_0_map_not (.not)
function _jm_f_25(val, path, rep)
{
    let res;
    // .not
    res = json_model_1(val, path, rep);
    if (! res)
    {
        rep !== null && rep.push(["unexpected $Schema [.not]", path])
    }
    return res;
}

// check _jm_obj_0_map_oneOf (.oneOf)
function _jm_f_26(val, path, rep)
{
    let res;
    // .oneOf
    res = json_model_2(val, path, rep);
    if (! res)
    {
        rep !== null && rep.push(["unexpected $schemaArray [.oneOf]", path])
    }
    return res;
}

// check _jm_obj_0_map_pattern (.pattern)
function _jm_f_27(val, path, rep)
{
    let res;
    // .pattern
    res = runtime.jm_is_valid_regex(val, false);
    if (! res)
    {
        rep !== null && rep.push(["unexpected $REGEX [.pattern]", path])
    }
    return res;
}

// object .patternProperties
function _jm_obj_3(val, path, rep)
{
    if (! (Object.prototype.toString.call(val) === '[object Object]'))
    {
        rep !== null && rep.push(["not an object [.patternProperties]", path])
        return false;
    }
    let res;
    for (const [prop, pval] of Object.entries(val))
    {
        let lpath_3 = path ? path.concat([prop]) : null;
        // handle other props
        // .patternProperties.''
        res = json_model_1(pval, (path ? lpath_3 : null), rep);
        if (! res)
        {
            rep !== null && rep.push(["unexpected $Schema [.patternProperties.'']", (path ? lpath_3 : null)])
        }
        if (! res)
        {
            return false;
        }
    }
    return true;
}

// check _jm_obj_0_map_patternProperties (.patternProperties)
function _jm_f_28(val, path, rep)
{
    let res;
    // .patternProperties
    res = _jm_obj_3(val, path, rep);
    if (! res)
    {
        rep !== null && rep.push(["unexpected element [.patternProperties]", path])
    }
    return res;
}

// object .properties
function _jm_obj_4(val, path, rep)
{
    if (! (Object.prototype.toString.call(val) === '[object Object]'))
    {
        rep !== null && rep.push(["not an object [.properties]", path])
        return false;
    }
    let res;
    for (const [prop, pval] of Object.entries(val))
    {
        let lpath_4 = path ? path.concat([prop]) : null;
        // handle other props
        // .properties.''
        res = json_model_1(pval, (path ? lpath_4 : null), rep);
        if (! res)
        {
            rep !== null && rep.push(["unexpected $Schema [.properties.'']", (path ? lpath_4 : null)])
        }
        if (! res)
        {
            return false;
        }
    }
    return true;
}

// check _jm_obj_0_map_properties (.properties)
function _jm_f_29(val, path, rep)
{
    let res;
    // .properties
    res = _jm_obj_4(val, path, rep);
    if (! res)
    {
        rep !== null && rep.push(["unexpected element [.properties]", path])
    }
    return res;
}

// check _jm_obj_0_map_required (.required)
function _jm_f_30(val, path, rep)
{
    let res;
    // .required
    res = json_model_4(val, path, rep);
    if (! res)
    {
        rep !== null && rep.push(["unexpected $stringArray [.required]", path])
    }
    return res;
}

// check _jm_obj_0_map_title (.title)
function _jm_f_31(val, path, rep)
{
    let res;
    // .title
    res = (typeof val === 'string' || val instanceof String);
    if (! res)
    {
        rep !== null && rep.push(["unexpected string [.title]", path])
    }
    return res;
}

// check _jm_obj_0_map_type (.type)
function _jm_f_32(val, path, rep)
{
    let res;
    // .type
    // .type.'|'.0
    res = json_model_3(val, path, rep);
    if (! res)
    {
        rep !== null && rep.push(["unexpected $simpleTypes [.type.'|'.0]", path])
    }
    if (! res)
    {
        // .type.'|'.1
        res = json_model_5(val, path, rep);
        if (! res)
        {
            rep !== null && rep.push(["unexpected $typeArray [.type.'|'.1]", path])
        }
    }
    if (res)
    {
        if (rep !== null) rep.length = 0
    }
    else
    {
        rep !== null && rep.push(["no model matched [.type.'|']", path])
    }
    return res;
}

// check _jm_obj_0_map_uniqueItems (.uniqueItems)
function _jm_f_33(val, path, rep)
{
    let res;
    // .uniqueItems
    res = (typeof val === 'boolean' || val instanceof Boolean);
    if (! res)
    {
        rep !== null && rep.push(["not a bool [.uniqueItems]", path])
    }
    return res;
}


// object .
function _jm_obj_0(val, path, rep)
{
    if (! (Object.prototype.toString.call(val) === '[object Object]'))
    {
        rep !== null && rep.push(["not an object [.]", path])
        return false;
    }
    let pfun;
    for (const [prop, pval] of Object.entries(val))
    {
        let lpath_0 = path ? path.concat([prop]) : null;
        if ((pfun = _jm_obj_0_map.get(prop)))
        {
            // handle 34 may props
            if (pfun !== undefined && ! pfun(pval, (path ? lpath_0 : null), rep))
            {
                rep !== null && rep.push(["invalid optional prop value [.]", (path ? lpath_0 : null)])
                return false;
            }
        }
        else
        {
            rep !== null && rep.push(["unexpected prop [.]", (path ? lpath_0 : null)])
            return false;
        }
    }
    return true;
}

// check $ (.)
function json_model_1(val, path, rep)
{
    let res;
    // JSON Model for JSON Schema Draft 04 [JSON_MODEL_STRICT_INT, JSON_MODEL_LOOSE_FLOAT]
    // .
    res = _jm_obj_0(val, path, rep);
    if (! res)
    {
        rep !== null && rep.push(["unexpected element [.]", path])
    }
    return res;
}


var initialized = false

// differed module initializations
export function check_model_init()
{
    if (! initialized)
    {
        initialized = true;
        runtime.jm_set_rx(RegExp)
        _jm_cst_0.add("null")
        _jm_cst_0.add("boolean")
        _jm_cst_0.add("integer")
        _jm_cst_0.add("number")
        _jm_cst_0.add("string")
        _jm_cst_0.add("array")
        _jm_cst_0.add("object")
        _jm_obj_0_map.set("$ref", _jm_f_0)
        _jm_obj_0_map.set("$schema", _jm_f_1)
        _jm_obj_0_map.set("additionalItems", _jm_f_2)
        _jm_obj_0_map.set("additionalProperties", _jm_f_3)
        _jm_obj_0_map.set("allOf", _jm_f_4)
        _jm_obj_0_map.set("anyOf", _jm_f_5)
        _jm_obj_0_map.set("default", _jm_f_6)
        _jm_obj_0_map.set("definitions", _jm_f_7)
        _jm_obj_0_map.set("dependencies", _jm_f_8)
        _jm_obj_0_map.set("description", _jm_f_9)
        _jm_obj_0_map.set("enum", _jm_f_10)
        _jm_obj_0_map.set("exclusiveMaximum", _jm_f_11)
        _jm_obj_0_map.set("exclusiveMinimum", _jm_f_12)
        _jm_obj_0_map.set("format", _jm_f_13)
        _jm_obj_0_map.set("id", _jm_f_14)
        _jm_obj_0_map.set("items", _jm_f_15)
        _jm_obj_0_map.set("maxItems", _jm_f_16)
        _jm_obj_0_map.set("maxLength", _jm_f_17)
        _jm_obj_0_map.set("maxProperties", _jm_f_18)
        _jm_obj_0_map.set("maximum", _jm_f_19)
        _jm_obj_0_map.set("minItems", _jm_f_20)
        _jm_obj_0_map.set("minLength", _jm_f_21)
        _jm_obj_0_map.set("minProperties", _jm_f_22)
        _jm_obj_0_map.set("minimum", _jm_f_23)
        _jm_obj_0_map.set("multipleOf", _jm_f_24)
        _jm_obj_0_map.set("not", _jm_f_25)
        _jm_obj_0_map.set("oneOf", _jm_f_26)
        _jm_obj_0_map.set("pattern", _jm_f_27)
        _jm_obj_0_map.set("patternProperties", _jm_f_28)
        _jm_obj_0_map.set("properties", _jm_f_29)
        _jm_obj_0_map.set("required", _jm_f_30)
        _jm_obj_0_map.set("title", _jm_f_31)
        _jm_obj_0_map.set("type", _jm_f_32)
        _jm_obj_0_map.set("uniqueItems", _jm_f_33)
        check_model_map.set("", json_model_1)
        check_model_map.set("schemaArray", json_model_2)
        check_model_map.set("simpleTypes", json_model_3)
        check_model_map.set("stringArray", json_model_4)
        check_model_map.set("typeArray", json_model_5)
        check_model_map.set("Schema", json_model_1)
    }
}

// differed module cleanup
export function check_model_free()
{
    if (initialized)
    {
        initialized = false;
    }
}

export function check_model(val, name, rep)
{
    let checker = check_model_map.get(name)
    if (checker === undefined)
        throw `no checker for "${name}"`
    let path = rep !== null ? [] : null

    return checker(val, path, rep)
}

// possibly run as main based on a guess
import main from "json_model_runtime/main.js"

if (import.meta.url.endsWith(process.argv[1]))
    main(check_model_init, check_model, check_model_free)
