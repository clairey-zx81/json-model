//
// Generated by JSON Model Compiler version 2
// see https://github.com/clairey-zx81/json-model
//

import json_model.*;
import java.util.Map;
import java.util.Set;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Iterator;
import java.util.regex.Pattern;
import java.util.regex.Matcher;

@SuppressWarnings("unchecked")
public class json_schema_draft_04_fuzzy extends ModelChecker
{
    static public final String VERSION = "2";

    Map<String, Checker> json_model_3_map_pmap;
    Set<Object> _jm_cst_0_set;
    public Map<String, Checker> json_schema_draft_04_fuzzy_map_pmap;

    // check json_model_3_map_$ref (.'$schema'.'$ref')
    public boolean _jm_f_0(Object val, Path path, Report rep)
    {
        // .'$schema'.'$ref'
        boolean res = json.isString(val);
        if (! res)
        {
            if (rep != null) rep.addEntry("unexpected string [.'$schema'.'$ref']", path);
        }
        return res;
    }

    // check json_model_3_map_$schema (.'$schema'.'$schema')
    public boolean _jm_f_1(Object val, Path path, Report rep)
    {
        // .'$schema'.'$schema'
        boolean res = json.isString(val);
        if (! res)
        {
            if (rep != null) rep.addEntry("unexpected string [.'$schema'.'$schema']", path);
        }
        return res;
    }

    // check json_model_3_map_additionalItems (.'$schema'.additionalItems)
    public boolean _jm_f_2(Object val, Path path, Report rep)
    {
        // .'$schema'.additionalItems
        // .'$schema'.additionalItems.'|'.0
        boolean res = json.isBoolean(val);
        if (! res)
        {
            if (rep != null) rep.addEntry("not a bool [.'$schema'.additionalItems.'|'.0]", path);
        }
        if (! res)
        {
            // .'$schema'.additionalItems.'|'.1
            res = json_model_3(val, path, rep);
            if (! res)
            {
                if (rep != null) rep.addEntry("unexpected $Schema [.'$schema'.additionalItems.'|'.1]", path);
            }
        }
        if (res)
        {
            if (rep != null) rep.clearEntries();
        }
        else
        {
            if (rep != null) rep.addEntry("no model matched [.'$schema'.additionalItems.'|']", path);
        }
        return res;
    }

    // check json_model_3_map_additionalProperties (.'$schema'.additionalProperties)
    public boolean _jm_f_3(Object val, Path path, Report rep)
    {
        // .'$schema'.additionalProperties
        // .'$schema'.additionalProperties.'|'.0
        boolean res = json.isBoolean(val);
        if (! res)
        {
            if (rep != null) rep.addEntry("not a bool [.'$schema'.additionalProperties.'|'.0]", path);
        }
        if (! res)
        {
            // .'$schema'.additionalProperties.'|'.1
            res = json_model_3(val, path, rep);
            if (! res)
            {
                if (rep != null) rep.addEntry("unexpected $Schema [.'$schema'.additionalProperties.'|'.1]", path);
            }
        }
        if (res)
        {
            if (rep != null) rep.clearEntries();
        }
        else
        {
            if (rep != null) rep.addEntry("no model matched [.'$schema'.additionalProperties.'|']", path);
        }
        return res;
    }

    // check json_model_3_map_default (.'$schema'.default)
    public boolean _jm_f_4(Object val, Path path, Report rep)
    {
        // .'$schema'.default
        return true;
    }

    // check json_model_3_map_definitions (.'$schema'.definitions)
    public boolean _jm_f_5(Object val, Path path, Report rep)
    {
        // .'$schema'.definitions
        if (! json.isObject(val))
        {
            if (rep != null) rep.addEntry("not an object [.'$schema'.definitions]", path);
            return false;
        }
        boolean res;
        Iterator<String> prop_loop = json.objectIterator(val);
        while (prop_loop.hasNext())
        {
            String prop = prop_loop.next();
            Object pval = json.objectValue(val, prop);
            Path lpath_1 = new Path(prop, path);
            // handle other props
            // .'$schema'.definitions.''
            res = json_model_3(pval, (path != null ? lpath_1 : null), rep);
            if (! res)
            {
                if (rep != null) rep.addEntry("unexpected $Schema [.'$schema'.definitions.'']", (path != null ? lpath_1 : null));
                return false;
            }
        }
        return true;
    }

    // check json_model_3_map_dependencies (.'$schema'.dependencies)
    public boolean _jm_f_6(Object val, Path path, Report rep)
    {
        // .'$schema'.dependencies
        if (! json.isObject(val))
        {
            if (rep != null) rep.addEntry("not an object [.'$schema'.dependencies]", path);
            return false;
        }
        boolean res;
        Iterator<String> prop_loop = json.objectIterator(val);
        while (prop_loop.hasNext())
        {
            String prop = prop_loop.next();
            Object pval = json.objectValue(val, prop);
            Path lpath_2 = new Path(prop, path);
            // handle other props
            // .'$schema'.dependencies.''
            // .'$schema'.dependencies.''.'|'.0
            res = json_model_3(pval, (path != null ? lpath_2 : null), rep);
            if (! res)
            {
                if (rep != null) rep.addEntry("unexpected $Schema [.'$schema'.dependencies.''.'|'.0]", (path != null ? lpath_2 : null));
            }
            if (! res)
            {
                // .'$schema'.dependencies.''.'|'.1
                res = json_model_6(pval, (path != null ? lpath_2 : null), rep);
                if (! res)
                {
                    if (rep != null) rep.addEntry("unexpected $stringArray [.'$schema'.dependencies.''.'|'.1]", (path != null ? lpath_2 : null));
                }
            }
            if (res)
            {
                if (rep != null) rep.clearEntries();
            }
            else
            {
                if (rep != null) rep.addEntry("no model matched [.'$schema'.dependencies.''.'|']", (path != null ? lpath_2 : null));
                return false;
            }
        }
        return true;
    }

    // check json_model_3_map_description (.'$schema'.description)
    public boolean _jm_f_7(Object val, Path path, Report rep)
    {
        // .'$schema'.description
        boolean res = json.isString(val);
        if (! res)
        {
            if (rep != null) rep.addEntry("unexpected string [.'$schema'.description]", path);
        }
        return res;
    }

    // check json_model_3_map_enum (.'$schema'.enum)
    public boolean _jm_f_8(Object val, Path path, Report rep)
    {
        // .'$schema'.enum
        // .'$schema'.enum.'@'
        boolean res = json.isArray(val);
        if (! res)
        {
            if (rep != null) rep.addEntry("not array or unexpected array [.'$schema'.enum.'@']", path);
        }
        if (res)
        {
            long ival_0 = json.arrayLength(val);
            res = rt.array_is_unique(val, path, rep) && ival_0 >= 1;
            if (! res)
            {
                if (rep != null) rep.addEntry("constraints failed [.'$schema'.enum]", path);
            }
        }
        return res;
    }

    // check json_model_3_map_exclusiveMaximum (.'$schema'.exclusiveMaximum)
    public boolean _jm_f_9(Object val, Path path, Report rep)
    {
        // .'$schema'.exclusiveMaximum
        boolean res = json.isBoolean(val);
        if (! res)
        {
            if (rep != null) rep.addEntry("not a bool [.'$schema'.exclusiveMaximum]", path);
        }
        return res;
    }

    // check json_model_3_map_exclusiveMinimum (.'$schema'.exclusiveMinimum)
    public boolean _jm_f_10(Object val, Path path, Report rep)
    {
        // .'$schema'.exclusiveMinimum
        boolean res = json.isBoolean(val);
        if (! res)
        {
            if (rep != null) rep.addEntry("not a bool [.'$schema'.exclusiveMinimum]", path);
        }
        return res;
    }

    // check json_model_3_map_format (.'$schema'.format)
    public boolean _jm_f_11(Object val, Path path, Report rep)
    {
        // .'$schema'.format
        boolean res = json.isString(val);
        if (! res)
        {
            if (rep != null) rep.addEntry("unexpected string [.'$schema'.format]", path);
        }
        return res;
    }

    // check json_model_3_map_id (.'$schema'.id)
    public boolean _jm_f_12(Object val, Path path, Report rep)
    {
        // .'$schema'.id
        boolean res = json.isString(val);
        if (! res)
        {
            if (rep != null) rep.addEntry("unexpected string [.'$schema'.id]", path);
        }
        return res;
    }

    // check json_model_3_map_items (.'$schema'.items)
    public boolean _jm_f_13(Object val, Path path, Report rep)
    {
        // .'$schema'.items
        // .'$schema'.items.'|'.0
        boolean res = json_model_3(val, path, rep);
        if (! res)
        {
            if (rep != null) rep.addEntry("unexpected $Schema [.'$schema'.items.'|'.0]", path);
        }
        if (! res)
        {
            // .'$schema'.items.'|'.1
            res = json_model_4(val, path, rep);
            if (! res)
            {
                if (rep != null) rep.addEntry("unexpected $schemaArray [.'$schema'.items.'|'.1]", path);
            }
        }
        if (res)
        {
            if (rep != null) rep.clearEntries();
        }
        else
        {
            if (rep != null) rep.addEntry("no model matched [.'$schema'.items.'|']", path);
        }
        return res;
    }

    // check json_model_3_map_maxItems (.'$schema'.maxItems)
    public boolean _jm_f_14(Object val, Path path, Report rep)
    {
        // .'$schema'.maxItems
        boolean res = json.isInteger(val) && json.asLong(val) >= 0;
        if (! res)
        {
            if (rep != null) rep.addEntry("not a 0 strict int [.'$schema'.maxItems]", path);
        }
        return res;
    }

    // check json_model_3_map_maxLength (.'$schema'.maxLength)
    public boolean _jm_f_15(Object val, Path path, Report rep)
    {
        // .'$schema'.maxLength
        boolean res = json.isInteger(val) && json.asLong(val) >= 0;
        if (! res)
        {
            if (rep != null) rep.addEntry("not a 0 strict int [.'$schema'.maxLength]", path);
        }
        return res;
    }

    // check json_model_3_map_maxProperties (.'$schema'.maxProperties)
    public boolean _jm_f_16(Object val, Path path, Report rep)
    {
        // .'$schema'.maxProperties
        boolean res = json.isInteger(val) && json.asLong(val) >= 0;
        if (! res)
        {
            if (rep != null) rep.addEntry("not a 0 strict int [.'$schema'.maxProperties]", path);
        }
        return res;
    }

    // check json_model_3_map_maximum (.'$schema'.maximum)
    public boolean _jm_f_17(Object val, Path path, Report rep)
    {
        // .'$schema'.maximum
        boolean res = json.isNumber(val);
        if (! res)
        {
            if (rep != null) rep.addEntry("not a -1.0 loose float [.'$schema'.maximum]", path);
        }
        return res;
    }

    // check json_model_3_map_minItems (.'$schema'.minItems)
    public boolean _jm_f_18(Object val, Path path, Report rep)
    {
        // .'$schema'.minItems
        boolean res = json.isInteger(val) && json.asLong(val) >= 0;
        if (! res)
        {
            if (rep != null) rep.addEntry("not a 0 strict int [.'$schema'.minItems]", path);
        }
        return res;
    }

    // check json_model_3_map_minLength (.'$schema'.minLength)
    public boolean _jm_f_19(Object val, Path path, Report rep)
    {
        // .'$schema'.minLength
        boolean res = json.isInteger(val) && json.asLong(val) >= 0;
        if (! res)
        {
            if (rep != null) rep.addEntry("not a 0 strict int [.'$schema'.minLength]", path);
        }
        return res;
    }

    // check json_model_3_map_minProperties (.'$schema'.minProperties)
    public boolean _jm_f_20(Object val, Path path, Report rep)
    {
        // .'$schema'.minProperties
        boolean res = json.isInteger(val) && json.asLong(val) >= 0;
        if (! res)
        {
            if (rep != null) rep.addEntry("not a 0 strict int [.'$schema'.minProperties]", path);
        }
        return res;
    }

    // check json_model_3_map_minimum (.'$schema'.minimum)
    public boolean _jm_f_21(Object val, Path path, Report rep)
    {
        // .'$schema'.minimum
        boolean res = json.isNumber(val);
        if (! res)
        {
            if (rep != null) rep.addEntry("not a -1.0 loose float [.'$schema'.minimum]", path);
        }
        return res;
    }

    // check json_model_3_map_multipleOf (.'$schema'.multipleOf)
    public boolean _jm_f_22(Object val, Path path, Report rep)
    {
        // .'$schema'.multipleOf
        boolean res = json.isNumber(val) && json.asNumber(val) > 0.0;
        if (! res)
        {
            if (rep != null) rep.addEntry("not a 1.0 loose float [.'$schema'.multipleOf]", path);
        }
        return res;
    }

    // check json_model_3_map_pattern (.'$schema'.pattern)
    public boolean _jm_f_23(Object val, Path path, Report rep)
    {
        // .'$schema'.pattern
        boolean res = json.isString(val);
        if (! res)
        {
            if (rep != null) rep.addEntry("unexpected string [.'$schema'.pattern]", path);
        }
        return res;
    }

    // check json_model_3_map_patternProperties (.'$schema'.patternProperties)
    public boolean _jm_f_24(Object val, Path path, Report rep)
    {
        // .'$schema'.patternProperties
        if (! json.isObject(val))
        {
            if (rep != null) rep.addEntry("not an object [.'$schema'.patternProperties]", path);
            return false;
        }
        boolean res;
        Iterator<String> prop_loop = json.objectIterator(val);
        while (prop_loop.hasNext())
        {
            String prop = prop_loop.next();
            Object pval = json.objectValue(val, prop);
            Path lpath_3 = new Path(prop, path);
            // handle other props
            // .'$schema'.patternProperties.''
            res = json_model_3(pval, (path != null ? lpath_3 : null), rep);
            if (! res)
            {
                if (rep != null) rep.addEntry("unexpected $Schema [.'$schema'.patternProperties.'']", (path != null ? lpath_3 : null));
                return false;
            }
        }
        return true;
    }

    // check json_model_3_map_properties (.'$schema'.properties)
    public boolean _jm_f_25(Object val, Path path, Report rep)
    {
        // .'$schema'.properties
        if (! json.isObject(val))
        {
            if (rep != null) rep.addEntry("not an object [.'$schema'.properties]", path);
            return false;
        }
        boolean res;
        Iterator<String> prop_loop = json.objectIterator(val);
        while (prop_loop.hasNext())
        {
            String prop = prop_loop.next();
            Object pval = json.objectValue(val, prop);
            Path lpath_4 = new Path(prop, path);
            // handle other props
            // .'$schema'.properties.''
            res = json_model_3(pval, (path != null ? lpath_4 : null), rep);
            if (! res)
            {
                if (rep != null) rep.addEntry("unexpected $Schema [.'$schema'.properties.'']", (path != null ? lpath_4 : null));
                return false;
            }
        }
        return true;
    }

    // check json_model_3_map_title (.'$schema'.title)
    public boolean _jm_f_26(Object val, Path path, Report rep)
    {
        // .'$schema'.title
        boolean res = json.isString(val);
        if (! res)
        {
            if (rep != null) rep.addEntry("unexpected string [.'$schema'.title]", path);
        }
        return res;
    }

    // check json_model_3_map_type (.'$schema'.type)
    public boolean _jm_f_27(Object val, Path path, Report rep)
    {
        // .'$schema'.type
        // .'$schema'.type.'|'.0
        boolean res = json_model_5(val, path, rep);
        if (! res)
        {
            if (rep != null) rep.addEntry("unexpected $simpleTypes [.'$schema'.type.'|'.0]", path);
        }
        if (! res)
        {
            // .'$schema'.type.'|'.1
            res = json_model_7(val, path, rep);
            if (! res)
            {
                if (rep != null) rep.addEntry("unexpected $typeArray [.'$schema'.type.'|'.1]", path);
            }
        }
        if (res)
        {
            if (rep != null) rep.clearEntries();
        }
        else
        {
            if (rep != null) rep.addEntry("no model matched [.'$schema'.type.'|']", path);
        }
        return res;
    }

    // check json_model_3_map_uniqueItems (.'$schema'.uniqueItems)
    public boolean _jm_f_28(Object val, Path path, Report rep)
    {
        // .'$schema'.uniqueItems
        boolean res = json.isBoolean(val);
        if (! res)
        {
            if (rep != null) rep.addEntry("not a bool [.'$schema'.uniqueItems]", path);
        }
        return res;
    }


    // check $schema (.'$schema')
    public boolean json_model_3(Object val, Path path, Report rep)
    {
        // JSON Model for JSON Schema Draft 04 [JSON_MODEL_STRICT_INT, JSON_MODEL_LOOSE_FLOAT]
        // .'$schema'
        if (! json.isObject(val))
        {
            if (rep != null) rep.addEntry("not an object [.'$schema']", path);
            return false;
        }
        Checker pfun;
        Iterator<String> prop_loop = json.objectIterator(val);
        while (prop_loop.hasNext())
        {
            String prop = prop_loop.next();
            Object pval = json.objectValue(val, prop);
            Path lpath_0 = new Path(prop, path);
            if ((pfun = json_model_3_map_pmap.get(prop)) != null)
            {
                // handle 34 may props
                if (pfun != null && ! (pfun.call(pval, (path != null ? lpath_0 : null), rep)))
                {
                    if (rep != null) rep.addEntry("invalid optional prop value [.'$schema']", (path != null ? lpath_0 : null));
                    return false;
                }
            }
            else
            {
                // accept any other props
            }
        }
        return true;
    }

    // check $ (.)
    public boolean json_model_1(Object val, Path path, Report rep)
    {
        // .
        boolean res = json_model_3(val, path, rep);
        if (! res)
        {
            if (rep != null) rep.addEntry("unexpected $schema [.]", path);
        }
        return res;
    }

    // check $schema#schemaArray (.'$schema#schemaArray')
    public boolean json_model_4(Object val, Path path, Report rep)
    {
        // .'$schema#schemaArray'
        // .'$schema#schemaArray'.'@'
        boolean res = json.isArray(val);
        if (res)
        {
            int arr_0_idx = -1;
            Iterator<Object> arr_0_item_loop = json.arrayIterator(val);
            while (arr_0_item_loop.hasNext())
            {
                arr_0_idx++;
                Object arr_0_item = arr_0_item_loop.next();
                Path arr_0_lpath = new Path(arr_0_idx, path);
                // .'$schema#schemaArray'.'@'.0
                res = json_model_3(arr_0_item, (path != null ? arr_0_lpath : null), rep);
                if (! res)
                {
                    if (rep != null) rep.addEntry("unexpected $Schema [.'$schema#schemaArray'.'@'.0]", (path != null ? arr_0_lpath : null));
                    break;
                }
            }
        }
        if (! res)
        {
            if (rep != null) rep.addEntry("not array or unexpected array [.'$schema#schemaArray'.'@']", path);
        }
        if (res)
        {
            long ival_1 = json.arrayLength(val);
            res = ival_1 >= 1;
            if (! res)
            {
                if (rep != null) rep.addEntry("constraints failed [.'$schema#schemaArray']", path);
            }
        }
        return res;
    }


    // check $schema#simpleTypes (.'$schema#simpleTypes')
    public boolean json_model_5(Object val, Path path, Report rep)
    {
        // .'$schema#simpleTypes'
        boolean res = json.isScalar(val) && _jm_cst_0_set.contains(val);
        if (! res)
        {
            if (rep != null) rep.addEntry("value not in enum [.'$schema#simpleTypes'.'|']", path);
        }
        return res;
    }

    // check $schema#stringArray (.'$schema#stringArray')
    public boolean json_model_6(Object val, Path path, Report rep)
    {
        // .'$schema#stringArray'
        // .'$schema#stringArray'.'@'
        boolean res = json.isArray(val);
        if (res)
        {
            int arr_1_idx = -1;
            Iterator<Object> arr_1_item_loop = json.arrayIterator(val);
            while (arr_1_item_loop.hasNext())
            {
                arr_1_idx++;
                Object arr_1_item = arr_1_item_loop.next();
                Path arr_1_lpath = new Path(arr_1_idx, path);
                // .'$schema#stringArray'.'@'.0
                res = json.isString(arr_1_item);
                if (! res)
                {
                    if (rep != null) rep.addEntry("unexpected string [.'$schema#stringArray'.'@'.0]", (path != null ? arr_1_lpath : null));
                    break;
                }
            }
        }
        if (! res)
        {
            if (rep != null) rep.addEntry("not array or unexpected array [.'$schema#stringArray'.'@']", path);
        }
        if (res)
        {
            long ival_2 = json.arrayLength(val);
            res = rt.array_is_unique(val, path, rep) && ival_2 >= 1;
            if (! res)
            {
                if (rep != null) rep.addEntry("constraints failed [.'$schema#stringArray']", path);
            }
        }
        return res;
    }

    // check $schema#typeArray (.'$schema#typeArray')
    public boolean json_model_7(Object val, Path path, Report rep)
    {
        // .'$schema#typeArray'
        // .'$schema#typeArray'.'@'
        boolean res = json.isArray(val);
        if (res)
        {
            int arr_2_idx = -1;
            Iterator<Object> arr_2_item_loop = json.arrayIterator(val);
            while (arr_2_item_loop.hasNext())
            {
                arr_2_idx++;
                Object arr_2_item = arr_2_item_loop.next();
                Path arr_2_lpath = new Path(arr_2_idx, path);
                // .'$schema#typeArray'.'@'.0
                res = json_model_5(arr_2_item, (path != null ? arr_2_lpath : null), rep);
                if (! res)
                {
                    if (rep != null) rep.addEntry("unexpected $simpleTypes [.'$schema#typeArray'.'@'.0]", (path != null ? arr_2_lpath : null));
                    break;
                }
            }
        }
        if (! res)
        {
            if (rep != null) rep.addEntry("not array or unexpected array [.'$schema#typeArray'.'@']", path);
        }
        if (res)
        {
            long ival_3 = json.arrayLength(val);
            res = rt.array_is_unique(val, path, rep) && ival_3 >= 1;
            if (! res)
            {
                if (rep != null) rep.addEntry("constraints failed [.'$schema#typeArray']", path);
            }
        }
        return res;
    }


    public void init(JSON json)
    {
        if (!initialized)
        {
            try {
            json_model_3_map_pmap = new HashMap<String, Checker>();
            json_model_3_map_pmap.put("$ref", new Checker() { public boolean call(Object o, Path p, Report r) { return _jm_f_0(o, p, r);} });
            json_model_3_map_pmap.put("$schema", new Checker() { public boolean call(Object o, Path p, Report r) { return _jm_f_1(o, p, r);} });
            json_model_3_map_pmap.put("additionalItems", new Checker() { public boolean call(Object o, Path p, Report r) { return _jm_f_2(o, p, r);} });
            json_model_3_map_pmap.put("additionalProperties", new Checker() { public boolean call(Object o, Path p, Report r) { return _jm_f_3(o, p, r);} });
            json_model_3_map_pmap.put("allOf", new Checker() { public boolean call(Object o, Path p, Report r) { return json_model_4(o, p, r);} });
            json_model_3_map_pmap.put("anyOf", new Checker() { public boolean call(Object o, Path p, Report r) { return json_model_4(o, p, r);} });
            json_model_3_map_pmap.put("default", new Checker() { public boolean call(Object o, Path p, Report r) { return _jm_f_4(o, p, r);} });
            json_model_3_map_pmap.put("definitions", new Checker() { public boolean call(Object o, Path p, Report r) { return _jm_f_5(o, p, r);} });
            json_model_3_map_pmap.put("dependencies", new Checker() { public boolean call(Object o, Path p, Report r) { return _jm_f_6(o, p, r);} });
            json_model_3_map_pmap.put("description", new Checker() { public boolean call(Object o, Path p, Report r) { return _jm_f_7(o, p, r);} });
            json_model_3_map_pmap.put("enum", new Checker() { public boolean call(Object o, Path p, Report r) { return _jm_f_8(o, p, r);} });
            json_model_3_map_pmap.put("exclusiveMaximum", new Checker() { public boolean call(Object o, Path p, Report r) { return _jm_f_9(o, p, r);} });
            json_model_3_map_pmap.put("exclusiveMinimum", new Checker() { public boolean call(Object o, Path p, Report r) { return _jm_f_10(o, p, r);} });
            json_model_3_map_pmap.put("format", new Checker() { public boolean call(Object o, Path p, Report r) { return _jm_f_11(o, p, r);} });
            json_model_3_map_pmap.put("id", new Checker() { public boolean call(Object o, Path p, Report r) { return _jm_f_12(o, p, r);} });
            json_model_3_map_pmap.put("items", new Checker() { public boolean call(Object o, Path p, Report r) { return _jm_f_13(o, p, r);} });
            json_model_3_map_pmap.put("maxItems", new Checker() { public boolean call(Object o, Path p, Report r) { return _jm_f_14(o, p, r);} });
            json_model_3_map_pmap.put("maxLength", new Checker() { public boolean call(Object o, Path p, Report r) { return _jm_f_15(o, p, r);} });
            json_model_3_map_pmap.put("maxProperties", new Checker() { public boolean call(Object o, Path p, Report r) { return _jm_f_16(o, p, r);} });
            json_model_3_map_pmap.put("maximum", new Checker() { public boolean call(Object o, Path p, Report r) { return _jm_f_17(o, p, r);} });
            json_model_3_map_pmap.put("minItems", new Checker() { public boolean call(Object o, Path p, Report r) { return _jm_f_18(o, p, r);} });
            json_model_3_map_pmap.put("minLength", new Checker() { public boolean call(Object o, Path p, Report r) { return _jm_f_19(o, p, r);} });
            json_model_3_map_pmap.put("minProperties", new Checker() { public boolean call(Object o, Path p, Report r) { return _jm_f_20(o, p, r);} });
            json_model_3_map_pmap.put("minimum", new Checker() { public boolean call(Object o, Path p, Report r) { return _jm_f_21(o, p, r);} });
            json_model_3_map_pmap.put("multipleOf", new Checker() { public boolean call(Object o, Path p, Report r) { return _jm_f_22(o, p, r);} });
            json_model_3_map_pmap.put("not", new Checker() { public boolean call(Object o, Path p, Report r) { return json_model_3(o, p, r);} });
            json_model_3_map_pmap.put("oneOf", new Checker() { public boolean call(Object o, Path p, Report r) { return json_model_4(o, p, r);} });
            json_model_3_map_pmap.put("pattern", new Checker() { public boolean call(Object o, Path p, Report r) { return _jm_f_23(o, p, r);} });
            json_model_3_map_pmap.put("patternProperties", new Checker() { public boolean call(Object o, Path p, Report r) { return _jm_f_24(o, p, r);} });
            json_model_3_map_pmap.put("properties", new Checker() { public boolean call(Object o, Path p, Report r) { return _jm_f_25(o, p, r);} });
            json_model_3_map_pmap.put("required", new Checker() { public boolean call(Object o, Path p, Report r) { return json_model_6(o, p, r);} });
            json_model_3_map_pmap.put("title", new Checker() { public boolean call(Object o, Path p, Report r) { return _jm_f_26(o, p, r);} });
            json_model_3_map_pmap.put("type", new Checker() { public boolean call(Object o, Path p, Report r) { return _jm_f_27(o, p, r);} });
            json_model_3_map_pmap.put("uniqueItems", new Checker() { public boolean call(Object o, Path p, Report r) { return _jm_f_28(o, p, r);} });
            _jm_cst_0_set = new HashSet<Object>();
            _jm_cst_0_set.add(json.safeJSON("\"null\""));
            _jm_cst_0_set.add(json.safeJSON("\"boolean\""));
            _jm_cst_0_set.add(json.safeJSON("\"integer\""));
            _jm_cst_0_set.add(json.safeJSON("\"number\""));
            _jm_cst_0_set.add(json.safeJSON("\"string\""));
            _jm_cst_0_set.add(json.safeJSON("\"array\""));
            _jm_cst_0_set.add(json.safeJSON("\"object\""));
            json_schema_draft_04_fuzzy_map_pmap = new HashMap<String, Checker>();
            json_schema_draft_04_fuzzy_map_pmap.put("", new Checker() { public boolean call(Object o, Path p, Report r) { return json_model_3(o, p, r);} });
            json_schema_draft_04_fuzzy_map_pmap.put("schema", new Checker() { public boolean call(Object o, Path p, Report r) { return json_model_3(o, p, r);} });
                super.init(json);
            }
            catch (Exception e) {
                throw new Error("cannot initialized model checker: " + e);
            }
        }
    }

    public void free()
    {
        if (initialized)
        {
            super.free();
            json_model_3_map_pmap = null;
            _jm_cst_0_set = null;
            json_schema_draft_04_fuzzy_map_pmap = null;
        }
    }

    public Checker get(String name)
    {
        return json_schema_draft_04_fuzzy_map_pmap.get(name);
    }

    public Set<String> models()
    {
        return json_schema_draft_04_fuzzy_map_pmap.keySet();
    }

    static public void main(String[] args) throws Exception
    {
        ModelChecker checker = new json_schema_draft_04_fuzzy();
        Main.main("json_schema_draft_04_fuzzy", checker, VERSION, args);
    }
}
