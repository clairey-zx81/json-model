#! /bin/env node
// we may need require to load re2
import { createRequire } from 'node:module';
const require = createRequire(import.meta.url);
//
// Generated by JSON Model Compiler version 2
// see https://github.com/clairey-zx81/json-model
//
import * as runtime from "json_model_runtime"
const JSON_MODEL_VERSION = "2";

var json_model_3_map = new Map()
let _jm_cst_0 = new Set()
var check_model_map = new Map()

// check json_model_3_map_$ref (.'$schema'.'$ref')
function _jm_f_0(val, path, rep)
{
    let res;
    // .'$schema'.'$ref'
    res = runtime.jm_is_valid_url(val);
    if (! res)
    {
        rep !== null && rep.push(["unexpected $URI [.'$schema'.'$ref']", path])
    }
    return res;
}

// check json_model_3_map_$schema (.'$schema'.'$schema')
function _jm_f_1(val, path, rep)
{
    let res;
    // .'$schema'.'$schema'
    res = (typeof val === 'string' || val instanceof String);
    if (! res)
    {
        rep !== null && rep.push(["unexpected string [.'$schema'.'$schema']", path])
    }
    return res;
}

// check json_model_3_map_additionalItems (.'$schema'.additionalItems)
function _jm_f_2(val, path, rep)
{
    let res;
    // .'$schema'.additionalItems
    // .'$schema'.additionalItems.'|'.0
    res = (typeof val === 'boolean' || val instanceof Boolean);
    if (! res)
    {
        rep !== null && rep.push(["not a bool [.'$schema'.additionalItems.'|'.0]", path])
    }
    if (! res)
    {
        // .'$schema'.additionalItems.'|'.1
        res = json_model_3(val, path, rep);
        if (! res)
        {
            rep !== null && rep.push(["unexpected $Schema [.'$schema'.additionalItems.'|'.1]", path])
        }
    }
    if (res)
    {
        if (rep !== null) rep.length = 0
    }
    else
    {
        rep !== null && rep.push(["no model matched [.'$schema'.additionalItems.'|']", path])
    }
    return res;
}

// check json_model_3_map_additionalProperties (.'$schema'.additionalProperties)
function _jm_f_3(val, path, rep)
{
    let res;
    // .'$schema'.additionalProperties
    // .'$schema'.additionalProperties.'|'.0
    res = (typeof val === 'boolean' || val instanceof Boolean);
    if (! res)
    {
        rep !== null && rep.push(["not a bool [.'$schema'.additionalProperties.'|'.0]", path])
    }
    if (! res)
    {
        // .'$schema'.additionalProperties.'|'.1
        res = json_model_3(val, path, rep);
        if (! res)
        {
            rep !== null && rep.push(["unexpected $Schema [.'$schema'.additionalProperties.'|'.1]", path])
        }
    }
    if (res)
    {
        if (rep !== null) rep.length = 0
    }
    else
    {
        rep !== null && rep.push(["no model matched [.'$schema'.additionalProperties.'|']", path])
    }
    return res;
}

// check json_model_3_map_allOf (.'$schema'.allOf)
function _jm_f_4(val, path, rep)
{
    let res;
    // .'$schema'.allOf
    res = json_model_4(val, path, rep);
    if (! res)
    {
        rep !== null && rep.push(["unexpected $schemaArray [.'$schema'.allOf]", path])
    }
    return res;
}

// check json_model_3_map_anyOf (.'$schema'.anyOf)
function _jm_f_5(val, path, rep)
{
    let res;
    // .'$schema'.anyOf
    res = json_model_4(val, path, rep);
    if (! res)
    {
        rep !== null && rep.push(["unexpected $schemaArray [.'$schema'.anyOf]", path])
    }
    return res;
}

// check json_model_3_map_default (.'$schema'.default)
function _jm_f_6(val, path, rep)
{
    let res;
    // .'$schema'.default
    res = true;
    if (! res)
    {
        rep !== null && rep.push(["unexpected $ANY [.'$schema'.default]", path])
    }
    return res;
}

// check json_model_3_map_definitions (.'$schema'.definitions)
function _jm_f_7(val, path, rep)
{
    // .'$schema'.definitions
    if (! (Object.prototype.toString.call(val) === '[object Object]'))
    {
        rep !== null && rep.push(["not an object [.'$schema'.definitions]", path])
        return false;
    }
    let res;
    for (const [prop, pval] of Object.entries(val))
    {
        let lpath_1 = path ? path.concat([prop]) : null;
        // handle other props
        // .'$schema'.definitions.''
        res = json_model_3(pval, (path ? lpath_1 : null), rep);
        if (! res)
        {
            rep !== null && rep.push(["unexpected $Schema [.'$schema'.definitions.'']", (path ? lpath_1 : null)])
            return false;
        }
    }
    return true;
}

// check json_model_3_map_dependencies (.'$schema'.dependencies)
function _jm_f_8(val, path, rep)
{
    // .'$schema'.dependencies
    if (! (Object.prototype.toString.call(val) === '[object Object]'))
    {
        rep !== null && rep.push(["not an object [.'$schema'.dependencies]", path])
        return false;
    }
    let res;
    for (const [prop, pval] of Object.entries(val))
    {
        let lpath_2 = path ? path.concat([prop]) : null;
        // handle other props
        // .'$schema'.dependencies.''
        // .'$schema'.dependencies.''.'|'.0
        res = json_model_3(pval, (path ? lpath_2 : null), rep);
        if (! res)
        {
            rep !== null && rep.push(["unexpected $Schema [.'$schema'.dependencies.''.'|'.0]", (path ? lpath_2 : null)])
        }
        if (! res)
        {
            // .'$schema'.dependencies.''.'|'.1
            res = json_model_6(pval, (path ? lpath_2 : null), rep);
            if (! res)
            {
                rep !== null && rep.push(["unexpected $stringArray [.'$schema'.dependencies.''.'|'.1]", (path ? lpath_2 : null)])
            }
        }
        if (res)
        {
            if (rep !== null) rep.length = 0
        }
        else
        {
            rep !== null && rep.push(["no model matched [.'$schema'.dependencies.''.'|']", (path ? lpath_2 : null)])
            return false;
        }
    }
    return true;
}

// check json_model_3_map_description (.'$schema'.description)
function _jm_f_9(val, path, rep)
{
    let res;
    // .'$schema'.description
    res = (typeof val === 'string' || val instanceof String);
    if (! res)
    {
        rep !== null && rep.push(["unexpected string [.'$schema'.description]", path])
    }
    return res;
}

// check json_model_3_map_enum (.'$schema'.enum)
function _jm_f_10(val, path, rep)
{
    let res;
    // .'$schema'.enum
    // .'$schema'.enum.'@'
    res = Array.isArray(val);
    if (! res)
    {
        rep !== null && rep.push(["not array or unexpected array [.'$schema'.enum.'@']", path])
    }
    if (res)
    {
        let ival_0 = val.length;
        res = runtime.jm_array_is_unique(val, path, rep) && ival_0 >= 1;
        if (! res)
        {
            rep !== null && rep.push(["constraints failed [.'$schema'.enum]", path])
        }
    }
    return res;
}

// check json_model_3_map_exclusiveMaximum (.'$schema'.exclusiveMaximum)
function _jm_f_11(val, path, rep)
{
    let res;
    // .'$schema'.exclusiveMaximum
    res = (typeof val === 'boolean' || val instanceof Boolean);
    if (! res)
    {
        rep !== null && rep.push(["not a bool [.'$schema'.exclusiveMaximum]", path])
    }
    return res;
}

// check json_model_3_map_exclusiveMinimum (.'$schema'.exclusiveMinimum)
function _jm_f_12(val, path, rep)
{
    let res;
    // .'$schema'.exclusiveMinimum
    res = (typeof val === 'boolean' || val instanceof Boolean);
    if (! res)
    {
        rep !== null && rep.push(["not a bool [.'$schema'.exclusiveMinimum]", path])
    }
    return res;
}

// check json_model_3_map_format (.'$schema'.format)
function _jm_f_13(val, path, rep)
{
    let res;
    // .'$schema'.format
    res = (typeof val === 'string' || val instanceof String);
    if (! res)
    {
        rep !== null && rep.push(["unexpected string [.'$schema'.format]", path])
    }
    return res;
}

// check json_model_3_map_id (.'$schema'.id)
function _jm_f_14(val, path, rep)
{
    let res;
    // .'$schema'.id
    res = (typeof val === 'string' || val instanceof String);
    if (! res)
    {
        rep !== null && rep.push(["unexpected string [.'$schema'.id]", path])
    }
    return res;
}

// check json_model_3_map_items (.'$schema'.items)
function _jm_f_15(val, path, rep)
{
    let res;
    // .'$schema'.items
    // .'$schema'.items.'|'.0
    res = json_model_3(val, path, rep);
    if (! res)
    {
        rep !== null && rep.push(["unexpected $Schema [.'$schema'.items.'|'.0]", path])
    }
    if (! res)
    {
        // .'$schema'.items.'|'.1
        res = json_model_4(val, path, rep);
        if (! res)
        {
            rep !== null && rep.push(["unexpected $schemaArray [.'$schema'.items.'|'.1]", path])
        }
    }
    if (res)
    {
        if (rep !== null) rep.length = 0
    }
    else
    {
        rep !== null && rep.push(["no model matched [.'$schema'.items.'|']", path])
    }
    return res;
}

// check json_model_3_map_maxItems (.'$schema'.maxItems)
function _jm_f_16(val, path, rep)
{
    let res;
    // .'$schema'.maxItems
    res = ((typeof val === 'number' || val instanceof Number) && Number.isInteger(val)) && val >= 0;
    if (! res)
    {
        rep !== null && rep.push(["not a 0 strict int [.'$schema'.maxItems]", path])
    }
    return res;
}

// check json_model_3_map_maxLength (.'$schema'.maxLength)
function _jm_f_17(val, path, rep)
{
    let res;
    // .'$schema'.maxLength
    res = ((typeof val === 'number' || val instanceof Number) && Number.isInteger(val)) && val >= 0;
    if (! res)
    {
        rep !== null && rep.push(["not a 0 strict int [.'$schema'.maxLength]", path])
    }
    return res;
}

// check json_model_3_map_maxProperties (.'$schema'.maxProperties)
function _jm_f_18(val, path, rep)
{
    let res;
    // .'$schema'.maxProperties
    res = ((typeof val === 'number' || val instanceof Number) && Number.isInteger(val)) && val >= 0;
    if (! res)
    {
        rep !== null && rep.push(["not a 0 strict int [.'$schema'.maxProperties]", path])
    }
    return res;
}

// check json_model_3_map_maximum (.'$schema'.maximum)
function _jm_f_19(val, path, rep)
{
    let res;
    // .'$schema'.maximum
    res = (typeof val === 'number' || val instanceof Number);
    if (! res)
    {
        rep !== null && rep.push(["not a -1.0 loose float [.'$schema'.maximum]", path])
    }
    return res;
}

// check json_model_3_map_minItems (.'$schema'.minItems)
function _jm_f_20(val, path, rep)
{
    let res;
    // .'$schema'.minItems
    res = ((typeof val === 'number' || val instanceof Number) && Number.isInteger(val)) && val >= 0;
    if (! res)
    {
        rep !== null && rep.push(["not a 0 strict int [.'$schema'.minItems]", path])
    }
    return res;
}

// check json_model_3_map_minLength (.'$schema'.minLength)
function _jm_f_21(val, path, rep)
{
    let res;
    // .'$schema'.minLength
    res = ((typeof val === 'number' || val instanceof Number) && Number.isInteger(val)) && val >= 0;
    if (! res)
    {
        rep !== null && rep.push(["not a 0 strict int [.'$schema'.minLength]", path])
    }
    return res;
}

// check json_model_3_map_minProperties (.'$schema'.minProperties)
function _jm_f_22(val, path, rep)
{
    let res;
    // .'$schema'.minProperties
    res = ((typeof val === 'number' || val instanceof Number) && Number.isInteger(val)) && val >= 0;
    if (! res)
    {
        rep !== null && rep.push(["not a 0 strict int [.'$schema'.minProperties]", path])
    }
    return res;
}

// check json_model_3_map_minimum (.'$schema'.minimum)
function _jm_f_23(val, path, rep)
{
    let res;
    // .'$schema'.minimum
    res = (typeof val === 'number' || val instanceof Number);
    if (! res)
    {
        rep !== null && rep.push(["not a -1.0 loose float [.'$schema'.minimum]", path])
    }
    return res;
}

// check json_model_3_map_multipleOf (.'$schema'.multipleOf)
function _jm_f_24(val, path, rep)
{
    let res;
    // .'$schema'.multipleOf
    res = ((typeof val === 'number' || val instanceof Number)) && val > 0.0;
    if (! res)
    {
        rep !== null && rep.push(["not a 1.0 loose float [.'$schema'.multipleOf]", path])
    }
    return res;
}

// check json_model_3_map_not (.'$schema'.not)
function _jm_f_25(val, path, rep)
{
    let res;
    // .'$schema'.not
    res = json_model_3(val, path, rep);
    if (! res)
    {
        rep !== null && rep.push(["unexpected $Schema [.'$schema'.not]", path])
    }
    return res;
}

// check json_model_3_map_oneOf (.'$schema'.oneOf)
function _jm_f_26(val, path, rep)
{
    let res;
    // .'$schema'.oneOf
    res = json_model_4(val, path, rep);
    if (! res)
    {
        rep !== null && rep.push(["unexpected $schemaArray [.'$schema'.oneOf]", path])
    }
    return res;
}

// check json_model_3_map_pattern (.'$schema'.pattern)
function _jm_f_27(val, path, rep)
{
    let res;
    // .'$schema'.pattern
    res = runtime.jm_is_valid_regex(val, false);
    if (! res)
    {
        rep !== null && rep.push(["unexpected $REGEX [.'$schema'.pattern]", path])
    }
    return res;
}

// check json_model_3_map_patternProperties (.'$schema'.patternProperties)
function _jm_f_28(val, path, rep)
{
    // .'$schema'.patternProperties
    if (! (Object.prototype.toString.call(val) === '[object Object]'))
    {
        rep !== null && rep.push(["not an object [.'$schema'.patternProperties]", path])
        return false;
    }
    let res;
    for (const [prop, pval] of Object.entries(val))
    {
        let lpath_3 = path ? path.concat([prop]) : null;
        // handle other props
        // .'$schema'.patternProperties.''
        res = json_model_3(pval, (path ? lpath_3 : null), rep);
        if (! res)
        {
            rep !== null && rep.push(["unexpected $Schema [.'$schema'.patternProperties.'']", (path ? lpath_3 : null)])
            return false;
        }
    }
    return true;
}

// check json_model_3_map_properties (.'$schema'.properties)
function _jm_f_29(val, path, rep)
{
    // .'$schema'.properties
    if (! (Object.prototype.toString.call(val) === '[object Object]'))
    {
        rep !== null && rep.push(["not an object [.'$schema'.properties]", path])
        return false;
    }
    let res;
    for (const [prop, pval] of Object.entries(val))
    {
        let lpath_4 = path ? path.concat([prop]) : null;
        // handle other props
        // .'$schema'.properties.''
        res = json_model_3(pval, (path ? lpath_4 : null), rep);
        if (! res)
        {
            rep !== null && rep.push(["unexpected $Schema [.'$schema'.properties.'']", (path ? lpath_4 : null)])
            return false;
        }
    }
    return true;
}

// check json_model_3_map_required (.'$schema'.required)
function _jm_f_30(val, path, rep)
{
    let res;
    // .'$schema'.required
    res = json_model_6(val, path, rep);
    if (! res)
    {
        rep !== null && rep.push(["unexpected $stringArray [.'$schema'.required]", path])
    }
    return res;
}

// check json_model_3_map_title (.'$schema'.title)
function _jm_f_31(val, path, rep)
{
    let res;
    // .'$schema'.title
    res = (typeof val === 'string' || val instanceof String);
    if (! res)
    {
        rep !== null && rep.push(["unexpected string [.'$schema'.title]", path])
    }
    return res;
}

// check json_model_3_map_type (.'$schema'.type)
function _jm_f_32(val, path, rep)
{
    let res;
    // .'$schema'.type
    // .'$schema'.type.'|'.0
    res = json_model_5(val, path, rep);
    if (! res)
    {
        rep !== null && rep.push(["unexpected $simpleTypes [.'$schema'.type.'|'.0]", path])
    }
    if (! res)
    {
        // .'$schema'.type.'|'.1
        res = json_model_7(val, path, rep);
        if (! res)
        {
            rep !== null && rep.push(["unexpected $typeArray [.'$schema'.type.'|'.1]", path])
        }
    }
    if (res)
    {
        if (rep !== null) rep.length = 0
    }
    else
    {
        rep !== null && rep.push(["no model matched [.'$schema'.type.'|']", path])
    }
    return res;
}

// check json_model_3_map_uniqueItems (.'$schema'.uniqueItems)
function _jm_f_33(val, path, rep)
{
    let res;
    // .'$schema'.uniqueItems
    res = (typeof val === 'boolean' || val instanceof Boolean);
    if (! res)
    {
        rep !== null && rep.push(["not a bool [.'$schema'.uniqueItems]", path])
    }
    return res;
}


// check $schema (.'$schema')
function json_model_3(val, path, rep)
{
    // JSON Model for JSON Schema Draft 04 [JSON_MODEL_STRICT_INT, JSON_MODEL_LOOSE_FLOAT]
    // .'$schema'
    if (! (Object.prototype.toString.call(val) === '[object Object]'))
    {
        rep !== null && rep.push(["not an object [.'$schema']", path])
        return false;
    }
    let res;
    let pfun;
    for (const [prop, pval] of Object.entries(val))
    {
        let lpath_0 = path ? path.concat([prop]) : null;
        if ((pfun = json_model_3_map.get(prop)))
        {
            // handle 34 may props
            if (pfun !== undefined && ! pfun(pval, (path ? lpath_0 : null), rep))
            {
                rep !== null && rep.push(["invalid optional prop value [.'$schema']", (path ? lpath_0 : null)])
                return false;
            }
        }
        else
        {
            // handle other props
            // .'$schema'.''
            res = json_model_3(pval, (path ? lpath_0 : null), rep);
            if (! res)
            {
                rep !== null && rep.push(["unexpected $Schema [.'$schema'.'']", (path ? lpath_0 : null)])
                return false;
            }
        }
    }
    return true;
}

// check $ (.)
function json_model_1(val, path, rep)
{
    let res;
    // .
    res = json_model_3(val, path, rep);
    if (! res)
    {
        rep !== null && rep.push(["unexpected $schema [.]", path])
    }
    return res;
}

// check $schema#schemaArray (.'$schema#schemaArray')
function json_model_4(val, path, rep)
{
    let res;
    // .'$schema#schemaArray'
    // .'$schema#schemaArray'.'@'
    res = Array.isArray(val);
    if (res)
    {
        for (let arr_0_idx = 0; arr_0_idx < val.length; arr_0_idx++)
        {
            let arr_0_item = val[arr_0_idx]
            let arr_0_lpath = path ? path.concat([arr_0_idx]) : null;
            // .'$schema#schemaArray'.'@'.0
            res = json_model_3(arr_0_item, (path ? arr_0_lpath : null), rep);
            if (! res)
            {
                rep !== null && rep.push(["unexpected $Schema [.'$schema#schemaArray'.'@'.0]", (path ? arr_0_lpath : null)])
                break;
            }
        }
    }
    if (! res)
    {
        rep !== null && rep.push(["not array or unexpected array [.'$schema#schemaArray'.'@']", path])
    }
    if (res)
    {
        let ival_1 = val.length;
        res = ival_1 >= 1;
        if (! res)
        {
            rep !== null && rep.push(["constraints failed [.'$schema#schemaArray']", path])
        }
    }
    return res;
}


// check $schema#simpleTypes (.'$schema#simpleTypes')
function json_model_5(val, path, rep)
{
    let res;
    // .'$schema#simpleTypes'
    res = ((val === null || (typeof val === 'number' || val instanceof Number) || (typeof val === 'boolean' || val instanceof Boolean) || (typeof val === 'string' || val instanceof String))) && _jm_cst_0.has(val);
    if (! res)
    {
        rep !== null && rep.push(["value not in enum [.'$schema#simpleTypes'.'|']", path])
    }
    return res;
}

// check $schema#stringArray (.'$schema#stringArray')
function json_model_6(val, path, rep)
{
    let res;
    // .'$schema#stringArray'
    // .'$schema#stringArray'.'@'
    res = Array.isArray(val);
    if (res)
    {
        for (let arr_1_idx = 0; arr_1_idx < val.length; arr_1_idx++)
        {
            let arr_1_item = val[arr_1_idx]
            let arr_1_lpath = path ? path.concat([arr_1_idx]) : null;
            // .'$schema#stringArray'.'@'.0
            res = (typeof arr_1_item === 'string' || arr_1_item instanceof String);
            if (! res)
            {
                rep !== null && rep.push(["unexpected string [.'$schema#stringArray'.'@'.0]", (path ? arr_1_lpath : null)])
                break;
            }
        }
    }
    if (! res)
    {
        rep !== null && rep.push(["not array or unexpected array [.'$schema#stringArray'.'@']", path])
    }
    if (res)
    {
        let ival_2 = val.length;
        res = runtime.jm_array_is_unique(val, path, rep) && ival_2 >= 1;
        if (! res)
        {
            rep !== null && rep.push(["constraints failed [.'$schema#stringArray']", path])
        }
    }
    return res;
}

// check $schema#typeArray (.'$schema#typeArray')
function json_model_7(val, path, rep)
{
    let res;
    // .'$schema#typeArray'
    // .'$schema#typeArray'.'@'
    res = Array.isArray(val);
    if (res)
    {
        for (let arr_2_idx = 0; arr_2_idx < val.length; arr_2_idx++)
        {
            let arr_2_item = val[arr_2_idx]
            let arr_2_lpath = path ? path.concat([arr_2_idx]) : null;
            // .'$schema#typeArray'.'@'.0
            res = json_model_5(arr_2_item, (path ? arr_2_lpath : null), rep);
            if (! res)
            {
                rep !== null && rep.push(["unexpected $simpleTypes [.'$schema#typeArray'.'@'.0]", (path ? arr_2_lpath : null)])
                break;
            }
        }
    }
    if (! res)
    {
        rep !== null && rep.push(["not array or unexpected array [.'$schema#typeArray'.'@']", path])
    }
    if (res)
    {
        let ival_3 = val.length;
        res = runtime.jm_array_is_unique(val, path, rep) && ival_3 >= 1;
        if (! res)
        {
            rep !== null && rep.push(["constraints failed [.'$schema#typeArray']", path])
        }
    }
    return res;
}


var initialized = false

// differed module initializations
export function check_model_init()
{
    if (! initialized)
    {
        initialized = true;
        runtime.jm_set_rx(RegExp)
        json_model_3_map.set("$ref", _jm_f_0)
        json_model_3_map.set("$schema", _jm_f_1)
        json_model_3_map.set("additionalItems", _jm_f_2)
        json_model_3_map.set("additionalProperties", _jm_f_3)
        json_model_3_map.set("allOf", _jm_f_4)
        json_model_3_map.set("anyOf", _jm_f_5)
        json_model_3_map.set("default", _jm_f_6)
        json_model_3_map.set("definitions", _jm_f_7)
        json_model_3_map.set("dependencies", _jm_f_8)
        json_model_3_map.set("description", _jm_f_9)
        json_model_3_map.set("enum", _jm_f_10)
        json_model_3_map.set("exclusiveMaximum", _jm_f_11)
        json_model_3_map.set("exclusiveMinimum", _jm_f_12)
        json_model_3_map.set("format", _jm_f_13)
        json_model_3_map.set("id", _jm_f_14)
        json_model_3_map.set("items", _jm_f_15)
        json_model_3_map.set("maxItems", _jm_f_16)
        json_model_3_map.set("maxLength", _jm_f_17)
        json_model_3_map.set("maxProperties", _jm_f_18)
        json_model_3_map.set("maximum", _jm_f_19)
        json_model_3_map.set("minItems", _jm_f_20)
        json_model_3_map.set("minLength", _jm_f_21)
        json_model_3_map.set("minProperties", _jm_f_22)
        json_model_3_map.set("minimum", _jm_f_23)
        json_model_3_map.set("multipleOf", _jm_f_24)
        json_model_3_map.set("not", _jm_f_25)
        json_model_3_map.set("oneOf", _jm_f_26)
        json_model_3_map.set("pattern", _jm_f_27)
        json_model_3_map.set("patternProperties", _jm_f_28)
        json_model_3_map.set("properties", _jm_f_29)
        json_model_3_map.set("required", _jm_f_30)
        json_model_3_map.set("title", _jm_f_31)
        json_model_3_map.set("type", _jm_f_32)
        json_model_3_map.set("uniqueItems", _jm_f_33)
        _jm_cst_0.add("null")
        _jm_cst_0.add("boolean")
        _jm_cst_0.add("integer")
        _jm_cst_0.add("number")
        _jm_cst_0.add("string")
        _jm_cst_0.add("array")
        _jm_cst_0.add("object")
        check_model_map.set("", json_model_3)
        check_model_map.set("schema", json_model_3)
    }
}

// differed module cleanup
export function check_model_free()
{
    if (initialized)
    {
        initialized = false;
    }
}

export function check_model(val, name, rep)
{
    let checker = check_model_map.get(name)
    if (checker === undefined)
        throw `no checker for "${name}"`
    let path = rep !== null ? [] : null

    return checker(val, path, rep)
}

// possibly run as main based on a guess
import main from "json_model_runtime/main.js"

if (import.meta.url.endsWith(process.argv[1]))
    main(check_model_init, check_model, check_model_free)
