#! /bin/env node
// we may need require to load re2
import { createRequire } from 'node:module';
const require = createRequire(import.meta.url);
//
// Generated by JSON Model Compiler version 2
// see https://github.com/clairey-zx81/json-model
//
import * as runtime from "json_model_runtime"
const JSON_MODEL_VERSION = "2";

var check_model_map = new Map()

// object .f0
function _jm_obj_0(val, path, rep)
{
    return Object.prototype.toString.call(val) === '[object Object]' && Object.keys(val).length == 0;
}

// object .f1
function _jm_obj_1(val, path, rep)
{
    return Object.prototype.toString.call(val) === '[object Object]' && Object.keys(val).length == 0;
}

// object .f2
function _jm_obj_2(val, path, rep)
{
    return Object.prototype.toString.call(val) === '[object Object]' && Object.keys(val).length == 0;
}

// object .f3
function _jm_obj_3(val, path, rep)
{
    return Object.prototype.toString.call(val) === '[object Object]' && Object.keys(val).length == 0;
}

// object .f4
function _jm_obj_4(val, path, rep)
{
    return Object.prototype.toString.call(val) === '[object Object]' && Object.keys(val).length == 0;
}

// object .f5
function _jm_obj_5(val, path, rep)
{
    return Object.prototype.toString.call(val) === '[object Object]' && Object.keys(val).length == 0;
}

// object .f6
function _jm_obj_6(val, path, rep)
{
    return Object.prototype.toString.call(val) === '[object Object]' && Object.keys(val).length == 0;
}

// object .f7
function _jm_obj_7(val, path, rep)
{
    return Object.prototype.toString.call(val) === '[object Object]' && Object.keys(val).length == 0;
}

// object .f8
function _jm_obj_8(val, path, rep)
{
    return Object.prototype.toString.call(val) === '[object Object]' && Object.keys(val).length == 0;
}

// object .f9
function _jm_obj_9(val, path, rep)
{
    return Object.prototype.toString.call(val) === '[object Object]' && Object.keys(val).length == 0;
}

// check $ (.)
function json_model_1(val, path, rep)
{
    // .
    if (! (Object.prototype.toString.call(val) === '[object Object]'))
    {
        return false;
    }
    let res;
    for (const [prop, pval] of Object.entries(val))
    {
        if (prop == "f0")
        {
            // handle may f0 property
            // .f0
            res = _jm_obj_0(pval, null, null);
            if (! res)
            {
                return false;
            }
        }
        else if (prop == "f1")
        {
            // handle may f1 property
            // .f1
            res = _jm_obj_1(pval, null, null);
            if (! res)
            {
                return false;
            }
        }
        else if (prop == "f2")
        {
            // handle may f2 property
            // .f2
            res = _jm_obj_2(pval, null, null);
            if (! res)
            {
                return false;
            }
        }
        else if (prop == "f3")
        {
            // handle may f3 property
            // .f3
            res = _jm_obj_3(pval, null, null);
            if (! res)
            {
                return false;
            }
        }
        else if (prop == "f4")
        {
            // handle may f4 property
            // .f4
            res = _jm_obj_4(pval, null, null);
            if (! res)
            {
                return false;
            }
        }
        else if (prop == "f5")
        {
            // handle may f5 property
            // .f5
            res = _jm_obj_5(pval, null, null);
            if (! res)
            {
                return false;
            }
        }
        else if (prop == "f6")
        {
            // handle may f6 property
            // .f6
            res = _jm_obj_6(pval, null, null);
            if (! res)
            {
                return false;
            }
        }
        else if (prop == "f7")
        {
            // handle may f7 property
            // .f7
            res = _jm_obj_7(pval, null, null);
            if (! res)
            {
                return false;
            }
        }
        else if (prop == "f8")
        {
            // handle may f8 property
            // .f8
            res = _jm_obj_8(pval, null, null);
            if (! res)
            {
                return false;
            }
        }
        else if (prop == "f9")
        {
            // handle may f9 property
            // .f9
            res = _jm_obj_9(pval, null, null);
            if (! res)
            {
                return false;
            }
        }
        else
        {
            return false;
        }
    }
    return true;
}


var initialized = false

// differed module initializations
export function check_model_init()
{
    if (! initialized)
    {
        initialized = true;
        runtime.jm_set_rx(RegExp)
        check_model_map.set("", json_model_1)
    }
}

// differed module cleanup
export function check_model_free()
{
    if (initialized)
    {
        initialized = false;
    }
}

export function check_model(val, name, rep)
{
    let checker = check_model_map.get(name)
    if (checker === undefined)
        throw `no checker for "${name}"`
    let path = rep !== null ? [] : null

    return checker(val, path, rep)
}

// possibly run as main based on a guess
import main from "json_model_runtime/main.js"

if (import.meta.url.endsWith(process.argv[1]))
    main(check_model_init, check_model, check_model_free)
