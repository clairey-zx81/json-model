#! /bin/env node
// we may need require to load re2
import { createRequire } from 'node:module';
const require = createRequire(import.meta.url);
//
// Generated by JSON Model Compiler version 2
// see https://github.com/clairey-zx81/json-model
//
import * as runtime from "json_model_runtime"
const JSON_MODEL_VERSION = "2";

var check_model_map = new Map()

// check $ (.)
function json_model_1(val, path, rep)
{
    // inline up to 3 must/may properties
    // .
    if (! (Object.prototype.toString.call(val) === '[object Object]'))
    {
        rep !== null && rep.push(["not an object [.]", path])
        return false;
    }
    let res;
    let must_count = 0;
    for (const [prop, pval] of Object.entries(val))
    {
        let lpath_0 = path ? path.concat([prop]) : null;
        if (prop == "mu1")
        {
            // handle must mu1 property
            must_count += 1;
            // .mu1
            res = pval === null;
            if (! res)
            {
                rep !== null && rep.push(["not null [.mu1]", (path ? lpath_0 : null)])
                rep !== null && rep.push(["invalid mandatory prop value [.mu1]", (path ? lpath_0 : null)])
                return false;
            }
        }
        else if (prop == "mu2")
        {
            // handle must mu2 property
            must_count += 1;
            // .mu2
            res = (typeof pval === 'boolean' || pval instanceof Boolean);
            if (! res)
            {
                rep !== null && rep.push(["not a bool [.mu2]", (path ? lpath_0 : null)])
                rep !== null && rep.push(["invalid mandatory prop value [.mu2]", (path ? lpath_0 : null)])
                return false;
            }
        }
        else if (prop == "mu3")
        {
            // handle must mu3 property
            must_count += 1;
            // .mu3
            res = ((typeof pval === 'number' || pval instanceof Number) && Number.isInteger(pval)) && pval >= 0;
            if (! res)
            {
                rep !== null && rep.push(["not a 0 strict int [.mu3]", (path ? lpath_0 : null)])
                rep !== null && rep.push(["invalid mandatory prop value [.mu3]", (path ? lpath_0 : null)])
                return false;
            }
        }
        else if (prop == "ma1")
        {
            // handle may ma1 property
            // .ma1
            res = ((typeof pval === 'number' || pval instanceof Number)) && pval >= 0.0;
            if (! res)
            {
                rep !== null && rep.push(["not a 0.0 strict float [.ma1]", (path ? lpath_0 : null)])
                rep !== null && rep.push(["invalid optional prop value [.ma1]", (path ? lpath_0 : null)])
                return false;
            }
        }
        else if (prop == "ma2")
        {
            // handle may ma2 property
            // .ma2
            res = (typeof pval === 'string' || pval instanceof String);
            if (! res)
            {
                rep !== null && rep.push(["unexpected string [.ma2]", (path ? lpath_0 : null)])
                rep !== null && rep.push(["invalid optional prop value [.ma2]", (path ? lpath_0 : null)])
                return false;
            }
        }
        else if (prop == "ma3")
        {
            // handle may ma3 property
            // .ma3
            res = runtime.jm_is_valid_date(pval, (path ? lpath_0 : null), rep);
            if (! res)
            {
                rep !== null && rep.push(["unexpected $DATE [.ma3]", (path ? lpath_0 : null)])
                rep !== null && rep.push(["invalid optional prop value [.ma3]", (path ? lpath_0 : null)])
                return false;
            }
        }
        else
        {
            rep !== null && rep.push(["unexpected prop [.]", (path ? lpath_0 : null)])
            return false;
        }
    }
    if (must_count != 3)
    {
        if (rep !== null)
        {
            if (! val.hasOwnProperty("mu1"))
            {
                rep !== null && rep.push(["missing mandatory prop <mu1> [.]", path])
            }
            if (! val.hasOwnProperty("mu2"))
            {
                rep !== null && rep.push(["missing mandatory prop <mu2> [.]", path])
            }
            if (! val.hasOwnProperty("mu3"))
            {
                rep !== null && rep.push(["missing mandatory prop <mu3> [.]", path])
            }
        }
        return false;
    }
    return true;
}


var initialized = false

// differed module initializations
export function check_model_init()
{
    if (! initialized)
    {
        initialized = true;
        runtime.jm_set_rx(RegExp)
        check_model_map.set("", json_model_1)
    }
}

// differed module cleanup
export function check_model_free()
{
    if (initialized)
    {
        initialized = false;
    }
}

export function check_model(val, name, rep)
{
    let checker = check_model_map.get(name)
    if (checker === undefined)
        throw `no checker for "${name}"`
    let path = rep !== null ? [] : null

    return checker(val, path, rep)
}

// possibly run as main based on a guess
import main from "json_model_runtime/main.js"

if (import.meta.url.endsWith(process.argv[1]))
    main(check_model_init, check_model, check_model_free)
