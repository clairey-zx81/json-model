#! /bin/env node
//
// Generated by JSON Model Compiler version 2.0a0
// see https://github.com/clairey-zx81/json-model
//
import * as runtime from "json_model_runtime"
const JSON_MODEL_VERSION = "2.0a0";

var _jm_obj_0_mup = new Map()
var _jm_obj_1_map = new Map()
var _jm_obj_2_mup = new Map()
var check_model_map = new Map()

// check _jm_obj_0_mup_a (.'$O0'.a)
function _jm_f_0(val, path, rep)
{
    let res;
    // .'$O0'.a
    res = (typeof val === 'boolean' || val instanceof Boolean);
    if (! res)
    {
        rep !== null && rep.push(["not a bool [.'$O0'.a]", path])
    }
    return res;
}

// check _jm_obj_0_mup_b (.'$O0'.b)
function _jm_f_1(val, path, rep)
{
    let res;
    // .'$O0'.b
    res = ((typeof val === 'number' || val instanceof Number) && Number.isInteger(val)) && val >= 0;
    if (! res)
    {
        rep !== null && rep.push(["not a 0 strict int [.'$O0'.b]", path])
    }
    return res;
}

// check _jm_obj_0_mup_c (.'$O0'.c)
function _jm_f_2(val, path, rep)
{
    let res;
    // .'$O0'.c
    res = val === null;
    if (! res)
    {
        rep !== null && rep.push(["not null [.'$O0'.c]", path])
    }
    return res;
}

// check _jm_obj_0_mup_d (.'$O0'.d)
function _jm_f_3(val, path, rep)
{
    let res;
    // .'$O0'.d
    res = ((typeof val === 'number' || val instanceof Number)) && val >= 0.0;
    if (! res)
    {
        rep !== null && rep.push(["not a 0.0 strict float [.'$O0'.d]", path])
    }
    return res;
}


// object .'$O0'
function _jm_obj_0(val, path, rep)
{
    if (! (Object.prototype.toString.call(val) === '[object Object]'))
    {
        rep !== null && rep.push(["not an object [.'$O0']", path])
        return false;
    }
    let res;
    let pfun;
    let must_count = 0;
    for(const [prop, pval] of Object.entries(val))
    {
        let lpath_0 = path ? path.concat([prop]) : null;
        if ((pfun = _jm_obj_0_mup.get(prop)))
        {
            // handle 4 mandatory props
            if (pfun !== undefined)
            {
                must_count += 1;
                if (! pfun(pval, (path ? lpath_0 : null), rep))
                {
                    rep !== null && rep.push(["invalid mandatory prop value [.'$O0']", (path ? lpath_0 : null)])
                    return false;
                }
            }
        }
        else
        {
            // handle other props
            // .'$O0'.''
            res = runtime.jm_is_valid_date(pval);
            if (! res)
            {
                rep !== null && rep.push(["unexpected $DATE [.'$O0'.'']", (path ? lpath_0 : null)])
            }
            if (! res)
            {
                return false;
            }
        }
    }
    if (must_count != 4)
    {
        if (rep !== null)
        {
            if (! val.hasOwnProperty("a"))
            {
                rep !== null && rep.push(["missing mandatory prop <a> [.'$O0'.'']", path])
            }
            if (! val.hasOwnProperty("b"))
            {
                rep !== null && rep.push(["missing mandatory prop <b> [.'$O0'.'']", path])
            }
            if (! val.hasOwnProperty("c"))
            {
                rep !== null && rep.push(["missing mandatory prop <c> [.'$O0'.'']", path])
            }
            if (! val.hasOwnProperty("d"))
            {
                rep !== null && rep.push(["missing mandatory prop <d> [.'$O0'.'']", path])
            }
        }
        return false;
    }
    return true;
}

// check $O0 (.'$O0')
function json_model_2(val, path, rep)
{
    let res;
    // .'$O0'
    res = _jm_obj_0(val, path, rep);
    if (! res)
    {
        rep !== null && rep.push(["not an expected object [.'$O0']", path])
    }
    return res;
}

// check _jm_obj_1_map_a (.'$O1'.a)
function _jm_f_4(val, path, rep)
{
    let res;
    // .'$O1'.a
    res = (typeof val === 'boolean' || val instanceof Boolean);
    if (! res)
    {
        rep !== null && rep.push(["not a bool [.'$O1'.a]", path])
    }
    return res;
}

// check _jm_obj_1_map_b (.'$O1'.b)
function _jm_f_5(val, path, rep)
{
    let res;
    // .'$O1'.b
    res = ((typeof val === 'number' || val instanceof Number) && Number.isInteger(val)) && val >= 0;
    if (! res)
    {
        rep !== null && rep.push(["not a 0 strict int [.'$O1'.b]", path])
    }
    return res;
}

// check _jm_obj_1_map_c (.'$O1'.c)
function _jm_f_6(val, path, rep)
{
    let res;
    // .'$O1'.c
    res = val === null;
    if (! res)
    {
        rep !== null && rep.push(["not null [.'$O1'.c]", path])
    }
    return res;
}

// check _jm_obj_1_map_d (.'$O1'.d)
function _jm_f_7(val, path, rep)
{
    let res;
    // .'$O1'.d
    res = ((typeof val === 'number' || val instanceof Number)) && val >= 0.0;
    if (! res)
    {
        rep !== null && rep.push(["not a 0.0 strict float [.'$O1'.d]", path])
    }
    return res;
}


// object .'$O1'
function _jm_obj_1(val, path, rep)
{
    if (! (Object.prototype.toString.call(val) === '[object Object]'))
    {
        rep !== null && rep.push(["not an object [.'$O1']", path])
        return false;
    }
    let res;
    let pfun;
    let must_count = 0;
    for(const [prop, pval] of Object.entries(val))
    {
        let lpath_1 = path ? path.concat([prop]) : null;
        if (prop == "z")
        {
            // handle must z property
            must_count += 1;
            // .'$O1'.z
            res = (typeof pval === 'boolean' || pval instanceof Boolean);
            if (! res)
            {
                rep !== null && rep.push(["not a bool [.'$O1'.z]", (path ? lpath_1 : null)])
            }
            if (! res)
            {
                rep !== null && rep.push(["invalid mandatory prop value [.'$O1'.z]", (path ? lpath_1 : null)])
                return false;
            }
        }
        else if ((pfun = _jm_obj_1_map.get(prop)))
        {
            // handle 4 may props
            if (pfun !== undefined && ! pfun(pval, (path ? lpath_1 : null), rep))
            {
                rep !== null && rep.push(["invalid optional prop value [.'$O1']", (path ? lpath_1 : null)])
                return false;
            }
        }
        else
        {
            rep !== null && rep.push(["unexpected prop [.'$O1']", (path ? lpath_1 : null)])
            return false;
        }
    }
    if (must_count != 1)
    {
        if (rep !== null)
        {
            if (! val.hasOwnProperty("z"))
            {
                rep !== null && rep.push(["missing mandatory prop <z> [.'$O1']", path])
            }
        }
        return false;
    }
    return true;
}

// check $O1 (.'$O1')
function json_model_3(val, path, rep)
{
    let res;
    // .'$O1'
    res = _jm_obj_1(val, path, rep);
    if (! res)
    {
        rep !== null && rep.push(["not an expected object [.'$O1']", path])
    }
    return res;
}

// check _jm_obj_2_mup_a (.'$O2'.a)
function _jm_f_8(val, path, rep)
{
    let res;
    // .'$O2'.a
    res = (typeof val === 'boolean' || val instanceof Boolean);
    if (! res)
    {
        rep !== null && rep.push(["not a bool [.'$O2'.a]", path])
    }
    return res;
}

// check _jm_obj_2_mup_b (.'$O2'.b)
function _jm_f_9(val, path, rep)
{
    let res;
    // .'$O2'.b
    res = ((typeof val === 'number' || val instanceof Number) && Number.isInteger(val)) && val >= 0;
    if (! res)
    {
        rep !== null && rep.push(["not a 0 strict int [.'$O2'.b]", path])
    }
    return res;
}

// check _jm_obj_2_mup_c (.'$O2'.c)
function _jm_f_10(val, path, rep)
{
    let res;
    // .'$O2'.c
    res = val === null;
    if (! res)
    {
        rep !== null && rep.push(["not null [.'$O2'.c]", path])
    }
    return res;
}

// check _jm_obj_2_mup_d (.'$O2'.d)
function _jm_f_11(val, path, rep)
{
    let res;
    // .'$O2'.d
    res = ((typeof val === 'number' || val instanceof Number)) && val >= 0.0;
    if (! res)
    {
        rep !== null && rep.push(["not a 0.0 strict float [.'$O2'.d]", path])
    }
    return res;
}


// object .'$O2'
function _jm_obj_2(val, path, rep)
{
    if (! (Object.prototype.toString.call(val) === '[object Object]'))
    {
        rep !== null && rep.push(["not an object [.'$O2']", path])
        return false;
    }
    let res;
    let pfun;
    let must_count = 0;
    for(const [prop, pval] of Object.entries(val))
    {
        let lpath_2 = path ? path.concat([prop]) : null;
        if ((pfun = _jm_obj_2_mup.get(prop)))
        {
            // handle 4 mandatory props
            if (pfun !== undefined)
            {
                must_count += 1;
                if (! pfun(pval, (path ? lpath_2 : null), rep))
                {
                    rep !== null && rep.push(["invalid mandatory prop value [.'$O2']", (path ? lpath_2 : null)])
                    return false;
                }
            }
        }
        else if (prop == "y")
        {
            // handle may y property
            // .'$O2'.y
            res = (typeof pval === 'boolean' || pval instanceof Boolean);
            if (! res)
            {
                rep !== null && rep.push(["not a bool [.'$O2'.y]", (path ? lpath_2 : null)])
            }
            if (! res)
            {
                rep !== null && rep.push(["invalid optional prop value [.'$O2'.y]", (path ? lpath_2 : null)])
                return false;
            }
        }
        else
        {
            rep !== null && rep.push(["unexpected prop [.'$O2']", (path ? lpath_2 : null)])
            return false;
        }
    }
    if (must_count != 4)
    {
        if (rep !== null)
        {
            if (! val.hasOwnProperty("a"))
            {
                rep !== null && rep.push(["missing mandatory prop <a> [.'$O2']", path])
            }
            if (! val.hasOwnProperty("b"))
            {
                rep !== null && rep.push(["missing mandatory prop <b> [.'$O2']", path])
            }
            if (! val.hasOwnProperty("c"))
            {
                rep !== null && rep.push(["missing mandatory prop <c> [.'$O2']", path])
            }
            if (! val.hasOwnProperty("d"))
            {
                rep !== null && rep.push(["missing mandatory prop <d> [.'$O2']", path])
            }
        }
        return false;
    }
    return true;
}

// check $O2 (.'$O2')
function json_model_4(val, path, rep)
{
    let res;
    // .'$O2'
    res = _jm_obj_2(val, path, rep);
    if (! res)
    {
        rep !== null && rep.push(["not an expected object [.'$O2']", path])
    }
    return res;
}

// check $ (.)
function json_model_1(val, path, rep)
{
    let res;
    // .
    // .'|'.0
    res = json_model_2(val, path, rep);
    if (! res)
    {
        rep !== null && rep.push(["unexpected $O0 [.'|'.0]", path])
    }
    if (! res)
    {
        // .'|'.1
        res = json_model_3(val, path, rep);
        if (! res)
        {
            rep !== null && rep.push(["unexpected $O1 [.'|'.1]", path])
        }
        if (! res)
        {
            // .'|'.2
            res = json_model_4(val, path, rep);
            if (! res)
            {
                rep !== null && rep.push(["unexpected $O2 [.'|'.2]", path])
            }
        }
    }
    if (res)
    {
        if (rep !== null) rep.length = 0
    }
    else
    {
        rep !== null && rep.push(["no model matched [.'|']", path])
    }
    return res;
}


var initialized = false

// differed module initializations
export function check_model_init()
{
    if (! initialized)
    {
        initialized = true;
        _jm_obj_0_mup.set("a", _jm_f_0)
        _jm_obj_0_mup.set("b", _jm_f_1)
        _jm_obj_0_mup.set("c", _jm_f_2)
        _jm_obj_0_mup.set("d", _jm_f_3)
        _jm_obj_1_map.set("a", _jm_f_4)
        _jm_obj_1_map.set("b", _jm_f_5)
        _jm_obj_1_map.set("c", _jm_f_6)
        _jm_obj_1_map.set("d", _jm_f_7)
        _jm_obj_2_mup.set("a", _jm_f_8)
        _jm_obj_2_mup.set("b", _jm_f_9)
        _jm_obj_2_mup.set("c", _jm_f_10)
        _jm_obj_2_mup.set("d", _jm_f_11)
        check_model_map.set("", json_model_1)
        check_model_map.set("O0", json_model_2)
        check_model_map.set("O1", json_model_3)
        check_model_map.set("O2", json_model_4)
    }
}

// differed module cleanup
export function check_model_free()
{
    if (initialized)
    {
        initialized = false;
    }
}

export function check_model(val, name, rep)
{
    let checker = check_model_map.get(name)
    if (checker === undefined)
        throw `no checker for "${name}"`
    let path = rep !== null ? [] : null

    return checker(val, path, rep)
}

// possibly run as main based on a guess
import main from "json_model_runtime/main.js"

if (import.meta.url.endsWith(process.argv[1]))
    main(check_model_init, check_model, check_model_free)
