#! /usr/bin/perl
#
# Generated by JSON Model Compiler version 2
# see https://github.com/clairey-zx81/json-model
#
use strict;
use warnings;
no warnings "uninitialized";
use re::engine::RE2;
use JSON::JsonModel;
use constant JMC_VERSION => '2';


my %_jm_cst_0;
sub json_model_2($$$);
sub _jm_xre_0($$$);
sub json_model_1($$$);
my %check_model_map;


# check $character (.'$character')
sub json_model_2($$$)
{
    my ($val, $path, $rep) = @_;
    my $res;
    # .'$character'
    $res = jm_is_scalar($val) && jm_is_string($val) && exists $_jm_cst_0{$val};
    return $res;
}

sub _jm_xre_0_re($$$)
{
    my ($val, $path, $rep) = @_;
    my $res = $val =~ /'(?<s1>\w+)'.*'(?<s2>\w+)'/;
    return $res;
}

sub _jm_xre_0($$$)
{
    my ($val, $path, $rep) = @_;
    my $extract;
    my $match = $val =~ /'(?<s1>\w+)'.*'(?<s2>\w+)'/;
    if (! $match)
    {
        return 0;
    }
    $extract = $+{'s1'};
    if (! json_model_2($extract, $path, $rep))
    {
        return 0;
    }
    $extract = $+{'s2'};
    if (! json_model_2($extract, $path, $rep))
    {
        return 0;
    }
    return 1;
}

# check $ (.)
sub json_model_1($$$)
{
    my ($val, $path, $rep) = @_;
    my $res;
    # .
    # "/'($character:\\w+)'.*'($character:\\w+)'/X"
    $res = jm_is_string($val) && _jm_xre_0($val, $path, $rep);
    return $res;
}


# initialization of global variables

our $initialized = 0;

sub check_model_init()
{
    if (!$initialized)
    {
        $initialized = 1;
        %_jm_cst_0 = (
            'Susie' => 1,
            'Calvin' => 1,
            'Hobbes' => 1,
        );
        %check_model_map = (
            '' => \&json_model_1,
            'character' => \&json_model_2,
        );
    }
}

sub check_model_free()
{
    if ($initialized)
    {
        $initialized = 0;
        %_jm_cst_0 = ();
        %check_model_map = ();
    }
}

sub check_model($$$)
{
    my ($json, $name, $rep) = @_;
    die "unexpected model name \"$name\"" unless exists $check_model_map{$name};
    my $path = defined $rep ? [] : undef;
    return $check_model_map{$name}($json, $path, $rep);
}

#
# SCRIPT EXECUTION
#
check_model_init();
jm_main(\&check_model, \%check_model_map, JMC_VERSION);
check_model_free();
