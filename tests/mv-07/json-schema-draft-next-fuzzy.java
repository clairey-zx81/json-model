//
// Generated by JSON Model Compiler version 2
// see https://github.com/clairey-zx81/json-model
//

import json_model.*;
import java.util.Map;
import java.util.Set;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Iterator;
import java.util.regex.Pattern;
import java.util.regex.Matcher;

@SuppressWarnings("unchecked")
public class json_schema_draft_next_fuzzy extends ModelChecker
{
    static public final String VERSION = "2";

    Set<Object> _jm_cst_0_set;
    public Map<String, Checker> json_schema_draft_next_fuzzy_map_pmap;

    // check $schema (.'$schema')
    public boolean json_model_3(Object val, Path path, Report rep)
    {
        boolean res;
        // JSON Schema Draft Next as of 2023 [JSON_MODEL_LOOSE_INT, JSON_MODEL_LOOSE_FLOAT]
        // .'$schema'
        // .'$schema'.'@'
        res = json_model_18(val, path, rep);
        if (! res)
        {
            if (rep != null) rep.addEntry("unexpected $Schema [.'$schema'.'@']", path);
        }
        return res;
    }

    // check $ (.)
    public boolean json_model_1(Object val, Path path, Report rep)
    {
        boolean res;
        // .
        res = json_model_3(val, path, rep);
        if (! res)
        {
            if (rep != null) rep.addEntry("unexpected $schema [.]", path);
        }
        return res;
    }

    // check $schema#Schema (.'$schema#Schema')
    public boolean json_model_18(Object val, Path path, Report rep)
    {
        boolean res;
        // .'$schema#Schema'
        // .'$schema#Schema'.'|'.0
        res = json.isBoolean(val);
        if (! res)
        {
            if (rep != null) rep.addEntry("not a bool [.'$schema#Schema'.'|'.0]", path);
        }
        if (! res)
        {
            // .'$schema#Schema'.'|'.1
            res = json_model_17(val, path, rep);
            if (! res)
            {
                if (rep != null) rep.addEntry("unexpected $ObjectSchema [.'$schema#Schema'.'|'.1]", path);
            }
        }
        if (res)
        {
            if (rep != null) rep.clearEntries();
        }
        else
        {
            if (rep != null) rep.addEntry("no model matched [.'$schema#Schema'.'|']", path);
        }
        return res;
    }

    // object .'$schema#ObjectSchema'.'$vocabulary'
    public boolean _jm_obj_1(Object val, Path path, Report rep)
    {
        if (! json.isObject(val))
        {
            if (rep != null) rep.addEntry("not an object [.'$schema#ObjectSchema'.'$vocabulary']", path);
            return false;
        }
        boolean res;
        Iterator<String> prop_loop = json.objectIterator(val);
        while (prop_loop.hasNext())
        {
            String prop = prop_loop.next();
            Object pval = json.objectValue(val, prop);
            Path lpath_0 = new Path(prop, path);
            if (rt.is_valid_url(prop))
            {
                // handle 1 key props
                // .'$schema#ObjectSchema'.'$vocabulary'.'$URI'
                res = json.isBoolean(pval);
                if (! res)
                {
                    if (rep != null) rep.addEntry("not a bool [.'$schema#ObjectSchema'.'$vocabulary'.'$URI']", (path != null ? lpath_0 : null));
                    return false;
                }
            }
            else
            {
                if (rep != null) rep.addEntry("unexpected prop [.'$schema#ObjectSchema'.'$vocabulary']", (path != null ? lpath_0 : null));
                return false;
            }
        }
        return true;
    }

    // object .'$schema#ObjectSchema'.'$defs'
    public boolean _jm_obj_2(Object val, Path path, Report rep)
    {
        if (! json.isObject(val))
        {
            if (rep != null) rep.addEntry("not an object [.'$schema#ObjectSchema'.'$defs']", path);
            return false;
        }
        boolean res;
        Iterator<String> prop_loop = json.objectIterator(val);
        while (prop_loop.hasNext())
        {
            String prop = prop_loop.next();
            Object pval = json.objectValue(val, prop);
            Path lpath_1 = new Path(prop, path);
            // handle other props
            // .'$schema#ObjectSchema'.'$defs'.''
            res = json_model_18(pval, (path != null ? lpath_1 : null), rep);
            if (! res)
            {
                if (rep != null) rep.addEntry("unexpected $Schema [.'$schema#ObjectSchema'.'$defs'.'']", (path != null ? lpath_1 : null));
                return false;
            }
        }
        return true;
    }

    // object .'$schema#ObjectSchema'.properties
    public boolean _jm_obj_3(Object val, Path path, Report rep)
    {
        if (! json.isObject(val))
        {
            if (rep != null) rep.addEntry("not an object [.'$schema#ObjectSchema'.properties]", path);
            return false;
        }
        boolean res;
        Iterator<String> prop_loop = json.objectIterator(val);
        while (prop_loop.hasNext())
        {
            String prop = prop_loop.next();
            Object pval = json.objectValue(val, prop);
            Path lpath_2 = new Path(prop, path);
            // handle other props
            // .'$schema#ObjectSchema'.properties.''
            res = json_model_18(pval, (path != null ? lpath_2 : null), rep);
            if (! res)
            {
                if (rep != null) rep.addEntry("unexpected $Schema [.'$schema#ObjectSchema'.properties.'']", (path != null ? lpath_2 : null));
                return false;
            }
        }
        return true;
    }

    // object .'$schema#ObjectSchema'.patternProperties
    public boolean _jm_obj_4(Object val, Path path, Report rep)
    {
        if (! json.isObject(val))
        {
            if (rep != null) rep.addEntry("not an object [.'$schema#ObjectSchema'.patternProperties]", path);
            return false;
        }
        boolean res;
        Iterator<String> prop_loop = json.objectIterator(val);
        while (prop_loop.hasNext())
        {
            String prop = prop_loop.next();
            Object pval = json.objectValue(val, prop);
            Path lpath_3 = new Path(prop, path);
            // handle other props
            // .'$schema#ObjectSchema'.patternProperties.''
            res = json_model_18(pval, (path != null ? lpath_3 : null), rep);
            if (! res)
            {
                if (rep != null) rep.addEntry("unexpected $Schema [.'$schema#ObjectSchema'.patternProperties.'']", (path != null ? lpath_3 : null));
                return false;
            }
        }
        return true;
    }

    // object .'$schema#ObjectSchema'.dependentSchemas
    public boolean _jm_obj_5(Object val, Path path, Report rep)
    {
        if (! json.isObject(val))
        {
            if (rep != null) rep.addEntry("not an object [.'$schema#ObjectSchema'.dependentSchemas]", path);
            return false;
        }
        boolean res;
        Iterator<String> prop_loop = json.objectIterator(val);
        while (prop_loop.hasNext())
        {
            String prop = prop_loop.next();
            Object pval = json.objectValue(val, prop);
            Path lpath_4 = new Path(prop, path);
            // handle other props
            // .'$schema#ObjectSchema'.dependentSchemas.''
            res = json_model_18(pval, (path != null ? lpath_4 : null), rep);
            if (! res)
            {
                if (rep != null) rep.addEntry("unexpected $Schema [.'$schema#ObjectSchema'.dependentSchemas.'']", (path != null ? lpath_4 : null));
                return false;
            }
        }
        return true;
    }

    // object .'$schema#ObjectSchema'.propertyDependencies.''
    public boolean _jm_obj_7(Object val, Path path, Report rep)
    {
        if (! json.isObject(val))
        {
            if (rep != null) rep.addEntry("not an object [.'$schema#ObjectSchema'.propertyDependencies.'']", path);
            return false;
        }
        boolean res;
        Iterator<String> prop_loop = json.objectIterator(val);
        while (prop_loop.hasNext())
        {
            String prop = prop_loop.next();
            Object pval = json.objectValue(val, prop);
            Path lpath_6 = new Path(prop, path);
            // handle other props
            // .'$schema#ObjectSchema'.propertyDependencies.''.''
            res = json_model_18(pval, (path != null ? lpath_6 : null), rep);
            if (! res)
            {
                if (rep != null) rep.addEntry("unexpected $Schema [.'$schema#ObjectSchema'.propertyDependencies.''.'']", (path != null ? lpath_6 : null));
                return false;
            }
        }
        return true;
    }

    // object .'$schema#ObjectSchema'.propertyDependencies
    public boolean _jm_obj_6(Object val, Path path, Report rep)
    {
        if (! json.isObject(val))
        {
            if (rep != null) rep.addEntry("not an object [.'$schema#ObjectSchema'.propertyDependencies]", path);
            return false;
        }
        boolean res;
        Iterator<String> prop_loop = json.objectIterator(val);
        while (prop_loop.hasNext())
        {
            String prop = prop_loop.next();
            Object pval = json.objectValue(val, prop);
            Path lpath_5 = new Path(prop, path);
            // handle other props
            // .'$schema#ObjectSchema'.propertyDependencies.''
            res = _jm_obj_7(pval, (path != null ? lpath_5 : null), rep);
            if (! res)
            {
                if (rep != null) rep.addEntry("unexpected element [.'$schema#ObjectSchema'.propertyDependencies.'']", (path != null ? lpath_5 : null));
                return false;
            }
        }
        return true;
    }

    // object .'$schema#ObjectSchema'.dependentRequired
    public boolean _jm_obj_8(Object val, Path path, Report rep)
    {
        if (! json.isObject(val))
        {
            if (rep != null) rep.addEntry("not an object [.'$schema#ObjectSchema'.dependentRequired]", path);
            return false;
        }
        boolean res;
        Iterator<String> prop_loop = json.objectIterator(val);
        while (prop_loop.hasNext())
        {
            String prop = prop_loop.next();
            Object pval = json.objectValue(val, prop);
            Path lpath_7 = new Path(prop, path);
            // handle other props
            // .'$schema#ObjectSchema'.dependentRequired.''
            res = json_model_12(pval, (path != null ? lpath_7 : null), rep);
            if (! res)
            {
                if (rep != null) rep.addEntry("unexpected $stringArray [.'$schema#ObjectSchema'.dependentRequired.'']", (path != null ? lpath_7 : null));
                return false;
            }
        }
        return true;
    }

    // object .'$schema#ObjectSchema'.definitions
    public boolean _jm_obj_9(Object val, Path path, Report rep)
    {
        if (! json.isObject(val))
        {
            if (rep != null) rep.addEntry("not an object [.'$schema#ObjectSchema'.definitions]", path);
            return false;
        }
        boolean res;
        Iterator<String> prop_loop = json.objectIterator(val);
        while (prop_loop.hasNext())
        {
            String prop = prop_loop.next();
            Object pval = json.objectValue(val, prop);
            Path lpath_8 = new Path(prop, path);
            // handle other props
            // .'$schema#ObjectSchema'.definitions.''
            res = json_model_18(pval, (path != null ? lpath_8 : null), rep);
            if (! res)
            {
                if (rep != null) rep.addEntry("unexpected $Schema [.'$schema#ObjectSchema'.definitions.'']", (path != null ? lpath_8 : null));
                return false;
            }
        }
        return true;
    }

    // object .'$schema#ObjectSchema'.dependencies
    public boolean _jm_obj_10(Object val, Path path, Report rep)
    {
        if (! json.isObject(val))
        {
            if (rep != null) rep.addEntry("not an object [.'$schema#ObjectSchema'.dependencies]", path);
            return false;
        }
        boolean res;
        Iterator<String> prop_loop = json.objectIterator(val);
        while (prop_loop.hasNext())
        {
            String prop = prop_loop.next();
            Object pval = json.objectValue(val, prop);
            Path lpath_9 = new Path(prop, path);
            // handle other props
            // .'$schema#ObjectSchema'.dependencies.''
            // .'$schema#ObjectSchema'.dependencies.''.'|'.0
            res = json_model_18(pval, (path != null ? lpath_9 : null), rep);
            if (! res)
            {
                if (rep != null) rep.addEntry("unexpected $Schema [.'$schema#ObjectSchema'.dependencies.''.'|'.0]", (path != null ? lpath_9 : null));
            }
            if (! res)
            {
                // .'$schema#ObjectSchema'.dependencies.''.'|'.1
                res = json_model_12(pval, (path != null ? lpath_9 : null), rep);
                if (! res)
                {
                    if (rep != null) rep.addEntry("unexpected $stringArray [.'$schema#ObjectSchema'.dependencies.''.'|'.1]", (path != null ? lpath_9 : null));
                }
            }
            if (res)
            {
                if (rep != null) rep.clearEntries();
            }
            else
            {
                if (rep != null) rep.addEntry("no model matched [.'$schema#ObjectSchema'.dependencies.''.'|']", (path != null ? lpath_9 : null));
                return false;
            }
        }
        return true;
    }

    // object .'$schema#ObjectSchema'
    public boolean _jm_obj_0(Object val, Path path, Report rep)
    {
        // check must only props
        if (! json.isObject(val))
        {
            if (rep != null) rep.addEntry("not an object [.'$schema#ObjectSchema']", path);
            return false;
        }
        Object pval;
        boolean res;
        if (json.objectHasProp(val, "$id"))
        {
            pval = json.objectValue(val, "$id");
            // .'$schema#ObjectSchema'.'$id'
            res = json_model_4(pval, path, rep);
            if (! res)
            {
                if (rep != null) rep.addEntry("unexpected $URI-REFERENCE [.'$schema#ObjectSchema'.'$id']", path);
                if (rep != null) rep.addEntry("unexpected value for optional prop <$id> [.'$schema#ObjectSchema']", path);
                return false;
            }
        }
        if (json.objectHasProp(val, "$schema"))
        {
            pval = json.objectValue(val, "$schema");
            // .'$schema#ObjectSchema'.'$schema'
            res = json.isString(pval) && rt.is_valid_url(json.asString(pval));
            if (! res)
            {
                if (rep != null) rep.addEntry("unexpected $URI [.'$schema#ObjectSchema'.'$schema']", path);
                if (rep != null) rep.addEntry("unexpected value for optional prop <$schema> [.'$schema#ObjectSchema']", path);
                return false;
            }
        }
        if (json.objectHasProp(val, "$ref"))
        {
            pval = json.objectValue(val, "$ref");
            // .'$schema#ObjectSchema'.'$ref'
            res = json_model_4(pval, path, rep);
            if (! res)
            {
                if (rep != null) rep.addEntry("unexpected $URI-REFERENCE [.'$schema#ObjectSchema'.'$ref']", path);
                if (rep != null) rep.addEntry("unexpected value for optional prop <$ref> [.'$schema#ObjectSchema']", path);
                return false;
            }
        }
        if (json.objectHasProp(val, "$anchor"))
        {
            pval = json.objectValue(val, "$anchor");
            // .'$schema#ObjectSchema'.'$anchor'
            res = json_model_4(pval, path, rep);
            if (! res)
            {
                if (rep != null) rep.addEntry("unexpected $URI-REFERENCE [.'$schema#ObjectSchema'.'$anchor']", path);
                if (rep != null) rep.addEntry("unexpected value for optional prop <$anchor> [.'$schema#ObjectSchema']", path);
                return false;
            }
        }
        if (json.objectHasProp(val, "$dynamicRef"))
        {
            pval = json.objectValue(val, "$dynamicRef");
            // .'$schema#ObjectSchema'.'$dynamicRef'
            res = json_model_4(pval, path, rep);
            if (! res)
            {
                if (rep != null) rep.addEntry("unexpected $URI-REFERENCE [.'$schema#ObjectSchema'.'$dynamicRef']", path);
                if (rep != null) rep.addEntry("unexpected value for optional prop <$dynamicRef> [.'$schema#ObjectSchema']", path);
                return false;
            }
        }
        if (json.objectHasProp(val, "$dynamicAnchor"))
        {
            pval = json.objectValue(val, "$dynamicAnchor");
            // .'$schema#ObjectSchema'.'$dynamicAnchor'
            res = json_model_4(pval, path, rep);
            if (! res)
            {
                if (rep != null) rep.addEntry("unexpected $URI-REFERENCE [.'$schema#ObjectSchema'.'$dynamicAnchor']", path);
                if (rep != null) rep.addEntry("unexpected value for optional prop <$dynamicAnchor> [.'$schema#ObjectSchema']", path);
                return false;
            }
        }
        if (json.objectHasProp(val, "$vocabulary"))
        {
            pval = json.objectValue(val, "$vocabulary");
            // .'$schema#ObjectSchema'.'$vocabulary'
            res = _jm_obj_1(pval, path, rep);
            if (! res)
            {
                if (rep != null) rep.addEntry("unexpected element [.'$schema#ObjectSchema'.'$vocabulary']", path);
                if (rep != null) rep.addEntry("unexpected value for optional prop <$vocabulary> [.'$schema#ObjectSchema']", path);
                return false;
            }
        }
        if (json.objectHasProp(val, "$comment"))
        {
            pval = json.objectValue(val, "$comment");
            // .'$schema#ObjectSchema'.'$comment'
            res = json.isString(pval);
            if (! res)
            {
                if (rep != null) rep.addEntry("unexpected string [.'$schema#ObjectSchema'.'$comment']", path);
                if (rep != null) rep.addEntry("unexpected value for optional prop <$comment> [.'$schema#ObjectSchema']", path);
                return false;
            }
        }
        if (json.objectHasProp(val, "$defs"))
        {
            pval = json.objectValue(val, "$defs");
            // .'$schema#ObjectSchema'.'$defs'
            res = _jm_obj_2(pval, path, rep);
            if (! res)
            {
                if (rep != null) rep.addEntry("unexpected element [.'$schema#ObjectSchema'.'$defs']", path);
                if (rep != null) rep.addEntry("unexpected value for optional prop <$defs> [.'$schema#ObjectSchema']", path);
                return false;
            }
        }
        if (json.objectHasProp(val, "prefixItems"))
        {
            pval = json.objectValue(val, "prefixItems");
            // .'$schema#ObjectSchema'.prefixItems
            res = json_model_15(pval, path, rep);
            if (! res)
            {
                if (rep != null) rep.addEntry("unexpected $schemaArray [.'$schema#ObjectSchema'.prefixItems]", path);
                if (rep != null) rep.addEntry("unexpected value for optional prop <prefixItems> [.'$schema#ObjectSchema']", path);
                return false;
            }
        }
        if (json.objectHasProp(val, "items"))
        {
            pval = json.objectValue(val, "items");
            // .'$schema#ObjectSchema'.items
            res = json_model_18(pval, path, rep);
            if (! res)
            {
                if (rep != null) rep.addEntry("unexpected $Schema [.'$schema#ObjectSchema'.items]", path);
                if (rep != null) rep.addEntry("unexpected value for optional prop <items> [.'$schema#ObjectSchema']", path);
                return false;
            }
        }
        if (json.objectHasProp(val, "contains"))
        {
            pval = json.objectValue(val, "contains");
            // .'$schema#ObjectSchema'.contains
            res = json_model_18(pval, path, rep);
            if (! res)
            {
                if (rep != null) rep.addEntry("unexpected $Schema [.'$schema#ObjectSchema'.contains]", path);
                if (rep != null) rep.addEntry("unexpected value for optional prop <contains> [.'$schema#ObjectSchema']", path);
                return false;
            }
        }
        if (json.objectHasProp(val, "additionalProperties"))
        {
            pval = json.objectValue(val, "additionalProperties");
            // .'$schema#ObjectSchema'.additionalProperties
            res = json_model_18(pval, path, rep);
            if (! res)
            {
                if (rep != null) rep.addEntry("unexpected $Schema [.'$schema#ObjectSchema'.additionalProperties]", path);
                if (rep != null) rep.addEntry("unexpected value for optional prop <additionalProperties> [.'$schema#ObjectSchema']", path);
                return false;
            }
        }
        if (json.objectHasProp(val, "properties"))
        {
            pval = json.objectValue(val, "properties");
            // .'$schema#ObjectSchema'.properties
            res = _jm_obj_3(pval, path, rep);
            if (! res)
            {
                if (rep != null) rep.addEntry("unexpected element [.'$schema#ObjectSchema'.properties]", path);
                if (rep != null) rep.addEntry("unexpected value for optional prop <properties> [.'$schema#ObjectSchema']", path);
                return false;
            }
        }
        if (json.objectHasProp(val, "patternProperties"))
        {
            pval = json.objectValue(val, "patternProperties");
            // .'$schema#ObjectSchema'.patternProperties
            res = _jm_obj_4(pval, path, rep);
            if (! res)
            {
                if (rep != null) rep.addEntry("unexpected element [.'$schema#ObjectSchema'.patternProperties]", path);
                if (rep != null) rep.addEntry("unexpected value for optional prop <patternProperties> [.'$schema#ObjectSchema']", path);
                return false;
            }
        }
        if (json.objectHasProp(val, "dependentSchemas"))
        {
            pval = json.objectValue(val, "dependentSchemas");
            // .'$schema#ObjectSchema'.dependentSchemas
            res = _jm_obj_5(pval, path, rep);
            if (! res)
            {
                if (rep != null) rep.addEntry("unexpected element [.'$schema#ObjectSchema'.dependentSchemas]", path);
                if (rep != null) rep.addEntry("unexpected value for optional prop <dependentSchemas> [.'$schema#ObjectSchema']", path);
                return false;
            }
        }
        if (json.objectHasProp(val, "propertyDependencies"))
        {
            pval = json.objectValue(val, "propertyDependencies");
            // .'$schema#ObjectSchema'.propertyDependencies
            res = _jm_obj_6(pval, path, rep);
            if (! res)
            {
                if (rep != null) rep.addEntry("unexpected element [.'$schema#ObjectSchema'.propertyDependencies]", path);
                if (rep != null) rep.addEntry("unexpected value for optional prop <propertyDependencies> [.'$schema#ObjectSchema']", path);
                return false;
            }
        }
        if (json.objectHasProp(val, "propertyNames"))
        {
            pval = json.objectValue(val, "propertyNames");
            // .'$schema#ObjectSchema'.propertyNames
            res = json_model_18(pval, path, rep);
            if (! res)
            {
                if (rep != null) rep.addEntry("unexpected $Schema [.'$schema#ObjectSchema'.propertyNames]", path);
                if (rep != null) rep.addEntry("unexpected value for optional prop <propertyNames> [.'$schema#ObjectSchema']", path);
                return false;
            }
        }
        if (json.objectHasProp(val, "if"))
        {
            pval = json.objectValue(val, "if");
            // .'$schema#ObjectSchema'.if
            res = json_model_18(pval, path, rep);
            if (! res)
            {
                if (rep != null) rep.addEntry("unexpected $Schema [.'$schema#ObjectSchema'.if]", path);
                if (rep != null) rep.addEntry("unexpected value for optional prop <if> [.'$schema#ObjectSchema']", path);
                return false;
            }
        }
        if (json.objectHasProp(val, "then"))
        {
            pval = json.objectValue(val, "then");
            // .'$schema#ObjectSchema'.then
            res = json_model_18(pval, path, rep);
            if (! res)
            {
                if (rep != null) rep.addEntry("unexpected $Schema [.'$schema#ObjectSchema'.then]", path);
                if (rep != null) rep.addEntry("unexpected value for optional prop <then> [.'$schema#ObjectSchema']", path);
                return false;
            }
        }
        if (json.objectHasProp(val, "else"))
        {
            pval = json.objectValue(val, "else");
            // .'$schema#ObjectSchema'.else
            res = json_model_18(pval, path, rep);
            if (! res)
            {
                if (rep != null) rep.addEntry("unexpected $Schema [.'$schema#ObjectSchema'.else]", path);
                if (rep != null) rep.addEntry("unexpected value for optional prop <else> [.'$schema#ObjectSchema']", path);
                return false;
            }
        }
        if (json.objectHasProp(val, "not"))
        {
            pval = json.objectValue(val, "not");
            // .'$schema#ObjectSchema'.not
            res = json_model_18(pval, path, rep);
            if (! res)
            {
                if (rep != null) rep.addEntry("unexpected $Schema [.'$schema#ObjectSchema'.not]", path);
                if (rep != null) rep.addEntry("unexpected value for optional prop <not> [.'$schema#ObjectSchema']", path);
                return false;
            }
        }
        if (json.objectHasProp(val, "allOf"))
        {
            pval = json.objectValue(val, "allOf");
            // .'$schema#ObjectSchema'.allOf
            res = json_model_15(pval, path, rep);
            if (! res)
            {
                if (rep != null) rep.addEntry("unexpected $schemaArray [.'$schema#ObjectSchema'.allOf]", path);
                if (rep != null) rep.addEntry("unexpected value for optional prop <allOf> [.'$schema#ObjectSchema']", path);
                return false;
            }
        }
        if (json.objectHasProp(val, "anyOf"))
        {
            pval = json.objectValue(val, "anyOf");
            // .'$schema#ObjectSchema'.anyOf
            res = json_model_15(pval, path, rep);
            if (! res)
            {
                if (rep != null) rep.addEntry("unexpected $schemaArray [.'$schema#ObjectSchema'.anyOf]", path);
                if (rep != null) rep.addEntry("unexpected value for optional prop <anyOf> [.'$schema#ObjectSchema']", path);
                return false;
            }
        }
        if (json.objectHasProp(val, "oneOf"))
        {
            pval = json.objectValue(val, "oneOf");
            // .'$schema#ObjectSchema'.oneOf
            res = json_model_15(pval, path, rep);
            if (! res)
            {
                if (rep != null) rep.addEntry("unexpected $schemaArray [.'$schema#ObjectSchema'.oneOf]", path);
                if (rep != null) rep.addEntry("unexpected value for optional prop <oneOf> [.'$schema#ObjectSchema']", path);
                return false;
            }
        }
        if (json.objectHasProp(val, "unevaluatedItems"))
        {
            pval = json.objectValue(val, "unevaluatedItems");
            // .'$schema#ObjectSchema'.unevaluatedItems
            res = json_model_18(pval, path, rep);
            if (! res)
            {
                if (rep != null) rep.addEntry("unexpected $Schema [.'$schema#ObjectSchema'.unevaluatedItems]", path);
                if (rep != null) rep.addEntry("unexpected value for optional prop <unevaluatedItems> [.'$schema#ObjectSchema']", path);
                return false;
            }
        }
        if (json.objectHasProp(val, "unevaluatedProperties"))
        {
            pval = json.objectValue(val, "unevaluatedProperties");
            // .'$schema#ObjectSchema'.unevaluatedProperties
            res = json_model_18(pval, path, rep);
            if (! res)
            {
                if (rep != null) rep.addEntry("unexpected $Schema [.'$schema#ObjectSchema'.unevaluatedProperties]", path);
                if (rep != null) rep.addEntry("unexpected value for optional prop <unevaluatedProperties> [.'$schema#ObjectSchema']", path);
                return false;
            }
        }
        if (json.objectHasProp(val, "type"))
        {
            pval = json.objectValue(val, "type");
            // .'$schema#ObjectSchema'.type
            // .'$schema#ObjectSchema'.type.'|'.0
            res = json_model_10(pval, path, rep);
            if (! res)
            {
                if (rep != null) rep.addEntry("unexpected $simpleTypes [.'$schema#ObjectSchema'.type.'|'.0]", path);
            }
            if (! res)
            {
                // .'$schema#ObjectSchema'.type.'|'.1
                res = json_model_11(pval, path, rep);
                if (! res)
                {
                    if (rep != null) rep.addEntry("unexpected $simpleTypesArray [.'$schema#ObjectSchema'.type.'|'.1]", path);
                }
            }
            if (res)
            {
                if (rep != null) rep.clearEntries();
            }
            else
            {
                if (rep != null) rep.addEntry("no model matched [.'$schema#ObjectSchema'.type.'|']", path);
                if (rep != null) rep.addEntry("unexpected value for optional prop <type> [.'$schema#ObjectSchema']", path);
                return false;
            }
        }
        if (json.objectHasProp(val, "enum"))
        {
            pval = json.objectValue(val, "enum");
            // .'$schema#ObjectSchema'.enum
            res = json.isArray(pval);
            if (! res)
            {
                if (rep != null) rep.addEntry("not array or unexpected array [.'$schema#ObjectSchema'.enum]", path);
                if (rep != null) rep.addEntry("unexpected value for optional prop <enum> [.'$schema#ObjectSchema']", path);
                return false;
            }
        }
        if (json.objectHasProp(val, "multipleOf"))
        {
            pval = json.objectValue(val, "multipleOf");
            // .'$schema#ObjectSchema'.multipleOf
            res = json.isNumber(pval) && json.asNumber(pval) > 0.0;
            if (! res)
            {
                if (rep != null) rep.addEntry("not a 1.0 loose float [.'$schema#ObjectSchema'.multipleOf]", path);
                if (rep != null) rep.addEntry("unexpected value for optional prop <multipleOf> [.'$schema#ObjectSchema']", path);
                return false;
            }
        }
        if (json.objectHasProp(val, "maximum"))
        {
            pval = json.objectValue(val, "maximum");
            // .'$schema#ObjectSchema'.maximum
            res = json.isNumber(pval);
            if (! res)
            {
                if (rep != null) rep.addEntry("not a -1.0 loose float [.'$schema#ObjectSchema'.maximum]", path);
                if (rep != null) rep.addEntry("unexpected value for optional prop <maximum> [.'$schema#ObjectSchema']", path);
                return false;
            }
        }
        if (json.objectHasProp(val, "exclusiveMaximum"))
        {
            pval = json.objectValue(val, "exclusiveMaximum");
            // .'$schema#ObjectSchema'.exclusiveMaximum
            res = json.isNumber(pval);
            if (! res)
            {
                if (rep != null) rep.addEntry("not a -1.0 loose float [.'$schema#ObjectSchema'.exclusiveMaximum]", path);
                if (rep != null) rep.addEntry("unexpected value for optional prop <exclusiveMaximum> [.'$schema#ObjectSchema']", path);
                return false;
            }
        }
        if (json.objectHasProp(val, "minimum"))
        {
            pval = json.objectValue(val, "minimum");
            // .'$schema#ObjectSchema'.minimum
            res = json.isNumber(pval);
            if (! res)
            {
                if (rep != null) rep.addEntry("not a -1.0 loose float [.'$schema#ObjectSchema'.minimum]", path);
                if (rep != null) rep.addEntry("unexpected value for optional prop <minimum> [.'$schema#ObjectSchema']", path);
                return false;
            }
        }
        if (json.objectHasProp(val, "exclusiveMinimum"))
        {
            pval = json.objectValue(val, "exclusiveMinimum");
            // .'$schema#ObjectSchema'.exclusiveMinimum
            res = json.isNumber(pval);
            if (! res)
            {
                if (rep != null) rep.addEntry("not a -1.0 loose float [.'$schema#ObjectSchema'.exclusiveMinimum]", path);
                if (rep != null) rep.addEntry("unexpected value for optional prop <exclusiveMinimum> [.'$schema#ObjectSchema']", path);
                return false;
            }
        }
        if (json.objectHasProp(val, "maxLength"))
        {
            pval = json.objectValue(val, "maxLength");
            // .'$schema#ObjectSchema'.maxLength
            res = json_model_13(pval, path, rep);
            if (! res)
            {
                if (rep != null) rep.addEntry("unexpected $nonNegativeInteger [.'$schema#ObjectSchema'.maxLength]", path);
                if (rep != null) rep.addEntry("unexpected value for optional prop <maxLength> [.'$schema#ObjectSchema']", path);
                return false;
            }
        }
        if (json.objectHasProp(val, "minLength"))
        {
            pval = json.objectValue(val, "minLength");
            // .'$schema#ObjectSchema'.minLength
            res = json_model_13(pval, path, rep);
            if (! res)
            {
                if (rep != null) rep.addEntry("unexpected $nonNegativeInteger [.'$schema#ObjectSchema'.minLength]", path);
                if (rep != null) rep.addEntry("unexpected value for optional prop <minLength> [.'$schema#ObjectSchema']", path);
                return false;
            }
        }
        if (json.objectHasProp(val, "pattern"))
        {
            pval = json.objectValue(val, "pattern");
            // .'$schema#ObjectSchema'.pattern
            res = json.isString(pval);
            if (! res)
            {
                if (rep != null) rep.addEntry("unexpected string [.'$schema#ObjectSchema'.pattern]", path);
                if (rep != null) rep.addEntry("unexpected value for optional prop <pattern> [.'$schema#ObjectSchema']", path);
                return false;
            }
        }
        if (json.objectHasProp(val, "maxItems"))
        {
            pval = json.objectValue(val, "maxItems");
            // .'$schema#ObjectSchema'.maxItems
            res = json_model_13(pval, path, rep);
            if (! res)
            {
                if (rep != null) rep.addEntry("unexpected $nonNegativeInteger [.'$schema#ObjectSchema'.maxItems]", path);
                if (rep != null) rep.addEntry("unexpected value for optional prop <maxItems> [.'$schema#ObjectSchema']", path);
                return false;
            }
        }
        if (json.objectHasProp(val, "minItems"))
        {
            pval = json.objectValue(val, "minItems");
            // .'$schema#ObjectSchema'.minItems
            res = json_model_13(pval, path, rep);
            if (! res)
            {
                if (rep != null) rep.addEntry("unexpected $nonNegativeInteger [.'$schema#ObjectSchema'.minItems]", path);
                if (rep != null) rep.addEntry("unexpected value for optional prop <minItems> [.'$schema#ObjectSchema']", path);
                return false;
            }
        }
        if (json.objectHasProp(val, "uniqueItems"))
        {
            pval = json.objectValue(val, "uniqueItems");
            // .'$schema#ObjectSchema'.uniqueItems
            res = json.isBoolean(pval);
            if (! res)
            {
                if (rep != null) rep.addEntry("not a bool [.'$schema#ObjectSchema'.uniqueItems]", path);
                if (rep != null) rep.addEntry("unexpected value for optional prop <uniqueItems> [.'$schema#ObjectSchema']", path);
                return false;
            }
        }
        if (json.objectHasProp(val, "maxContains"))
        {
            pval = json.objectValue(val, "maxContains");
            // .'$schema#ObjectSchema'.maxContains
            res = json_model_13(pval, path, rep);
            if (! res)
            {
                if (rep != null) rep.addEntry("unexpected $nonNegativeInteger [.'$schema#ObjectSchema'.maxContains]", path);
                if (rep != null) rep.addEntry("unexpected value for optional prop <maxContains> [.'$schema#ObjectSchema']", path);
                return false;
            }
        }
        if (json.objectHasProp(val, "minContains"))
        {
            pval = json.objectValue(val, "minContains");
            // .'$schema#ObjectSchema'.minContains
            res = json_model_13(pval, path, rep);
            if (! res)
            {
                if (rep != null) rep.addEntry("unexpected $nonNegativeInteger [.'$schema#ObjectSchema'.minContains]", path);
                if (rep != null) rep.addEntry("unexpected value for optional prop <minContains> [.'$schema#ObjectSchema']", path);
                return false;
            }
        }
        if (json.objectHasProp(val, "maxProperties"))
        {
            pval = json.objectValue(val, "maxProperties");
            // .'$schema#ObjectSchema'.maxProperties
            res = json_model_13(pval, path, rep);
            if (! res)
            {
                if (rep != null) rep.addEntry("unexpected $nonNegativeInteger [.'$schema#ObjectSchema'.maxProperties]", path);
                if (rep != null) rep.addEntry("unexpected value for optional prop <maxProperties> [.'$schema#ObjectSchema']", path);
                return false;
            }
        }
        if (json.objectHasProp(val, "minProperties"))
        {
            pval = json.objectValue(val, "minProperties");
            // .'$schema#ObjectSchema'.minProperties
            res = json_model_13(pval, path, rep);
            if (! res)
            {
                if (rep != null) rep.addEntry("unexpected $nonNegativeInteger [.'$schema#ObjectSchema'.minProperties]", path);
                if (rep != null) rep.addEntry("unexpected value for optional prop <minProperties> [.'$schema#ObjectSchema']", path);
                return false;
            }
        }
        if (json.objectHasProp(val, "required"))
        {
            pval = json.objectValue(val, "required");
            // .'$schema#ObjectSchema'.required
            res = json_model_12(pval, path, rep);
            if (! res)
            {
                if (rep != null) rep.addEntry("unexpected $stringArray [.'$schema#ObjectSchema'.required]", path);
                if (rep != null) rep.addEntry("unexpected value for optional prop <required> [.'$schema#ObjectSchema']", path);
                return false;
            }
        }
        if (json.objectHasProp(val, "dependentRequired"))
        {
            pval = json.objectValue(val, "dependentRequired");
            // .'$schema#ObjectSchema'.dependentRequired
            res = _jm_obj_8(pval, path, rep);
            if (! res)
            {
                if (rep != null) rep.addEntry("unexpected element [.'$schema#ObjectSchema'.dependentRequired]", path);
                if (rep != null) rep.addEntry("unexpected value for optional prop <dependentRequired> [.'$schema#ObjectSchema']", path);
                return false;
            }
        }
        if (json.objectHasProp(val, "title"))
        {
            pval = json.objectValue(val, "title");
            // .'$schema#ObjectSchema'.title
            res = json.isString(pval);
            if (! res)
            {
                if (rep != null) rep.addEntry("unexpected string [.'$schema#ObjectSchema'.title]", path);
                if (rep != null) rep.addEntry("unexpected value for optional prop <title> [.'$schema#ObjectSchema']", path);
                return false;
            }
        }
        if (json.objectHasProp(val, "description"))
        {
            pval = json.objectValue(val, "description");
            // .'$schema#ObjectSchema'.description
            res = json.isString(pval);
            if (! res)
            {
                if (rep != null) rep.addEntry("unexpected string [.'$schema#ObjectSchema'.description]", path);
                if (rep != null) rep.addEntry("unexpected value for optional prop <description> [.'$schema#ObjectSchema']", path);
                return false;
            }
        }
        if (json.objectHasProp(val, "deprecated"))
        {
            pval = json.objectValue(val, "deprecated");
            // .'$schema#ObjectSchema'.deprecated
            res = json.isBoolean(pval);
            if (! res)
            {
                if (rep != null) rep.addEntry("not a bool [.'$schema#ObjectSchema'.deprecated]", path);
                if (rep != null) rep.addEntry("unexpected value for optional prop <deprecated> [.'$schema#ObjectSchema']", path);
                return false;
            }
        }
        if (json.objectHasProp(val, "readOnly"))
        {
            pval = json.objectValue(val, "readOnly");
            // .'$schema#ObjectSchema'.readOnly
            res = json.isBoolean(pval);
            if (! res)
            {
                if (rep != null) rep.addEntry("not a bool [.'$schema#ObjectSchema'.readOnly]", path);
                if (rep != null) rep.addEntry("unexpected value for optional prop <readOnly> [.'$schema#ObjectSchema']", path);
                return false;
            }
        }
        if (json.objectHasProp(val, "writeOnly"))
        {
            pval = json.objectValue(val, "writeOnly");
            // .'$schema#ObjectSchema'.writeOnly
            res = json.isBoolean(pval);
            if (! res)
            {
                if (rep != null) rep.addEntry("not a bool [.'$schema#ObjectSchema'.writeOnly]", path);
                if (rep != null) rep.addEntry("unexpected value for optional prop <writeOnly> [.'$schema#ObjectSchema']", path);
                return false;
            }
        }
        if (json.objectHasProp(val, "examples"))
        {
            pval = json.objectValue(val, "examples");
            // .'$schema#ObjectSchema'.examples
            res = json.isArray(pval);
            if (! res)
            {
                if (rep != null) rep.addEntry("not array or unexpected array [.'$schema#ObjectSchema'.examples]", path);
                if (rep != null) rep.addEntry("unexpected value for optional prop <examples> [.'$schema#ObjectSchema']", path);
                return false;
            }
        }
        if (json.objectHasProp(val, "format"))
        {
            pval = json.objectValue(val, "format");
            // .'$schema#ObjectSchema'.format
            res = json.isString(pval);
            if (! res)
            {
                if (rep != null) rep.addEntry("unexpected string [.'$schema#ObjectSchema'.format]", path);
                if (rep != null) rep.addEntry("unexpected value for optional prop <format> [.'$schema#ObjectSchema']", path);
                return false;
            }
        }
        if (json.objectHasProp(val, "contentEncoding"))
        {
            pval = json.objectValue(val, "contentEncoding");
            // .'$schema#ObjectSchema'.contentEncoding
            res = json.isString(pval);
            if (! res)
            {
                if (rep != null) rep.addEntry("unexpected string [.'$schema#ObjectSchema'.contentEncoding]", path);
                if (rep != null) rep.addEntry("unexpected value for optional prop <contentEncoding> [.'$schema#ObjectSchema']", path);
                return false;
            }
        }
        if (json.objectHasProp(val, "contentMediaType"))
        {
            pval = json.objectValue(val, "contentMediaType");
            // .'$schema#ObjectSchema'.contentMediaType
            res = json.isString(pval);
            if (! res)
            {
                if (rep != null) rep.addEntry("unexpected string [.'$schema#ObjectSchema'.contentMediaType]", path);
                if (rep != null) rep.addEntry("unexpected value for optional prop <contentMediaType> [.'$schema#ObjectSchema']", path);
                return false;
            }
        }
        if (json.objectHasProp(val, "contentSchema"))
        {
            pval = json.objectValue(val, "contentSchema");
            // .'$schema#ObjectSchema'.contentSchema
            res = json_model_18(pval, path, rep);
            if (! res)
            {
                if (rep != null) rep.addEntry("unexpected $Schema [.'$schema#ObjectSchema'.contentSchema]", path);
                if (rep != null) rep.addEntry("unexpected value for optional prop <contentSchema> [.'$schema#ObjectSchema']", path);
                return false;
            }
        }
        if (json.objectHasProp(val, "definitions"))
        {
            pval = json.objectValue(val, "definitions");
            // .'$schema#ObjectSchema'.definitions
            res = _jm_obj_9(pval, path, rep);
            if (! res)
            {
                if (rep != null) rep.addEntry("unexpected element [.'$schema#ObjectSchema'.definitions]", path);
                if (rep != null) rep.addEntry("unexpected value for optional prop <definitions> [.'$schema#ObjectSchema']", path);
                return false;
            }
        }
        if (json.objectHasProp(val, "dependencies"))
        {
            pval = json.objectValue(val, "dependencies");
            // .'$schema#ObjectSchema'.dependencies
            res = _jm_obj_10(pval, path, rep);
            if (! res)
            {
                if (rep != null) rep.addEntry("unexpected element [.'$schema#ObjectSchema'.dependencies]", path);
                if (rep != null) rep.addEntry("unexpected value for optional prop <dependencies> [.'$schema#ObjectSchema']", path);
                return false;
            }
        }
        return true;
    }

    // check $schema#ObjectSchema (.'$schema#ObjectSchema')
    public boolean json_model_17(Object val, Path path, Report rep)
    {
        boolean res;
        // .'$schema#ObjectSchema'
        res = _jm_obj_0(val, path, rep);
        if (! res)
        {
            if (rep != null) rep.addEntry("unexpected element [.'$schema#ObjectSchema']", path);
        }
        return res;
    }

    // check $schema#URI-REFERENCE (.'$schema#URI-REFERENCE')
    public boolean json_model_4(Object val, Path path, Report rep)
    {
        boolean res;
        // .'$schema#URI-REFERENCE'
        res = json.isString(val);
        if (! res)
        {
            if (rep != null) rep.addEntry("unexpected string [.'$schema#URI-REFERENCE']", path);
        }
        return res;
    }


    // check $schema#simpleTypes (.'$schema#simpleTypes')
    public boolean json_model_10(Object val, Path path, Report rep)
    {
        boolean res;
        // .'$schema#simpleTypes'
        res = json.isScalar(val) && _jm_cst_0_set.contains(val);
        if (! res)
        {
            if (rep != null) rep.addEntry("value not in enum [.'$schema#simpleTypes'.'|']", path);
        }
        return res;
    }

    // check $schema#simpleTypesArray (.'$schema#simpleTypesArray')
    public boolean json_model_11(Object val, Path path, Report rep)
    {
        boolean res;
        // .'$schema#simpleTypesArray'
        // .'$schema#simpleTypesArray'.'@'
        res = json.isArray(val);
        if (res)
        {
            int arr_0_idx = -1;
            Iterator<Object> arr_0_item_loop = json.arrayIterator(val);
            while (arr_0_item_loop.hasNext())
            {
                arr_0_idx++;
                Object arr_0_item = arr_0_item_loop.next();
                Path arr_0_lpath = new Path(arr_0_idx, path);
                // .'$schema#simpleTypesArray'.'@'.0
                res = json_model_10(arr_0_item, (path != null ? arr_0_lpath : null), rep);
                if (! res)
                {
                    if (rep != null) rep.addEntry("unexpected $simpleTypes [.'$schema#simpleTypesArray'.'@'.0]", (path != null ? arr_0_lpath : null));
                    break;
                }
            }
        }
        if (! res)
        {
            if (rep != null) rep.addEntry("not array or unexpected array [.'$schema#simpleTypesArray'.'@']", path);
        }
        if (res)
        {
            long ival_0 = json.arrayLength(val);
            res = rt.array_is_unique(val, path, rep) && ival_0 >= 1;
            if (! res)
            {
                if (rep != null) rep.addEntry("constraints failed [.'$schema#simpleTypesArray']", path);
            }
        }
        return res;
    }

    // check $schema#stringArray (.'$schema#stringArray')
    public boolean json_model_12(Object val, Path path, Report rep)
    {
        boolean res;
        // .'$schema#stringArray'
        // .'$schema#stringArray'.'@'
        res = json.isArray(val);
        if (res)
        {
            int arr_1_idx = -1;
            Iterator<Object> arr_1_item_loop = json.arrayIterator(val);
            while (arr_1_item_loop.hasNext())
            {
                arr_1_idx++;
                Object arr_1_item = arr_1_item_loop.next();
                Path arr_1_lpath = new Path(arr_1_idx, path);
                // .'$schema#stringArray'.'@'.0
                res = json.isString(arr_1_item);
                if (! res)
                {
                    if (rep != null) rep.addEntry("unexpected string [.'$schema#stringArray'.'@'.0]", (path != null ? arr_1_lpath : null));
                    break;
                }
            }
        }
        if (! res)
        {
            if (rep != null) rep.addEntry("not array or unexpected array [.'$schema#stringArray'.'@']", path);
        }
        if (res)
        {
            res = rt.array_is_unique(val, path, rep);
            if (! res)
            {
                if (rep != null) rep.addEntry("constraints failed [.'$schema#stringArray']", path);
            }
        }
        return res;
    }

    // check $schema#nonNegativeInteger (.'$schema#nonNegativeInteger')
    public boolean json_model_13(Object val, Path path, Report rep)
    {
        boolean res;
        // .'$schema#nonNegativeInteger'
        res = ((json.isInteger(val) || (json.isDouble(val) && json.asDouble(val) == ((long) json.asDouble(val))))) && json.asNumber(val) >= 0;
        if (! res)
        {
            if (rep != null) rep.addEntry("not a 0 loose int [.'$schema#nonNegativeInteger']", path);
        }
        return res;
    }

    // check $schema#schemaArray (.'$schema#schemaArray')
    public boolean json_model_15(Object val, Path path, Report rep)
    {
        boolean res;
        // .'$schema#schemaArray'
        // .'$schema#schemaArray'.'@'
        res = json.isArray(val);
        if (res)
        {
            int arr_2_idx = -1;
            Iterator<Object> arr_2_item_loop = json.arrayIterator(val);
            while (arr_2_item_loop.hasNext())
            {
                arr_2_idx++;
                Object arr_2_item = arr_2_item_loop.next();
                Path arr_2_lpath = new Path(arr_2_idx, path);
                // .'$schema#schemaArray'.'@'.0
                res = json_model_18(arr_2_item, (path != null ? arr_2_lpath : null), rep);
                if (! res)
                {
                    if (rep != null) rep.addEntry("unexpected $Schema [.'$schema#schemaArray'.'@'.0]", (path != null ? arr_2_lpath : null));
                    break;
                }
            }
        }
        if (! res)
        {
            if (rep != null) rep.addEntry("not array or unexpected array [.'$schema#schemaArray'.'@']", path);
        }
        if (res)
        {
            long ival_1 = json.arrayLength(val);
            res = ival_1 >= 1;
            if (! res)
            {
                if (rep != null) rep.addEntry("constraints failed [.'$schema#schemaArray']", path);
            }
        }
        return res;
    }


    public void init(JSON json)
    {
        if (!initialized)
        {
            try {
            _jm_cst_0_set = new HashSet<Object>();
            _jm_cst_0_set.add(json.safeJSON("\"array\""));
            _jm_cst_0_set.add(json.safeJSON("\"boolean\""));
            _jm_cst_0_set.add(json.safeJSON("\"integer\""));
            _jm_cst_0_set.add(json.safeJSON("\"null\""));
            _jm_cst_0_set.add(json.safeJSON("\"number\""));
            _jm_cst_0_set.add(json.safeJSON("\"object\""));
            _jm_cst_0_set.add(json.safeJSON("\"string\""));
            json_schema_draft_next_fuzzy_map_pmap = new HashMap<String, Checker>();
            json_schema_draft_next_fuzzy_map_pmap.put("", new Checker() { public boolean call(Object o, Path p, Report r) { return json_model_3(o, p, r);} });
            json_schema_draft_next_fuzzy_map_pmap.put("schema", new Checker() { public boolean call(Object o, Path p, Report r) { return json_model_3(o, p, r);} });
                super.init(json);
            }
            catch (Exception e) {
                throw new Error("cannot initialized model checker: " + e);
            }
        }
    }

    public void free()
    {
        if (initialized)
        {
            super.free();
            _jm_cst_0_set = null;
            json_schema_draft_next_fuzzy_map_pmap = null;
        }
    }

    public Checker get(String name)
    {
        return json_schema_draft_next_fuzzy_map_pmap.get(name);
    }

    public Set<String> models()
    {
        return json_schema_draft_next_fuzzy_map_pmap.keySet();
    }

    static public void main(String[] args) throws Exception
    {
        ModelChecker checker = new json_schema_draft_next_fuzzy();
        Main.main("json_schema_draft_next_fuzzy", checker, VERSION, args);
    }
}
