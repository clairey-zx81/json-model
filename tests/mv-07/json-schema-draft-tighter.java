//
// Generated by JSON Model Compiler version 2
// see https://github.com/clairey-zx81/json-model
//

import json_model.*;
import java.util.Map;
import java.util.Set;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Iterator;
import java.util.regex.Pattern;
import java.util.regex.Matcher;

@SuppressWarnings("unchecked")
public class json_schema_draft_tighter extends ModelChecker
{
    static public final String VERSION = "2";

    Set<Object> _jm_cst_0_set;
    Set<Object> _jm_cst_1_set;
    Map<String, Checker> json_model_10_map_pmap;
    Map<String, Checker> json_model_11_map_pmap;
    Map<String, Checker> json_model_12_map_pmap;
    Map<Object, Checker> _jm_map_0_cmap;
    public Map<String, Checker> json_schema_draft_tighter_map_pmap;

    // check $const (.'$const')
    public boolean json_model_2(Object val, Path path, Report rep)
    {
        // .'$const'
        // .'$const'.'|'.0
        boolean res = json.isNull(val);
        if (! res)
        {
            if (rep != null) rep.addEntry("not null [.'$const'.'|'.0]", path);
        }
        if (! res)
        {
            // .'$const'.'|'.1
            res = json.isBoolean(val);
            if (! res)
            {
                if (rep != null) rep.addEntry("not a bool [.'$const'.'|'.1]", path);
            }
            if (! res)
            {
                // .'$const'.'|'.2
                res = json.isInteger(val);
                if (! res)
                {
                    if (rep != null) rep.addEntry("not a -1 strict int [.'$const'.'|'.2]", path);
                }
                if (! res)
                {
                    // .'$const'.'|'.3
                    res = json.isDouble(val);
                    if (! res)
                    {
                        if (rep != null) rep.addEntry("not a -1.0 strict float [.'$const'.'|'.3]", path);
                    }
                    if (! res)
                    {
                        // .'$const'.'|'.4
                        res = json.isString(val);
                        if (! res)
                        {
                            if (rep != null) rep.addEntry("unexpected string [.'$const'.'|'.4]", path);
                        }
                    }
                }
            }
        }
        if (res)
        {
            if (rep != null) rep.clearEntries();
        }
        else
        {
            if (rep != null) rep.addEntry("no model matched [.'$const'.'|']", path);
        }
        return res;
    }

    // check $enum (.'$enum')
    public boolean json_model_3(Object val, Path path, Report rep)
    {
        // .'$enum'
        boolean res = json.isArray(val);
        if (! res)
        {
            if (rep != null) rep.addEntry("unexpected type [.'$enum'.'|']", path);
        }
        if (res)
        {
            // .'$enum'.'|'.0
            int arr_2_idx = -1;
            Iterator<Object> arr_2_item_loop = json.arrayIterator(val);
            while (arr_2_item_loop.hasNext())
            {
                arr_2_idx++;
                Object arr_2_item = arr_2_item_loop.next();
                Path arr_2_lpath = new Path(arr_2_idx, path);
                // .'$enum'.'|'.0.0
                res = json.isString(arr_2_item);
                if (! res)
                {
                    if (rep != null) rep.addEntry("unexpected string [.'$enum'.'|'.0.0]", (path != null ? arr_2_lpath : null));
                    break;
                }
            }
            if (! res)
            {
                if (rep != null) rep.addEntry("not array or unexpected array [.'$enum'.'|'.0]", path);
            }
            if (! res)
            {
                // .'$enum'.'|'.1
                int arr_1_idx = -1;
                Iterator<Object> arr_1_item_loop = json.arrayIterator(val);
                while (arr_1_item_loop.hasNext())
                {
                    arr_1_idx++;
                    Object arr_1_item = arr_1_item_loop.next();
                    Path arr_1_lpath = new Path(arr_1_idx, path);
                    // .'$enum'.'|'.1.0
                    res = json.isInteger(arr_1_item);
                    if (! res)
                    {
                        if (rep != null) rep.addEntry("not a -1 strict int [.'$enum'.'|'.1.0]", (path != null ? arr_1_lpath : null));
                        break;
                    }
                }
                if (! res)
                {
                    if (rep != null) rep.addEntry("not array or unexpected array [.'$enum'.'|'.1]", path);
                }
                if (! res)
                {
                    // .'$enum'.'|'.2
                    int arr_0_idx = -1;
                    Iterator<Object> arr_0_item_loop = json.arrayIterator(val);
                    while (arr_0_item_loop.hasNext())
                    {
                        arr_0_idx++;
                        Object arr_0_item = arr_0_item_loop.next();
                        Path arr_0_lpath = new Path(arr_0_idx, path);
                        // .'$enum'.'|'.2.0
                        res = json.isBoolean(arr_0_item);
                        if (! res)
                        {
                            if (rep != null) rep.addEntry("not a bool [.'$enum'.'|'.2.0]", (path != null ? arr_0_lpath : null));
                            break;
                        }
                    }
                    if (! res)
                    {
                        if (rep != null) rep.addEntry("not array or unexpected array [.'$enum'.'|'.2]", path);
                    }
                }
            }
            if (res)
            {
                if (rep != null) rep.clearEntries();
            }
            else
            {
                if (rep != null) rep.addEntry("no model matched [.'$enum'.'|']", path);
            }
        }
        return res;
    }

    // check $schemaArray (.'$schemaArray')
    public boolean json_model_4(Object val, Path path, Report rep)
    {
        // .'$schemaArray'
        boolean res = json.isArray(val);
        if (res)
        {
            int arr_3_idx = -1;
            Iterator<Object> arr_3_item_loop = json.arrayIterator(val);
            while (arr_3_item_loop.hasNext())
            {
                arr_3_idx++;
                Object arr_3_item = arr_3_item_loop.next();
                Path arr_3_lpath = new Path(arr_3_idx, path);
                // .'$schemaArray'.0
                res = json_model_24(arr_3_item, (path != null ? arr_3_lpath : null), rep);
                if (! res)
                {
                    if (rep != null) rep.addEntry("unexpected $Schema [.'$schemaArray'.0]", (path != null ? arr_3_lpath : null));
                    break;
                }
            }
        }
        if (! res)
        {
            if (rep != null) rep.addEntry("not array or unexpected array [.'$schemaArray']", path);
        }
        return res;
    }


    // check $stringKeywords (.'$stringKeywords')
    public boolean json_model_5(Object val, Path path, Report rep)
    {
        // .'$stringKeywords'
        if (! json.isObject(val))
        {
            if (rep != null) rep.addEntry("not an object [.'$stringKeywords']", path);
            return false;
        }
        boolean res;
        Iterator<String> prop_loop = json.objectIterator(val);
        while (prop_loop.hasNext())
        {
            String prop = prop_loop.next();
            Object pval = json.objectValue(val, prop);
            Path lpath_0 = new Path(prop, path);
            if (prop.compareTo("pattern") == 0)
            {
                // handle may pattern property
                // .'$stringKeywords'.pattern
                res = json.isString(pval) && rt.is_valid_regex(json.asString(pval));
                if (! res)
                {
                    if (rep != null) rep.addEntry("unexpected $REGEX [.'$stringKeywords'.pattern]", (path != null ? lpath_0 : null));
                    if (rep != null) rep.addEntry("invalid optional prop value [.'$stringKeywords'.pattern]", (path != null ? lpath_0 : null));
                    return false;
                }
            }
            else if (prop.compareTo("minLength") == 0)
            {
                // handle may minLength property
                // .'$stringKeywords'.minLength
                res = json.isInteger(pval) && json.asLong(pval) >= 0;
                if (! res)
                {
                    if (rep != null) rep.addEntry("not a 0 strict int [.'$stringKeywords'.minLength]", (path != null ? lpath_0 : null));
                    if (rep != null) rep.addEntry("invalid optional prop value [.'$stringKeywords'.minLength]", (path != null ? lpath_0 : null));
                    return false;
                }
            }
            else if (prop.compareTo("maxLength") == 0)
            {
                // handle may maxLength property
                // .'$stringKeywords'.maxLength
                res = json.isInteger(pval) && json.asLong(pval) >= 0;
                if (! res)
                {
                    if (rep != null) rep.addEntry("not a 0 strict int [.'$stringKeywords'.maxLength]", (path != null ? lpath_0 : null));
                    if (rep != null) rep.addEntry("invalid optional prop value [.'$stringKeywords'.maxLength]", (path != null ? lpath_0 : null));
                    return false;
                }
            }
            else if (prop.compareTo("format") == 0)
            {
                // handle may format property
                // .'$stringKeywords'.format
                res = json.isScalar(pval) && _jm_cst_0_set.contains(pval);
                if (! res)
                {
                    if (rep != null) rep.addEntry("value not in enum [.'$stringKeywords'.format.'|']", (path != null ? lpath_0 : null));
                    if (rep != null) rep.addEntry("invalid optional prop value [.'$stringKeywords'.format]", (path != null ? lpath_0 : null));
                    return false;
                }
            }
            else
            {
                if (rep != null) rep.addEntry("unexpected prop [.'$stringKeywords']", (path != null ? lpath_0 : null));
                return false;
            }
        }
        return true;
    }

    // check $arrayKeywords (.'$arrayKeywords')
    public boolean json_model_6(Object val, Path path, Report rep)
    {
        // not included: contains…
        // .'$arrayKeywords'
        if (! json.isObject(val))
        {
            if (rep != null) rep.addEntry("not an object [.'$arrayKeywords']", path);
            return false;
        }
        boolean res;
        Iterator<String> prop_loop = json.objectIterator(val);
        while (prop_loop.hasNext())
        {
            String prop = prop_loop.next();
            Object pval = json.objectValue(val, prop);
            Path lpath_1 = new Path(prop, path);
            if (prop.compareTo("prefixItems") == 0)
            {
                // handle may prefixItems property
                // .'$arrayKeywords'.prefixItems
                res = json_model_4(pval, (path != null ? lpath_1 : null), rep);
                if (! res)
                {
                    if (rep != null) rep.addEntry("unexpected $schemaArray [.'$arrayKeywords'.prefixItems]", (path != null ? lpath_1 : null));
                    if (rep != null) rep.addEntry("invalid optional prop value [.'$arrayKeywords'.prefixItems]", (path != null ? lpath_1 : null));
                    return false;
                }
            }
            else if (prop.compareTo("items") == 0)
            {
                // handle may items property
                // .'$arrayKeywords'.items
                // .'$arrayKeywords'.items.'|'.0
                res = json_model_24(pval, (path != null ? lpath_1 : null), rep);
                if (! res)
                {
                    if (rep != null) rep.addEntry("unexpected $Schema [.'$arrayKeywords'.items.'|'.0]", (path != null ? lpath_1 : null));
                }
                if (! res)
                {
                    // .'$arrayKeywords'.items.'|'.1
                    res = json_model_4(pval, (path != null ? lpath_1 : null), rep);
                    if (! res)
                    {
                        if (rep != null) rep.addEntry("unexpected $schemaArray [.'$arrayKeywords'.items.'|'.1]", (path != null ? lpath_1 : null));
                    }
                }
                if (res)
                {
                    if (rep != null) rep.clearEntries();
                }
                else
                {
                    if (rep != null) rep.addEntry("no model matched [.'$arrayKeywords'.items.'|']", (path != null ? lpath_1 : null));
                    if (rep != null) rep.addEntry("invalid optional prop value [.'$arrayKeywords'.items]", (path != null ? lpath_1 : null));
                    return false;
                }
            }
            else if (prop.compareTo("additionalItems") == 0)
            {
                // handle may additionalItems property
                // .'$arrayKeywords'.additionalItems
                res = json_model_24(pval, (path != null ? lpath_1 : null), rep);
                if (! res)
                {
                    if (rep != null) rep.addEntry("unexpected $Schema [.'$arrayKeywords'.additionalItems]", (path != null ? lpath_1 : null));
                    if (rep != null) rep.addEntry("invalid optional prop value [.'$arrayKeywords'.additionalItems]", (path != null ? lpath_1 : null));
                    return false;
                }
            }
            else if (prop.compareTo("minItems") == 0)
            {
                // handle may minItems property
                // .'$arrayKeywords'.minItems
                res = json.isInteger(pval) && json.asLong(pval) >= 0;
                if (! res)
                {
                    if (rep != null) rep.addEntry("not a 0 strict int [.'$arrayKeywords'.minItems]", (path != null ? lpath_1 : null));
                    if (rep != null) rep.addEntry("invalid optional prop value [.'$arrayKeywords'.minItems]", (path != null ? lpath_1 : null));
                    return false;
                }
            }
            else if (prop.compareTo("maxItems") == 0)
            {
                // handle may maxItems property
                // .'$arrayKeywords'.maxItems
                res = json.isInteger(pval) && json.asLong(pval) >= 0;
                if (! res)
                {
                    if (rep != null) rep.addEntry("not a 0 strict int [.'$arrayKeywords'.maxItems]", (path != null ? lpath_1 : null));
                    if (rep != null) rep.addEntry("invalid optional prop value [.'$arrayKeywords'.maxItems]", (path != null ? lpath_1 : null));
                    return false;
                }
            }
            else if (prop.compareTo("uniqueItems") == 0)
            {
                // handle may uniqueItems property
                // .'$arrayKeywords'.uniqueItems
                res = json.isBoolean(pval);
                if (! res)
                {
                    if (rep != null) rep.addEntry("not a bool [.'$arrayKeywords'.uniqueItems]", (path != null ? lpath_1 : null));
                    if (rep != null) rep.addEntry("invalid optional prop value [.'$arrayKeywords'.uniqueItems]", (path != null ? lpath_1 : null));
                    return false;
                }
            }
            else
            {
                if (rep != null) rep.addEntry("unexpected prop [.'$arrayKeywords']", (path != null ? lpath_1 : null));
                return false;
            }
        }
        return true;
    }

    // object .'$objectKeywords'.properties
    public boolean _jm_obj_0(Object val, Path path, Report rep)
    {
        if (! json.isObject(val))
        {
            if (rep != null) rep.addEntry("not an object [.'$objectKeywords'.properties]", path);
            return false;
        }
        boolean res;
        Iterator<String> prop_loop = json.objectIterator(val);
        while (prop_loop.hasNext())
        {
            String prop = prop_loop.next();
            Object pval = json.objectValue(val, prop);
            Path lpath_3 = new Path(prop, path);
            // handle other props
            // .'$objectKeywords'.properties.''
            res = json_model_24(pval, (path != null ? lpath_3 : null), rep);
            if (! res)
            {
                if (rep != null) rep.addEntry("unexpected $Schema [.'$objectKeywords'.properties.'']", (path != null ? lpath_3 : null));
                return false;
            }
        }
        return true;
    }

    // object .'$objectKeywords'.patternProperties
    public boolean _jm_obj_1(Object val, Path path, Report rep)
    {
        if (! json.isObject(val))
        {
            if (rep != null) rep.addEntry("not an object [.'$objectKeywords'.patternProperties]", path);
            return false;
        }
        boolean res;
        Iterator<String> prop_loop = json.objectIterator(val);
        while (prop_loop.hasNext())
        {
            String prop = prop_loop.next();
            Object pval = json.objectValue(val, prop);
            Path lpath_4 = new Path(prop, path);
            if (rt.is_valid_regex(prop))
            {
                // handle 1 key props
                // .'$objectKeywords'.patternProperties.'$REGEX'
                res = json_model_24(pval, (path != null ? lpath_4 : null), rep);
                if (! res)
                {
                    if (rep != null) rep.addEntry("unexpected $Schema [.'$objectKeywords'.patternProperties.'$REGEX']", (path != null ? lpath_4 : null));
                    return false;
                }
            }
            else
            {
                if (rep != null) rep.addEntry("unexpected prop [.'$objectKeywords'.patternProperties]", (path != null ? lpath_4 : null));
                return false;
            }
        }
        return true;
    }

    // check $objectKeywords (.'$objectKeywords')
    public boolean json_model_7(Object val, Path path, Report rep)
    {
        // not included: dependentRequired, min/maxProps…
        // .'$objectKeywords'
        if (! json.isObject(val))
        {
            if (rep != null) rep.addEntry("not an object [.'$objectKeywords']", path);
            return false;
        }
        boolean res;
        Iterator<String> prop_loop = json.objectIterator(val);
        while (prop_loop.hasNext())
        {
            String prop = prop_loop.next();
            Object pval = json.objectValue(val, prop);
            Path lpath_2 = new Path(prop, path);
            if (prop.compareTo("properties") == 0)
            {
                // handle may properties property
                // .'$objectKeywords'.properties
                res = _jm_obj_0(pval, (path != null ? lpath_2 : null), rep);
                if (! res)
                {
                    if (rep != null) rep.addEntry("unexpected element [.'$objectKeywords'.properties]", (path != null ? lpath_2 : null));
                    if (rep != null) rep.addEntry("invalid optional prop value [.'$objectKeywords'.properties]", (path != null ? lpath_2 : null));
                    return false;
                }
            }
            else if (prop.compareTo("required") == 0)
            {
                // handle may required property
                // .'$objectKeywords'.required
                res = json.isArray(pval);
                if (res)
                {
                    int arr_4_idx = -1;
                    Iterator<Object> arr_4_item_loop = json.arrayIterator(pval);
                    while (arr_4_item_loop.hasNext())
                    {
                        arr_4_idx++;
                        Object arr_4_item = arr_4_item_loop.next();
                        Path arr_4_lpath = new Path(arr_4_idx, (path != null ? lpath_2 : null));
                        // .'$objectKeywords'.required.0
                        res = json.isString(arr_4_item);
                        if (! res)
                        {
                            if (rep != null) rep.addEntry("unexpected string [.'$objectKeywords'.required.0]", ((path != null ? lpath_2 : null) != null ? arr_4_lpath : null));
                            break;
                        }
                    }
                }
                if (! res)
                {
                    if (rep != null) rep.addEntry("not array or unexpected array [.'$objectKeywords'.required]", (path != null ? lpath_2 : null));
                    if (rep != null) rep.addEntry("invalid optional prop value [.'$objectKeywords'.required]", (path != null ? lpath_2 : null));
                    return false;
                }
            }
            else if (prop.compareTo("additionalProperties") == 0)
            {
                // handle may additionalProperties property
                // .'$objectKeywords'.additionalProperties
                res = json_model_24(pval, (path != null ? lpath_2 : null), rep);
                if (! res)
                {
                    if (rep != null) rep.addEntry("unexpected $Schema [.'$objectKeywords'.additionalProperties]", (path != null ? lpath_2 : null));
                    if (rep != null) rep.addEntry("invalid optional prop value [.'$objectKeywords'.additionalProperties]", (path != null ? lpath_2 : null));
                    return false;
                }
            }
            else if (prop.compareTo("patternProperties") == 0)
            {
                // handle may patternProperties property
                // .'$objectKeywords'.patternProperties
                res = _jm_obj_1(pval, (path != null ? lpath_2 : null), rep);
                if (! res)
                {
                    if (rep != null) rep.addEntry("unexpected element [.'$objectKeywords'.patternProperties]", (path != null ? lpath_2 : null));
                    if (rep != null) rep.addEntry("invalid optional prop value [.'$objectKeywords'.patternProperties]", (path != null ? lpath_2 : null));
                    return false;
                }
            }
            else
            {
                if (rep != null) rep.addEntry("unexpected prop [.'$objectKeywords']", (path != null ? lpath_2 : null));
                return false;
            }
        }
        return true;
    }

    // check $numberKeywords (.'$numberKeywords')
    public boolean json_model_8(Object val, Path path, Report rep)
    {
        // not included: exclusive*, multipleOf…
        // .'$numberKeywords'
        if (! json.isObject(val))
        {
            if (rep != null) rep.addEntry("not an object [.'$numberKeywords']", path);
            return false;
        }
        boolean res;
        Iterator<String> prop_loop = json.objectIterator(val);
        while (prop_loop.hasNext())
        {
            String prop = prop_loop.next();
            Object pval = json.objectValue(val, prop);
            Path lpath_5 = new Path(prop, path);
            if (prop.compareTo("minimum") == 0)
            {
                // handle may minimum property
                // .'$numberKeywords'.minimum
                res = json.isDouble(pval);
                if (! res)
                {
                    if (rep != null) rep.addEntry("not a -1.0 strict float [.'$numberKeywords'.minimum]", (path != null ? lpath_5 : null));
                    if (rep != null) rep.addEntry("invalid optional prop value [.'$numberKeywords'.minimum]", (path != null ? lpath_5 : null));
                    return false;
                }
            }
            else if (prop.compareTo("maximum") == 0)
            {
                // handle may maximum property
                // .'$numberKeywords'.maximum
                res = json.isDouble(pval);
                if (! res)
                {
                    if (rep != null) rep.addEntry("not a -1.0 strict float [.'$numberKeywords'.maximum]", (path != null ? lpath_5 : null));
                    if (rep != null) rep.addEntry("invalid optional prop value [.'$numberKeywords'.maximum]", (path != null ? lpath_5 : null));
                    return false;
                }
            }
            else
            {
                if (rep != null) rep.addEntry("unexpected prop [.'$numberKeywords']", (path != null ? lpath_5 : null));
                return false;
            }
        }
        return true;
    }

    // object .'$metas'.'$defs'
    public boolean _jm_obj_2(Object val, Path path, Report rep)
    {
        if (! json.isObject(val))
        {
            if (rep != null) rep.addEntry("not an object [.'$metas'.'$defs']", path);
            return false;
        }
        boolean res;
        Iterator<String> prop_loop = json.objectIterator(val);
        while (prop_loop.hasNext())
        {
            String prop = prop_loop.next();
            Object pval = json.objectValue(val, prop);
            Path lpath_7 = new Path(prop, path);
            // handle other props
            // .'$metas'.'$defs'.''
            res = json_model_24(pval, (path != null ? lpath_7 : null), rep);
            if (! res)
            {
                if (rep != null) rep.addEntry("unexpected $Schema [.'$metas'.'$defs'.'']", (path != null ? lpath_7 : null));
                return false;
            }
        }
        return true;
    }

    // object .'$metas'.definitions
    public boolean _jm_obj_3(Object val, Path path, Report rep)
    {
        if (! json.isObject(val))
        {
            if (rep != null) rep.addEntry("not an object [.'$metas'.definitions]", path);
            return false;
        }
        boolean res;
        Iterator<String> prop_loop = json.objectIterator(val);
        while (prop_loop.hasNext())
        {
            String prop = prop_loop.next();
            Object pval = json.objectValue(val, prop);
            Path lpath_8 = new Path(prop, path);
            // handle other props
            // .'$metas'.definitions.''
            res = json_model_24(pval, (path != null ? lpath_8 : null), rep);
            if (! res)
            {
                if (rep != null) rep.addEntry("unexpected $Schema [.'$metas'.definitions.'']", (path != null ? lpath_8 : null));
                return false;
            }
        }
        return true;
    }

    // check $metas (.'$metas')
    public boolean json_model_9(Object val, Path path, Report rep)
    {
        // there is a trick with $schema… in RootSchema below
        // .'$metas'
        if (! json.isObject(val))
        {
            if (rep != null) rep.addEntry("not an object [.'$metas']", path);
            return false;
        }
        boolean res;
        Iterator<String> prop_loop = json.objectIterator(val);
        while (prop_loop.hasNext())
        {
            String prop = prop_loop.next();
            Object pval = json.objectValue(val, prop);
            Path lpath_6 = new Path(prop, path);
            if (prop.compareTo("$schema") == 0)
            {
                // handle may $schema property
                // .'$metas'.'$schema'
                res = json.isString(pval);
                if (! res)
                {
                    if (rep != null) rep.addEntry("unexpected string [.'$metas'.'$schema']", (path != null ? lpath_6 : null));
                    if (rep != null) rep.addEntry("invalid optional prop value [.'$metas'.'$schema']", (path != null ? lpath_6 : null));
                    return false;
                }
            }
            else if (prop.compareTo("$id") == 0)
            {
                // handle may $id property
                // .'$metas'.'$id'
                res = json.isString(pval);
                if (! res)
                {
                    if (rep != null) rep.addEntry("unexpected string [.'$metas'.'$id']", (path != null ? lpath_6 : null));
                    if (rep != null) rep.addEntry("invalid optional prop value [.'$metas'.'$id']", (path != null ? lpath_6 : null));
                    return false;
                }
            }
            else if (prop.compareTo("id") == 0)
            {
                // handle may id property
                // .'$metas'.id
                res = json.isString(pval);
                if (! res)
                {
                    if (rep != null) rep.addEntry("unexpected string [.'$metas'.id]", (path != null ? lpath_6 : null));
                    if (rep != null) rep.addEntry("invalid optional prop value [.'$metas'.id]", (path != null ? lpath_6 : null));
                    return false;
                }
            }
            else if (prop.compareTo("$comment") == 0)
            {
                // handle may $comment property
                // .'$metas'.'$comment'
                res = json.isString(pval);
                if (! res)
                {
                    if (rep != null) rep.addEntry("unexpected string [.'$metas'.'$comment']", (path != null ? lpath_6 : null));
                    if (rep != null) rep.addEntry("invalid optional prop value [.'$metas'.'$comment']", (path != null ? lpath_6 : null));
                    return false;
                }
            }
            else if (prop.compareTo("title") == 0)
            {
                // handle may title property
                // .'$metas'.title
                res = json.isString(pval);
                if (! res)
                {
                    if (rep != null) rep.addEntry("unexpected string [.'$metas'.title]", (path != null ? lpath_6 : null));
                    if (rep != null) rep.addEntry("invalid optional prop value [.'$metas'.title]", (path != null ? lpath_6 : null));
                    return false;
                }
            }
            else if (prop.compareTo("default") == 0)
            {
                // handle may default property
                // .'$metas'.default
                res = true;
            }
            else if (prop.compareTo("examples") == 0)
            {
                // handle may examples property
                // .'$metas'.examples
                res = json.isArray(pval);
                if (! res)
                {
                    if (rep != null) rep.addEntry("not array or unexpected array [.'$metas'.examples]", (path != null ? lpath_6 : null));
                    if (rep != null) rep.addEntry("invalid optional prop value [.'$metas'.examples]", (path != null ? lpath_6 : null));
                    return false;
                }
            }
            else if (prop.compareTo("description") == 0)
            {
                // handle may description property
                // .'$metas'.description
                res = json.isString(pval);
                if (! res)
                {
                    if (rep != null) rep.addEntry("unexpected string [.'$metas'.description]", (path != null ? lpath_6 : null));
                    if (rep != null) rep.addEntry("invalid optional prop value [.'$metas'.description]", (path != null ? lpath_6 : null));
                    return false;
                }
            }
            else if (prop.compareTo("$defs") == 0)
            {
                // handle may $defs property
                // .'$metas'.'$defs'
                res = _jm_obj_2(pval, (path != null ? lpath_6 : null), rep);
                if (! res)
                {
                    if (rep != null) rep.addEntry("unexpected element [.'$metas'.'$defs']", (path != null ? lpath_6 : null));
                    if (rep != null) rep.addEntry("invalid optional prop value [.'$metas'.'$defs']", (path != null ? lpath_6 : null));
                    return false;
                }
            }
            else if (prop.compareTo("definitions") == 0)
            {
                // handle may definitions property
                // .'$metas'.definitions
                res = _jm_obj_3(pval, (path != null ? lpath_6 : null), rep);
                if (! res)
                {
                    if (rep != null) rep.addEntry("unexpected element [.'$metas'.definitions]", (path != null ? lpath_6 : null));
                    if (rep != null) rep.addEntry("invalid optional prop value [.'$metas'.definitions]", (path != null ? lpath_6 : null));
                    return false;
                }
            }
            else
            {
                if (rep != null) rep.addEntry("unexpected prop [.'$metas']", (path != null ? lpath_6 : null));
                return false;
            }
        }
        return true;
    }

    // check json_model_10_map_$comment (.'$String'.'$comment')
    public boolean _jm_f_0(Object val, Path path, Report rep)
    {
        // .'$String'.'$comment'
        boolean res = json.isString(val);
        if (! res)
        {
            if (rep != null) rep.addEntry("unexpected string [.'$String'.'$comment']", path);
        }
        return res;
    }

    // check json_model_10_map_$defs (.'$String'.'$defs')
    public boolean _jm_f_1(Object val, Path path, Report rep)
    {
        // .'$String'.'$defs'
        if (! json.isObject(val))
        {
            if (rep != null) rep.addEntry("not an object [.'$String'.'$defs']", path);
            return false;
        }
        boolean res;
        Iterator<String> prop_loop = json.objectIterator(val);
        while (prop_loop.hasNext())
        {
            String prop = prop_loop.next();
            Object pval = json.objectValue(val, prop);
            Path lpath_10 = new Path(prop, path);
            // handle other props
            // .'$String'.'$defs'.''
            res = json_model_24(pval, (path != null ? lpath_10 : null), rep);
            if (! res)
            {
                if (rep != null) rep.addEntry("unexpected $Schema [.'$String'.'$defs'.'']", (path != null ? lpath_10 : null));
                return false;
            }
        }
        return true;
    }

    // check json_model_10_map_$id (.'$String'.'$id')
    public boolean _jm_f_2(Object val, Path path, Report rep)
    {
        // .'$String'.'$id'
        boolean res = json.isString(val);
        if (! res)
        {
            if (rep != null) rep.addEntry("unexpected string [.'$String'.'$id']", path);
        }
        return res;
    }

    // check json_model_10_map_$schema (.'$String'.'$schema')
    public boolean _jm_f_3(Object val, Path path, Report rep)
    {
        // .'$String'.'$schema'
        boolean res = json.isString(val);
        if (! res)
        {
            if (rep != null) rep.addEntry("unexpected string [.'$String'.'$schema']", path);
        }
        return res;
    }

    // check json_model_10_map_default (.'$String'.default)
    public boolean _jm_f_4(Object val, Path path, Report rep)
    {
        // .'$String'.default
        return true;
    }

    // check json_model_10_map_definitions (.'$String'.definitions)
    public boolean _jm_f_5(Object val, Path path, Report rep)
    {
        // .'$String'.definitions
        if (! json.isObject(val))
        {
            if (rep != null) rep.addEntry("not an object [.'$String'.definitions]", path);
            return false;
        }
        boolean res;
        Iterator<String> prop_loop = json.objectIterator(val);
        while (prop_loop.hasNext())
        {
            String prop = prop_loop.next();
            Object pval = json.objectValue(val, prop);
            Path lpath_11 = new Path(prop, path);
            // handle other props
            // .'$String'.definitions.''
            res = json_model_24(pval, (path != null ? lpath_11 : null), rep);
            if (! res)
            {
                if (rep != null) rep.addEntry("unexpected $Schema [.'$String'.definitions.'']", (path != null ? lpath_11 : null));
                return false;
            }
        }
        return true;
    }

    // check json_model_10_map_description (.'$String'.description)
    public boolean _jm_f_6(Object val, Path path, Report rep)
    {
        // .'$String'.description
        boolean res = json.isString(val);
        if (! res)
        {
            if (rep != null) rep.addEntry("unexpected string [.'$String'.description]", path);
        }
        return res;
    }

    // check json_model_10_map_examples (.'$String'.examples)
    public boolean _jm_f_7(Object val, Path path, Report rep)
    {
        // .'$String'.examples
        boolean res = json.isArray(val);
        if (! res)
        {
            if (rep != null) rep.addEntry("not array or unexpected array [.'$String'.examples]", path);
        }
        return res;
    }


    // check json_model_10_map_format (.'$String'.format)
    public boolean _jm_f_8(Object val, Path path, Report rep)
    {
        // .'$String'.format
        boolean res = json.isScalar(val) && _jm_cst_1_set.contains(val);
        if (! res)
        {
            if (rep != null) rep.addEntry("value not in enum [.'$String'.format.'|']", path);
        }
        return res;
    }

    // check json_model_10_map_id (.'$String'.id)
    public boolean _jm_f_9(Object val, Path path, Report rep)
    {
        // .'$String'.id
        boolean res = json.isString(val);
        if (! res)
        {
            if (rep != null) rep.addEntry("unexpected string [.'$String'.id]", path);
        }
        return res;
    }

    // check json_model_10_map_maxLength (.'$String'.maxLength)
    public boolean _jm_f_10(Object val, Path path, Report rep)
    {
        // .'$String'.maxLength
        boolean res = json.isInteger(val) && json.asLong(val) >= 0;
        if (! res)
        {
            if (rep != null) rep.addEntry("not a 0 strict int [.'$String'.maxLength]", path);
        }
        return res;
    }

    // check json_model_10_map_minLength (.'$String'.minLength)
    public boolean _jm_f_11(Object val, Path path, Report rep)
    {
        // .'$String'.minLength
        boolean res = json.isInteger(val) && json.asLong(val) >= 0;
        if (! res)
        {
            if (rep != null) rep.addEntry("not a 0 strict int [.'$String'.minLength]", path);
        }
        return res;
    }

    // check json_model_10_map_pattern (.'$String'.pattern)
    public boolean _jm_f_12(Object val, Path path, Report rep)
    {
        // .'$String'.pattern
        boolean res = json.isString(val) && rt.is_valid_regex(json.asString(val));
        if (! res)
        {
            if (rep != null) rep.addEntry("unexpected $REGEX [.'$String'.pattern]", path);
        }
        return res;
    }

    // check json_model_10_map_title (.'$String'.title)
    public boolean _jm_f_13(Object val, Path path, Report rep)
    {
        // .'$String'.title
        boolean res = json.isString(val);
        if (! res)
        {
            if (rep != null) rep.addEntry("unexpected string [.'$String'.title]", path);
        }
        return res;
    }


    // check $String (.'$String')
    public boolean json_model_10(Object val, Path path, Report rep)
    {
        // .'$String'
        if (! json.isObject(val))
        {
            if (rep != null) rep.addEntry("not an object [.'$String']", path);
            return false;
        }
        boolean res;
        Checker pfun;
        long must_count = 0;
        Iterator<String> prop_loop = json.objectIterator(val);
        while (prop_loop.hasNext())
        {
            String prop = prop_loop.next();
            Object pval = json.objectValue(val, prop);
            Path lpath_9 = new Path(prop, path);
            if (prop.compareTo("type") == 0)
            {
                // handle must type property
                must_count += 1;
                // .'$String'.type
                res = json.isString(pval) && json.asString(pval).compareTo("string") == 0;
                if (! res)
                {
                    if (rep != null) rep.addEntry("unexpected string [.'$String'.type]", (path != null ? lpath_9 : null));
                    if (rep != null) rep.addEntry("invalid mandatory prop value [.'$String'.type]", (path != null ? lpath_9 : null));
                    return false;
                }
            }
            else if ((pfun = json_model_10_map_pmap.get(prop)) != null)
            {
                // handle 14 may props
                if (pfun != null && ! (pfun.call(pval, (path != null ? lpath_9 : null), rep)))
                {
                    if (rep != null) rep.addEntry("invalid optional prop value [.'$String']", (path != null ? lpath_9 : null));
                    return false;
                }
            }
            else
            {
                if (rep != null) rep.addEntry("unexpected prop [.'$String']", (path != null ? lpath_9 : null));
                return false;
            }
        }
        if (must_count != 1)
        {
            if (rep != null)
            {
                if (! json.objectHasProp(val, "type"))
                {
                    if (rep != null) rep.addEntry("missing mandatory prop <type> [.'$String']", path);
                }
            }
            return false;
        }
        return true;
    }

    // check json_model_11_map_$comment (.'$Array'.'$comment')
    public boolean _jm_f_14(Object val, Path path, Report rep)
    {
        // .'$Array'.'$comment'
        boolean res = json.isString(val);
        if (! res)
        {
            if (rep != null) rep.addEntry("unexpected string [.'$Array'.'$comment']", path);
        }
        return res;
    }

    // check json_model_11_map_$defs (.'$Array'.'$defs')
    public boolean _jm_f_15(Object val, Path path, Report rep)
    {
        // .'$Array'.'$defs'
        if (! json.isObject(val))
        {
            if (rep != null) rep.addEntry("not an object [.'$Array'.'$defs']", path);
            return false;
        }
        boolean res;
        Iterator<String> prop_loop = json.objectIterator(val);
        while (prop_loop.hasNext())
        {
            String prop = prop_loop.next();
            Object pval = json.objectValue(val, prop);
            Path lpath_13 = new Path(prop, path);
            // handle other props
            // .'$Array'.'$defs'.''
            res = json_model_24(pval, (path != null ? lpath_13 : null), rep);
            if (! res)
            {
                if (rep != null) rep.addEntry("unexpected $Schema [.'$Array'.'$defs'.'']", (path != null ? lpath_13 : null));
                return false;
            }
        }
        return true;
    }

    // check json_model_11_map_$id (.'$Array'.'$id')
    public boolean _jm_f_16(Object val, Path path, Report rep)
    {
        // .'$Array'.'$id'
        boolean res = json.isString(val);
        if (! res)
        {
            if (rep != null) rep.addEntry("unexpected string [.'$Array'.'$id']", path);
        }
        return res;
    }

    // check json_model_11_map_$schema (.'$Array'.'$schema')
    public boolean _jm_f_17(Object val, Path path, Report rep)
    {
        // .'$Array'.'$schema'
        boolean res = json.isString(val);
        if (! res)
        {
            if (rep != null) rep.addEntry("unexpected string [.'$Array'.'$schema']", path);
        }
        return res;
    }

    // check json_model_11_map_default (.'$Array'.default)
    public boolean _jm_f_18(Object val, Path path, Report rep)
    {
        // .'$Array'.default
        return true;
    }

    // check json_model_11_map_definitions (.'$Array'.definitions)
    public boolean _jm_f_19(Object val, Path path, Report rep)
    {
        // .'$Array'.definitions
        if (! json.isObject(val))
        {
            if (rep != null) rep.addEntry("not an object [.'$Array'.definitions]", path);
            return false;
        }
        boolean res;
        Iterator<String> prop_loop = json.objectIterator(val);
        while (prop_loop.hasNext())
        {
            String prop = prop_loop.next();
            Object pval = json.objectValue(val, prop);
            Path lpath_14 = new Path(prop, path);
            // handle other props
            // .'$Array'.definitions.''
            res = json_model_24(pval, (path != null ? lpath_14 : null), rep);
            if (! res)
            {
                if (rep != null) rep.addEntry("unexpected $Schema [.'$Array'.definitions.'']", (path != null ? lpath_14 : null));
                return false;
            }
        }
        return true;
    }

    // check json_model_11_map_description (.'$Array'.description)
    public boolean _jm_f_20(Object val, Path path, Report rep)
    {
        // .'$Array'.description
        boolean res = json.isString(val);
        if (! res)
        {
            if (rep != null) rep.addEntry("unexpected string [.'$Array'.description]", path);
        }
        return res;
    }

    // check json_model_11_map_examples (.'$Array'.examples)
    public boolean _jm_f_21(Object val, Path path, Report rep)
    {
        // .'$Array'.examples
        boolean res = json.isArray(val);
        if (! res)
        {
            if (rep != null) rep.addEntry("not array or unexpected array [.'$Array'.examples]", path);
        }
        return res;
    }

    // check json_model_11_map_id (.'$Array'.id)
    public boolean _jm_f_22(Object val, Path path, Report rep)
    {
        // .'$Array'.id
        boolean res = json.isString(val);
        if (! res)
        {
            if (rep != null) rep.addEntry("unexpected string [.'$Array'.id]", path);
        }
        return res;
    }

    // check json_model_11_map_items (.'$Array'.items)
    public boolean _jm_f_23(Object val, Path path, Report rep)
    {
        // .'$Array'.items
        // .'$Array'.items.'|'.0
        boolean res = json_model_24(val, path, rep);
        if (! res)
        {
            if (rep != null) rep.addEntry("unexpected $Schema [.'$Array'.items.'|'.0]", path);
        }
        if (! res)
        {
            // .'$Array'.items.'|'.1
            res = json_model_4(val, path, rep);
            if (! res)
            {
                if (rep != null) rep.addEntry("unexpected $schemaArray [.'$Array'.items.'|'.1]", path);
            }
        }
        if (res)
        {
            if (rep != null) rep.clearEntries();
        }
        else
        {
            if (rep != null) rep.addEntry("no model matched [.'$Array'.items.'|']", path);
        }
        return res;
    }

    // check json_model_11_map_maxItems (.'$Array'.maxItems)
    public boolean _jm_f_24(Object val, Path path, Report rep)
    {
        // .'$Array'.maxItems
        boolean res = json.isInteger(val) && json.asLong(val) >= 0;
        if (! res)
        {
            if (rep != null) rep.addEntry("not a 0 strict int [.'$Array'.maxItems]", path);
        }
        return res;
    }

    // check json_model_11_map_minItems (.'$Array'.minItems)
    public boolean _jm_f_25(Object val, Path path, Report rep)
    {
        // .'$Array'.minItems
        boolean res = json.isInteger(val) && json.asLong(val) >= 0;
        if (! res)
        {
            if (rep != null) rep.addEntry("not a 0 strict int [.'$Array'.minItems]", path);
        }
        return res;
    }

    // check json_model_11_map_title (.'$Array'.title)
    public boolean _jm_f_26(Object val, Path path, Report rep)
    {
        // .'$Array'.title
        boolean res = json.isString(val);
        if (! res)
        {
            if (rep != null) rep.addEntry("unexpected string [.'$Array'.title]", path);
        }
        return res;
    }

    // check json_model_11_map_uniqueItems (.'$Array'.uniqueItems)
    public boolean _jm_f_27(Object val, Path path, Report rep)
    {
        // .'$Array'.uniqueItems
        boolean res = json.isBoolean(val);
        if (! res)
        {
            if (rep != null) rep.addEntry("not a bool [.'$Array'.uniqueItems]", path);
        }
        return res;
    }


    // check $Array (.'$Array')
    public boolean json_model_11(Object val, Path path, Report rep)
    {
        // .'$Array'
        if (! json.isObject(val))
        {
            if (rep != null) rep.addEntry("not an object [.'$Array']", path);
            return false;
        }
        boolean res;
        Checker pfun;
        long must_count = 0;
        Iterator<String> prop_loop = json.objectIterator(val);
        while (prop_loop.hasNext())
        {
            String prop = prop_loop.next();
            Object pval = json.objectValue(val, prop);
            Path lpath_12 = new Path(prop, path);
            if (prop.compareTo("type") == 0)
            {
                // handle must type property
                must_count += 1;
                // .'$Array'.type
                res = json.isString(pval) && json.asString(pval).compareTo("array") == 0;
                if (! res)
                {
                    if (rep != null) rep.addEntry("unexpected array [.'$Array'.type]", (path != null ? lpath_12 : null));
                    if (rep != null) rep.addEntry("invalid mandatory prop value [.'$Array'.type]", (path != null ? lpath_12 : null));
                    return false;
                }
            }
            else if ((pfun = json_model_11_map_pmap.get(prop)) != null)
            {
                // handle 16 may props
                if (pfun != null && ! (pfun.call(pval, (path != null ? lpath_12 : null), rep)))
                {
                    if (rep != null) rep.addEntry("invalid optional prop value [.'$Array']", (path != null ? lpath_12 : null));
                    return false;
                }
            }
            else
            {
                if (rep != null) rep.addEntry("unexpected prop [.'$Array']", (path != null ? lpath_12 : null));
                return false;
            }
        }
        if (must_count != 1)
        {
            if (rep != null)
            {
                if (! json.objectHasProp(val, "type"))
                {
                    if (rep != null) rep.addEntry("missing mandatory prop <type> [.'$Array']", path);
                }
            }
            return false;
        }
        return true;
    }

    // check json_model_12_map_$comment (.'$Object'.'$comment')
    public boolean _jm_f_28(Object val, Path path, Report rep)
    {
        // .'$Object'.'$comment'
        boolean res = json.isString(val);
        if (! res)
        {
            if (rep != null) rep.addEntry("unexpected string [.'$Object'.'$comment']", path);
        }
        return res;
    }

    // check json_model_12_map_$defs (.'$Object'.'$defs')
    public boolean _jm_f_29(Object val, Path path, Report rep)
    {
        // .'$Object'.'$defs'
        if (! json.isObject(val))
        {
            if (rep != null) rep.addEntry("not an object [.'$Object'.'$defs']", path);
            return false;
        }
        boolean res;
        Iterator<String> prop_loop = json.objectIterator(val);
        while (prop_loop.hasNext())
        {
            String prop = prop_loop.next();
            Object pval = json.objectValue(val, prop);
            Path lpath_16 = new Path(prop, path);
            // handle other props
            // .'$Object'.'$defs'.''
            res = json_model_24(pval, (path != null ? lpath_16 : null), rep);
            if (! res)
            {
                if (rep != null) rep.addEntry("unexpected $Schema [.'$Object'.'$defs'.'']", (path != null ? lpath_16 : null));
                return false;
            }
        }
        return true;
    }

    // check json_model_12_map_$id (.'$Object'.'$id')
    public boolean _jm_f_30(Object val, Path path, Report rep)
    {
        // .'$Object'.'$id'
        boolean res = json.isString(val);
        if (! res)
        {
            if (rep != null) rep.addEntry("unexpected string [.'$Object'.'$id']", path);
        }
        return res;
    }

    // check json_model_12_map_$schema (.'$Object'.'$schema')
    public boolean _jm_f_31(Object val, Path path, Report rep)
    {
        // .'$Object'.'$schema'
        boolean res = json.isString(val);
        if (! res)
        {
            if (rep != null) rep.addEntry("unexpected string [.'$Object'.'$schema']", path);
        }
        return res;
    }

    // check json_model_12_map_default (.'$Object'.default)
    public boolean _jm_f_32(Object val, Path path, Report rep)
    {
        // .'$Object'.default
        return true;
    }

    // check json_model_12_map_definitions (.'$Object'.definitions)
    public boolean _jm_f_33(Object val, Path path, Report rep)
    {
        // .'$Object'.definitions
        if (! json.isObject(val))
        {
            if (rep != null) rep.addEntry("not an object [.'$Object'.definitions]", path);
            return false;
        }
        boolean res;
        Iterator<String> prop_loop = json.objectIterator(val);
        while (prop_loop.hasNext())
        {
            String prop = prop_loop.next();
            Object pval = json.objectValue(val, prop);
            Path lpath_17 = new Path(prop, path);
            // handle other props
            // .'$Object'.definitions.''
            res = json_model_24(pval, (path != null ? lpath_17 : null), rep);
            if (! res)
            {
                if (rep != null) rep.addEntry("unexpected $Schema [.'$Object'.definitions.'']", (path != null ? lpath_17 : null));
                return false;
            }
        }
        return true;
    }

    // check json_model_12_map_description (.'$Object'.description)
    public boolean _jm_f_34(Object val, Path path, Report rep)
    {
        // .'$Object'.description
        boolean res = json.isString(val);
        if (! res)
        {
            if (rep != null) rep.addEntry("unexpected string [.'$Object'.description]", path);
        }
        return res;
    }

    // check json_model_12_map_examples (.'$Object'.examples)
    public boolean _jm_f_35(Object val, Path path, Report rep)
    {
        // .'$Object'.examples
        boolean res = json.isArray(val);
        if (! res)
        {
            if (rep != null) rep.addEntry("not array or unexpected array [.'$Object'.examples]", path);
        }
        return res;
    }

    // check json_model_12_map_id (.'$Object'.id)
    public boolean _jm_f_36(Object val, Path path, Report rep)
    {
        // .'$Object'.id
        boolean res = json.isString(val);
        if (! res)
        {
            if (rep != null) rep.addEntry("unexpected string [.'$Object'.id]", path);
        }
        return res;
    }

    // check json_model_12_map_patternProperties (.'$Object'.patternProperties)
    public boolean _jm_f_37(Object val, Path path, Report rep)
    {
        // .'$Object'.patternProperties
        if (! json.isObject(val))
        {
            if (rep != null) rep.addEntry("not an object [.'$Object'.patternProperties]", path);
            return false;
        }
        boolean res;
        Iterator<String> prop_loop = json.objectIterator(val);
        while (prop_loop.hasNext())
        {
            String prop = prop_loop.next();
            Object pval = json.objectValue(val, prop);
            Path lpath_18 = new Path(prop, path);
            if (rt.is_valid_regex(prop))
            {
                // handle 1 key props
                // .'$Object'.patternProperties.'$REGEX'
                res = json_model_24(pval, (path != null ? lpath_18 : null), rep);
                if (! res)
                {
                    if (rep != null) rep.addEntry("unexpected $Schema [.'$Object'.patternProperties.'$REGEX']", (path != null ? lpath_18 : null));
                    return false;
                }
            }
            else
            {
                if (rep != null) rep.addEntry("unexpected prop [.'$Object'.patternProperties]", (path != null ? lpath_18 : null));
                return false;
            }
        }
        return true;
    }

    // check json_model_12_map_properties (.'$Object'.properties)
    public boolean _jm_f_38(Object val, Path path, Report rep)
    {
        // .'$Object'.properties
        if (! json.isObject(val))
        {
            if (rep != null) rep.addEntry("not an object [.'$Object'.properties]", path);
            return false;
        }
        boolean res;
        Iterator<String> prop_loop = json.objectIterator(val);
        while (prop_loop.hasNext())
        {
            String prop = prop_loop.next();
            Object pval = json.objectValue(val, prop);
            Path lpath_19 = new Path(prop, path);
            // handle other props
            // .'$Object'.properties.''
            res = json_model_24(pval, (path != null ? lpath_19 : null), rep);
            if (! res)
            {
                if (rep != null) rep.addEntry("unexpected $Schema [.'$Object'.properties.'']", (path != null ? lpath_19 : null));
                return false;
            }
        }
        return true;
    }

    // check json_model_12_map_required (.'$Object'.required)
    public boolean _jm_f_39(Object val, Path path, Report rep)
    {
        // .'$Object'.required
        boolean res = json.isArray(val);
        if (res)
        {
            int arr_5_idx = -1;
            Iterator<Object> arr_5_item_loop = json.arrayIterator(val);
            while (arr_5_item_loop.hasNext())
            {
                arr_5_idx++;
                Object arr_5_item = arr_5_item_loop.next();
                Path arr_5_lpath = new Path(arr_5_idx, path);
                // .'$Object'.required.0
                res = json.isString(arr_5_item);
                if (! res)
                {
                    if (rep != null) rep.addEntry("unexpected string [.'$Object'.required.0]", (path != null ? arr_5_lpath : null));
                    break;
                }
            }
        }
        if (! res)
        {
            if (rep != null) rep.addEntry("not array or unexpected array [.'$Object'.required]", path);
        }
        return res;
    }

    // check json_model_12_map_title (.'$Object'.title)
    public boolean _jm_f_40(Object val, Path path, Report rep)
    {
        // .'$Object'.title
        boolean res = json.isString(val);
        if (! res)
        {
            if (rep != null) rep.addEntry("unexpected string [.'$Object'.title]", path);
        }
        return res;
    }


    // check $Object (.'$Object')
    public boolean json_model_12(Object val, Path path, Report rep)
    {
        // .'$Object'
        if (! json.isObject(val))
        {
            if (rep != null) rep.addEntry("not an object [.'$Object']", path);
            return false;
        }
        boolean res;
        Checker pfun;
        long must_count = 0;
        Iterator<String> prop_loop = json.objectIterator(val);
        while (prop_loop.hasNext())
        {
            String prop = prop_loop.next();
            Object pval = json.objectValue(val, prop);
            Path lpath_15 = new Path(prop, path);
            if (prop.compareTo("type") == 0)
            {
                // handle must type property
                must_count += 1;
                // .'$Object'.type
                res = json.isString(pval) && json.asString(pval).compareTo("object") == 0;
                if (! res)
                {
                    if (rep != null) rep.addEntry("unexpected object [.'$Object'.type]", (path != null ? lpath_15 : null));
                    if (rep != null) rep.addEntry("invalid mandatory prop value [.'$Object'.type]", (path != null ? lpath_15 : null));
                    return false;
                }
            }
            else if ((pfun = json_model_12_map_pmap.get(prop)) != null)
            {
                // handle 14 may props
                if (pfun != null && ! (pfun.call(pval, (path != null ? lpath_15 : null), rep)))
                {
                    if (rep != null) rep.addEntry("invalid optional prop value [.'$Object']", (path != null ? lpath_15 : null));
                    return false;
                }
            }
            else
            {
                if (rep != null) rep.addEntry("unexpected prop [.'$Object']", (path != null ? lpath_15 : null));
                return false;
            }
        }
        if (must_count != 1)
        {
            if (rep != null)
            {
                if (! json.objectHasProp(val, "type"))
                {
                    if (rep != null) rep.addEntry("missing mandatory prop <type> [.'$Object']", path);
                }
            }
            return false;
        }
        return true;
    }

    // object .'$Integer'.'$defs'
    public boolean _jm_obj_4(Object val, Path path, Report rep)
    {
        if (! json.isObject(val))
        {
            if (rep != null) rep.addEntry("not an object [.'$Integer'.'$defs']", path);
            return false;
        }
        boolean res;
        Iterator<String> prop_loop = json.objectIterator(val);
        while (prop_loop.hasNext())
        {
            String prop = prop_loop.next();
            Object pval = json.objectValue(val, prop);
            Path lpath_21 = new Path(prop, path);
            // handle other props
            // .'$Integer'.'$defs'.''
            res = json_model_24(pval, (path != null ? lpath_21 : null), rep);
            if (! res)
            {
                if (rep != null) rep.addEntry("unexpected $Schema [.'$Integer'.'$defs'.'']", (path != null ? lpath_21 : null));
                return false;
            }
        }
        return true;
    }

    // object .'$Integer'.definitions
    public boolean _jm_obj_5(Object val, Path path, Report rep)
    {
        if (! json.isObject(val))
        {
            if (rep != null) rep.addEntry("not an object [.'$Integer'.definitions]", path);
            return false;
        }
        boolean res;
        Iterator<String> prop_loop = json.objectIterator(val);
        while (prop_loop.hasNext())
        {
            String prop = prop_loop.next();
            Object pval = json.objectValue(val, prop);
            Path lpath_22 = new Path(prop, path);
            // handle other props
            // .'$Integer'.definitions.''
            res = json_model_24(pval, (path != null ? lpath_22 : null), rep);
            if (! res)
            {
                if (rep != null) rep.addEntry("unexpected $Schema [.'$Integer'.definitions.'']", (path != null ? lpath_22 : null));
                return false;
            }
        }
        return true;
    }

    // check $Integer (.'$Integer')
    public boolean json_model_13(Object val, Path path, Report rep)
    {
        // .'$Integer'
        if (! json.isObject(val))
        {
            if (rep != null) rep.addEntry("not an object [.'$Integer']", path);
            return false;
        }
        boolean res;
        long must_count = 0;
        Iterator<String> prop_loop = json.objectIterator(val);
        while (prop_loop.hasNext())
        {
            String prop = prop_loop.next();
            Object pval = json.objectValue(val, prop);
            Path lpath_20 = new Path(prop, path);
            if (prop.compareTo("type") == 0)
            {
                // handle must type property
                must_count += 1;
                // .'$Integer'.type
                res = json.isString(pval) && json.asString(pval).compareTo("integer") == 0;
                if (! res)
                {
                    if (rep != null) rep.addEntry("unexpected integer [.'$Integer'.type]", (path != null ? lpath_20 : null));
                    if (rep != null) rep.addEntry("invalid mandatory prop value [.'$Integer'.type]", (path != null ? lpath_20 : null));
                    return false;
                }
            }
            else if (prop.compareTo("$schema") == 0)
            {
                // handle may $schema property
                // .'$Integer'.'$schema'
                res = json.isString(pval);
                if (! res)
                {
                    if (rep != null) rep.addEntry("unexpected string [.'$Integer'.'$schema']", (path != null ? lpath_20 : null));
                    if (rep != null) rep.addEntry("invalid optional prop value [.'$Integer'.'$schema']", (path != null ? lpath_20 : null));
                    return false;
                }
            }
            else if (prop.compareTo("$id") == 0)
            {
                // handle may $id property
                // .'$Integer'.'$id'
                res = json.isString(pval);
                if (! res)
                {
                    if (rep != null) rep.addEntry("unexpected string [.'$Integer'.'$id']", (path != null ? lpath_20 : null));
                    if (rep != null) rep.addEntry("invalid optional prop value [.'$Integer'.'$id']", (path != null ? lpath_20 : null));
                    return false;
                }
            }
            else if (prop.compareTo("id") == 0)
            {
                // handle may id property
                // .'$Integer'.id
                res = json.isString(pval);
                if (! res)
                {
                    if (rep != null) rep.addEntry("unexpected string [.'$Integer'.id]", (path != null ? lpath_20 : null));
                    if (rep != null) rep.addEntry("invalid optional prop value [.'$Integer'.id]", (path != null ? lpath_20 : null));
                    return false;
                }
            }
            else if (prop.compareTo("$comment") == 0)
            {
                // handle may $comment property
                // .'$Integer'.'$comment'
                res = json.isString(pval);
                if (! res)
                {
                    if (rep != null) rep.addEntry("unexpected string [.'$Integer'.'$comment']", (path != null ? lpath_20 : null));
                    if (rep != null) rep.addEntry("invalid optional prop value [.'$Integer'.'$comment']", (path != null ? lpath_20 : null));
                    return false;
                }
            }
            else if (prop.compareTo("title") == 0)
            {
                // handle may title property
                // .'$Integer'.title
                res = json.isString(pval);
                if (! res)
                {
                    if (rep != null) rep.addEntry("unexpected string [.'$Integer'.title]", (path != null ? lpath_20 : null));
                    if (rep != null) rep.addEntry("invalid optional prop value [.'$Integer'.title]", (path != null ? lpath_20 : null));
                    return false;
                }
            }
            else if (prop.compareTo("default") == 0)
            {
                // handle may default property
                // .'$Integer'.default
                res = true;
            }
            else if (prop.compareTo("examples") == 0)
            {
                // handle may examples property
                // .'$Integer'.examples
                res = json.isArray(pval);
                if (! res)
                {
                    if (rep != null) rep.addEntry("not array or unexpected array [.'$Integer'.examples]", (path != null ? lpath_20 : null));
                    if (rep != null) rep.addEntry("invalid optional prop value [.'$Integer'.examples]", (path != null ? lpath_20 : null));
                    return false;
                }
            }
            else if (prop.compareTo("description") == 0)
            {
                // handle may description property
                // .'$Integer'.description
                res = json.isString(pval);
                if (! res)
                {
                    if (rep != null) rep.addEntry("unexpected string [.'$Integer'.description]", (path != null ? lpath_20 : null));
                    if (rep != null) rep.addEntry("invalid optional prop value [.'$Integer'.description]", (path != null ? lpath_20 : null));
                    return false;
                }
            }
            else if (prop.compareTo("$defs") == 0)
            {
                // handle may $defs property
                // .'$Integer'.'$defs'
                res = _jm_obj_4(pval, (path != null ? lpath_20 : null), rep);
                if (! res)
                {
                    if (rep != null) rep.addEntry("unexpected element [.'$Integer'.'$defs']", (path != null ? lpath_20 : null));
                    if (rep != null) rep.addEntry("invalid optional prop value [.'$Integer'.'$defs']", (path != null ? lpath_20 : null));
                    return false;
                }
            }
            else if (prop.compareTo("definitions") == 0)
            {
                // handle may definitions property
                // .'$Integer'.definitions
                res = _jm_obj_5(pval, (path != null ? lpath_20 : null), rep);
                if (! res)
                {
                    if (rep != null) rep.addEntry("unexpected element [.'$Integer'.definitions]", (path != null ? lpath_20 : null));
                    if (rep != null) rep.addEntry("invalid optional prop value [.'$Integer'.definitions]", (path != null ? lpath_20 : null));
                    return false;
                }
            }
            else if (prop.compareTo("minimum") == 0)
            {
                // handle may minimum property
                // .'$Integer'.minimum
                res = json.isDouble(pval);
                if (! res)
                {
                    if (rep != null) rep.addEntry("not a -1.0 strict float [.'$Integer'.minimum]", (path != null ? lpath_20 : null));
                    if (rep != null) rep.addEntry("invalid optional prop value [.'$Integer'.minimum]", (path != null ? lpath_20 : null));
                    return false;
                }
            }
            else if (prop.compareTo("maximum") == 0)
            {
                // handle may maximum property
                // .'$Integer'.maximum
                res = json.isDouble(pval);
                if (! res)
                {
                    if (rep != null) rep.addEntry("not a -1.0 strict float [.'$Integer'.maximum]", (path != null ? lpath_20 : null));
                    if (rep != null) rep.addEntry("invalid optional prop value [.'$Integer'.maximum]", (path != null ? lpath_20 : null));
                    return false;
                }
            }
            else
            {
                if (rep != null) rep.addEntry("unexpected prop [.'$Integer']", (path != null ? lpath_20 : null));
                return false;
            }
        }
        if (must_count != 1)
        {
            if (rep != null)
            {
                if (! json.objectHasProp(val, "type"))
                {
                    if (rep != null) rep.addEntry("missing mandatory prop <type> [.'$Integer']", path);
                }
            }
            return false;
        }
        return true;
    }

    // object .'$Number'.'$defs'
    public boolean _jm_obj_6(Object val, Path path, Report rep)
    {
        if (! json.isObject(val))
        {
            if (rep != null) rep.addEntry("not an object [.'$Number'.'$defs']", path);
            return false;
        }
        boolean res;
        Iterator<String> prop_loop = json.objectIterator(val);
        while (prop_loop.hasNext())
        {
            String prop = prop_loop.next();
            Object pval = json.objectValue(val, prop);
            Path lpath_24 = new Path(prop, path);
            // handle other props
            // .'$Number'.'$defs'.''
            res = json_model_24(pval, (path != null ? lpath_24 : null), rep);
            if (! res)
            {
                if (rep != null) rep.addEntry("unexpected $Schema [.'$Number'.'$defs'.'']", (path != null ? lpath_24 : null));
                return false;
            }
        }
        return true;
    }

    // object .'$Number'.definitions
    public boolean _jm_obj_7(Object val, Path path, Report rep)
    {
        if (! json.isObject(val))
        {
            if (rep != null) rep.addEntry("not an object [.'$Number'.definitions]", path);
            return false;
        }
        boolean res;
        Iterator<String> prop_loop = json.objectIterator(val);
        while (prop_loop.hasNext())
        {
            String prop = prop_loop.next();
            Object pval = json.objectValue(val, prop);
            Path lpath_25 = new Path(prop, path);
            // handle other props
            // .'$Number'.definitions.''
            res = json_model_24(pval, (path != null ? lpath_25 : null), rep);
            if (! res)
            {
                if (rep != null) rep.addEntry("unexpected $Schema [.'$Number'.definitions.'']", (path != null ? lpath_25 : null));
                return false;
            }
        }
        return true;
    }

    // check $Number (.'$Number')
    public boolean json_model_14(Object val, Path path, Report rep)
    {
        // .'$Number'
        if (! json.isObject(val))
        {
            if (rep != null) rep.addEntry("not an object [.'$Number']", path);
            return false;
        }
        boolean res;
        long must_count = 0;
        Iterator<String> prop_loop = json.objectIterator(val);
        while (prop_loop.hasNext())
        {
            String prop = prop_loop.next();
            Object pval = json.objectValue(val, prop);
            Path lpath_23 = new Path(prop, path);
            if (prop.compareTo("type") == 0)
            {
                // handle must type property
                must_count += 1;
                // .'$Number'.type
                res = json.isString(pval) && json.asString(pval).compareTo("number") == 0;
                if (! res)
                {
                    if (rep != null) rep.addEntry("unexpected number [.'$Number'.type]", (path != null ? lpath_23 : null));
                    if (rep != null) rep.addEntry("invalid mandatory prop value [.'$Number'.type]", (path != null ? lpath_23 : null));
                    return false;
                }
            }
            else if (prop.compareTo("$schema") == 0)
            {
                // handle may $schema property
                // .'$Number'.'$schema'
                res = json.isString(pval);
                if (! res)
                {
                    if (rep != null) rep.addEntry("unexpected string [.'$Number'.'$schema']", (path != null ? lpath_23 : null));
                    if (rep != null) rep.addEntry("invalid optional prop value [.'$Number'.'$schema']", (path != null ? lpath_23 : null));
                    return false;
                }
            }
            else if (prop.compareTo("$id") == 0)
            {
                // handle may $id property
                // .'$Number'.'$id'
                res = json.isString(pval);
                if (! res)
                {
                    if (rep != null) rep.addEntry("unexpected string [.'$Number'.'$id']", (path != null ? lpath_23 : null));
                    if (rep != null) rep.addEntry("invalid optional prop value [.'$Number'.'$id']", (path != null ? lpath_23 : null));
                    return false;
                }
            }
            else if (prop.compareTo("id") == 0)
            {
                // handle may id property
                // .'$Number'.id
                res = json.isString(pval);
                if (! res)
                {
                    if (rep != null) rep.addEntry("unexpected string [.'$Number'.id]", (path != null ? lpath_23 : null));
                    if (rep != null) rep.addEntry("invalid optional prop value [.'$Number'.id]", (path != null ? lpath_23 : null));
                    return false;
                }
            }
            else if (prop.compareTo("$comment") == 0)
            {
                // handle may $comment property
                // .'$Number'.'$comment'
                res = json.isString(pval);
                if (! res)
                {
                    if (rep != null) rep.addEntry("unexpected string [.'$Number'.'$comment']", (path != null ? lpath_23 : null));
                    if (rep != null) rep.addEntry("invalid optional prop value [.'$Number'.'$comment']", (path != null ? lpath_23 : null));
                    return false;
                }
            }
            else if (prop.compareTo("title") == 0)
            {
                // handle may title property
                // .'$Number'.title
                res = json.isString(pval);
                if (! res)
                {
                    if (rep != null) rep.addEntry("unexpected string [.'$Number'.title]", (path != null ? lpath_23 : null));
                    if (rep != null) rep.addEntry("invalid optional prop value [.'$Number'.title]", (path != null ? lpath_23 : null));
                    return false;
                }
            }
            else if (prop.compareTo("default") == 0)
            {
                // handle may default property
                // .'$Number'.default
                res = true;
            }
            else if (prop.compareTo("examples") == 0)
            {
                // handle may examples property
                // .'$Number'.examples
                res = json.isArray(pval);
                if (! res)
                {
                    if (rep != null) rep.addEntry("not array or unexpected array [.'$Number'.examples]", (path != null ? lpath_23 : null));
                    if (rep != null) rep.addEntry("invalid optional prop value [.'$Number'.examples]", (path != null ? lpath_23 : null));
                    return false;
                }
            }
            else if (prop.compareTo("description") == 0)
            {
                // handle may description property
                // .'$Number'.description
                res = json.isString(pval);
                if (! res)
                {
                    if (rep != null) rep.addEntry("unexpected string [.'$Number'.description]", (path != null ? lpath_23 : null));
                    if (rep != null) rep.addEntry("invalid optional prop value [.'$Number'.description]", (path != null ? lpath_23 : null));
                    return false;
                }
            }
            else if (prop.compareTo("$defs") == 0)
            {
                // handle may $defs property
                // .'$Number'.'$defs'
                res = _jm_obj_6(pval, (path != null ? lpath_23 : null), rep);
                if (! res)
                {
                    if (rep != null) rep.addEntry("unexpected element [.'$Number'.'$defs']", (path != null ? lpath_23 : null));
                    if (rep != null) rep.addEntry("invalid optional prop value [.'$Number'.'$defs']", (path != null ? lpath_23 : null));
                    return false;
                }
            }
            else if (prop.compareTo("definitions") == 0)
            {
                // handle may definitions property
                // .'$Number'.definitions
                res = _jm_obj_7(pval, (path != null ? lpath_23 : null), rep);
                if (! res)
                {
                    if (rep != null) rep.addEntry("unexpected element [.'$Number'.definitions]", (path != null ? lpath_23 : null));
                    if (rep != null) rep.addEntry("invalid optional prop value [.'$Number'.definitions]", (path != null ? lpath_23 : null));
                    return false;
                }
            }
            else if (prop.compareTo("minimum") == 0)
            {
                // handle may minimum property
                // .'$Number'.minimum
                res = json.isDouble(pval);
                if (! res)
                {
                    if (rep != null) rep.addEntry("not a -1.0 strict float [.'$Number'.minimum]", (path != null ? lpath_23 : null));
                    if (rep != null) rep.addEntry("invalid optional prop value [.'$Number'.minimum]", (path != null ? lpath_23 : null));
                    return false;
                }
            }
            else if (prop.compareTo("maximum") == 0)
            {
                // handle may maximum property
                // .'$Number'.maximum
                res = json.isDouble(pval);
                if (! res)
                {
                    if (rep != null) rep.addEntry("not a -1.0 strict float [.'$Number'.maximum]", (path != null ? lpath_23 : null));
                    if (rep != null) rep.addEntry("invalid optional prop value [.'$Number'.maximum]", (path != null ? lpath_23 : null));
                    return false;
                }
            }
            else
            {
                if (rep != null) rep.addEntry("unexpected prop [.'$Number']", (path != null ? lpath_23 : null));
                return false;
            }
        }
        if (must_count != 1)
        {
            if (rep != null)
            {
                if (! json.objectHasProp(val, "type"))
                {
                    if (rep != null) rep.addEntry("missing mandatory prop <type> [.'$Number']", path);
                }
            }
            return false;
        }
        return true;
    }

    // object .'$Bool'.'$defs'
    public boolean _jm_obj_8(Object val, Path path, Report rep)
    {
        if (! json.isObject(val))
        {
            if (rep != null) rep.addEntry("not an object [.'$Bool'.'$defs']", path);
            return false;
        }
        boolean res;
        Iterator<String> prop_loop = json.objectIterator(val);
        while (prop_loop.hasNext())
        {
            String prop = prop_loop.next();
            Object pval = json.objectValue(val, prop);
            Path lpath_27 = new Path(prop, path);
            // handle other props
            // .'$Bool'.'$defs'.''
            res = json_model_24(pval, (path != null ? lpath_27 : null), rep);
            if (! res)
            {
                if (rep != null) rep.addEntry("unexpected $Schema [.'$Bool'.'$defs'.'']", (path != null ? lpath_27 : null));
                return false;
            }
        }
        return true;
    }

    // object .'$Bool'.definitions
    public boolean _jm_obj_9(Object val, Path path, Report rep)
    {
        if (! json.isObject(val))
        {
            if (rep != null) rep.addEntry("not an object [.'$Bool'.definitions]", path);
            return false;
        }
        boolean res;
        Iterator<String> prop_loop = json.objectIterator(val);
        while (prop_loop.hasNext())
        {
            String prop = prop_loop.next();
            Object pval = json.objectValue(val, prop);
            Path lpath_28 = new Path(prop, path);
            // handle other props
            // .'$Bool'.definitions.''
            res = json_model_24(pval, (path != null ? lpath_28 : null), rep);
            if (! res)
            {
                if (rep != null) rep.addEntry("unexpected $Schema [.'$Bool'.definitions.'']", (path != null ? lpath_28 : null));
                return false;
            }
        }
        return true;
    }

    // check $Bool (.'$Bool')
    public boolean json_model_15(Object val, Path path, Report rep)
    {
        // .'$Bool'
        if (! json.isObject(val))
        {
            if (rep != null) rep.addEntry("not an object [.'$Bool']", path);
            return false;
        }
        boolean res;
        long must_count = 0;
        Iterator<String> prop_loop = json.objectIterator(val);
        while (prop_loop.hasNext())
        {
            String prop = prop_loop.next();
            Object pval = json.objectValue(val, prop);
            Path lpath_26 = new Path(prop, path);
            if (prop.compareTo("type") == 0)
            {
                // handle must type property
                must_count += 1;
                // .'$Bool'.type
                res = json.isString(pval) && json.asString(pval).compareTo("boolean") == 0;
                if (! res)
                {
                    if (rep != null) rep.addEntry("unexpected boolean [.'$Bool'.type]", (path != null ? lpath_26 : null));
                    if (rep != null) rep.addEntry("invalid mandatory prop value [.'$Bool'.type]", (path != null ? lpath_26 : null));
                    return false;
                }
            }
            else if (prop.compareTo("$schema") == 0)
            {
                // handle may $schema property
                // .'$Bool'.'$schema'
                res = json.isString(pval);
                if (! res)
                {
                    if (rep != null) rep.addEntry("unexpected string [.'$Bool'.'$schema']", (path != null ? lpath_26 : null));
                    if (rep != null) rep.addEntry("invalid optional prop value [.'$Bool'.'$schema']", (path != null ? lpath_26 : null));
                    return false;
                }
            }
            else if (prop.compareTo("$id") == 0)
            {
                // handle may $id property
                // .'$Bool'.'$id'
                res = json.isString(pval);
                if (! res)
                {
                    if (rep != null) rep.addEntry("unexpected string [.'$Bool'.'$id']", (path != null ? lpath_26 : null));
                    if (rep != null) rep.addEntry("invalid optional prop value [.'$Bool'.'$id']", (path != null ? lpath_26 : null));
                    return false;
                }
            }
            else if (prop.compareTo("id") == 0)
            {
                // handle may id property
                // .'$Bool'.id
                res = json.isString(pval);
                if (! res)
                {
                    if (rep != null) rep.addEntry("unexpected string [.'$Bool'.id]", (path != null ? lpath_26 : null));
                    if (rep != null) rep.addEntry("invalid optional prop value [.'$Bool'.id]", (path != null ? lpath_26 : null));
                    return false;
                }
            }
            else if (prop.compareTo("$comment") == 0)
            {
                // handle may $comment property
                // .'$Bool'.'$comment'
                res = json.isString(pval);
                if (! res)
                {
                    if (rep != null) rep.addEntry("unexpected string [.'$Bool'.'$comment']", (path != null ? lpath_26 : null));
                    if (rep != null) rep.addEntry("invalid optional prop value [.'$Bool'.'$comment']", (path != null ? lpath_26 : null));
                    return false;
                }
            }
            else if (prop.compareTo("title") == 0)
            {
                // handle may title property
                // .'$Bool'.title
                res = json.isString(pval);
                if (! res)
                {
                    if (rep != null) rep.addEntry("unexpected string [.'$Bool'.title]", (path != null ? lpath_26 : null));
                    if (rep != null) rep.addEntry("invalid optional prop value [.'$Bool'.title]", (path != null ? lpath_26 : null));
                    return false;
                }
            }
            else if (prop.compareTo("default") == 0)
            {
                // handle may default property
                // .'$Bool'.default
                res = true;
            }
            else if (prop.compareTo("examples") == 0)
            {
                // handle may examples property
                // .'$Bool'.examples
                res = json.isArray(pval);
                if (! res)
                {
                    if (rep != null) rep.addEntry("not array or unexpected array [.'$Bool'.examples]", (path != null ? lpath_26 : null));
                    if (rep != null) rep.addEntry("invalid optional prop value [.'$Bool'.examples]", (path != null ? lpath_26 : null));
                    return false;
                }
            }
            else if (prop.compareTo("description") == 0)
            {
                // handle may description property
                // .'$Bool'.description
                res = json.isString(pval);
                if (! res)
                {
                    if (rep != null) rep.addEntry("unexpected string [.'$Bool'.description]", (path != null ? lpath_26 : null));
                    if (rep != null) rep.addEntry("invalid optional prop value [.'$Bool'.description]", (path != null ? lpath_26 : null));
                    return false;
                }
            }
            else if (prop.compareTo("$defs") == 0)
            {
                // handle may $defs property
                // .'$Bool'.'$defs'
                res = _jm_obj_8(pval, (path != null ? lpath_26 : null), rep);
                if (! res)
                {
                    if (rep != null) rep.addEntry("unexpected element [.'$Bool'.'$defs']", (path != null ? lpath_26 : null));
                    if (rep != null) rep.addEntry("invalid optional prop value [.'$Bool'.'$defs']", (path != null ? lpath_26 : null));
                    return false;
                }
            }
            else if (prop.compareTo("definitions") == 0)
            {
                // handle may definitions property
                // .'$Bool'.definitions
                res = _jm_obj_9(pval, (path != null ? lpath_26 : null), rep);
                if (! res)
                {
                    if (rep != null) rep.addEntry("unexpected element [.'$Bool'.definitions]", (path != null ? lpath_26 : null));
                    if (rep != null) rep.addEntry("invalid optional prop value [.'$Bool'.definitions]", (path != null ? lpath_26 : null));
                    return false;
                }
            }
            else
            {
                if (rep != null) rep.addEntry("unexpected prop [.'$Bool']", (path != null ? lpath_26 : null));
                return false;
            }
        }
        if (must_count != 1)
        {
            if (rep != null)
            {
                if (! json.objectHasProp(val, "type"))
                {
                    if (rep != null) rep.addEntry("missing mandatory prop <type> [.'$Bool']", path);
                }
            }
            return false;
        }
        return true;
    }

    // object .'$Null'.'$defs'
    public boolean _jm_obj_10(Object val, Path path, Report rep)
    {
        if (! json.isObject(val))
        {
            if (rep != null) rep.addEntry("not an object [.'$Null'.'$defs']", path);
            return false;
        }
        boolean res;
        Iterator<String> prop_loop = json.objectIterator(val);
        while (prop_loop.hasNext())
        {
            String prop = prop_loop.next();
            Object pval = json.objectValue(val, prop);
            Path lpath_30 = new Path(prop, path);
            // handle other props
            // .'$Null'.'$defs'.''
            res = json_model_24(pval, (path != null ? lpath_30 : null), rep);
            if (! res)
            {
                if (rep != null) rep.addEntry("unexpected $Schema [.'$Null'.'$defs'.'']", (path != null ? lpath_30 : null));
                return false;
            }
        }
        return true;
    }

    // object .'$Null'.definitions
    public boolean _jm_obj_11(Object val, Path path, Report rep)
    {
        if (! json.isObject(val))
        {
            if (rep != null) rep.addEntry("not an object [.'$Null'.definitions]", path);
            return false;
        }
        boolean res;
        Iterator<String> prop_loop = json.objectIterator(val);
        while (prop_loop.hasNext())
        {
            String prop = prop_loop.next();
            Object pval = json.objectValue(val, prop);
            Path lpath_31 = new Path(prop, path);
            // handle other props
            // .'$Null'.definitions.''
            res = json_model_24(pval, (path != null ? lpath_31 : null), rep);
            if (! res)
            {
                if (rep != null) rep.addEntry("unexpected $Schema [.'$Null'.definitions.'']", (path != null ? lpath_31 : null));
                return false;
            }
        }
        return true;
    }

    // check $Null (.'$Null')
    public boolean json_model_16(Object val, Path path, Report rep)
    {
        // .'$Null'
        if (! json.isObject(val))
        {
            if (rep != null) rep.addEntry("not an object [.'$Null']", path);
            return false;
        }
        boolean res;
        long must_count = 0;
        Iterator<String> prop_loop = json.objectIterator(val);
        while (prop_loop.hasNext())
        {
            String prop = prop_loop.next();
            Object pval = json.objectValue(val, prop);
            Path lpath_29 = new Path(prop, path);
            if (prop.compareTo("type") == 0)
            {
                // handle must type property
                must_count += 1;
                // .'$Null'.type
                res = json.isString(pval) && json.asString(pval).compareTo("null") == 0;
                if (! res)
                {
                    if (rep != null) rep.addEntry("unexpected null [.'$Null'.type]", (path != null ? lpath_29 : null));
                    if (rep != null) rep.addEntry("invalid mandatory prop value [.'$Null'.type]", (path != null ? lpath_29 : null));
                    return false;
                }
            }
            else if (prop.compareTo("$schema") == 0)
            {
                // handle may $schema property
                // .'$Null'.'$schema'
                res = json.isString(pval);
                if (! res)
                {
                    if (rep != null) rep.addEntry("unexpected string [.'$Null'.'$schema']", (path != null ? lpath_29 : null));
                    if (rep != null) rep.addEntry("invalid optional prop value [.'$Null'.'$schema']", (path != null ? lpath_29 : null));
                    return false;
                }
            }
            else if (prop.compareTo("$id") == 0)
            {
                // handle may $id property
                // .'$Null'.'$id'
                res = json.isString(pval);
                if (! res)
                {
                    if (rep != null) rep.addEntry("unexpected string [.'$Null'.'$id']", (path != null ? lpath_29 : null));
                    if (rep != null) rep.addEntry("invalid optional prop value [.'$Null'.'$id']", (path != null ? lpath_29 : null));
                    return false;
                }
            }
            else if (prop.compareTo("id") == 0)
            {
                // handle may id property
                // .'$Null'.id
                res = json.isString(pval);
                if (! res)
                {
                    if (rep != null) rep.addEntry("unexpected string [.'$Null'.id]", (path != null ? lpath_29 : null));
                    if (rep != null) rep.addEntry("invalid optional prop value [.'$Null'.id]", (path != null ? lpath_29 : null));
                    return false;
                }
            }
            else if (prop.compareTo("$comment") == 0)
            {
                // handle may $comment property
                // .'$Null'.'$comment'
                res = json.isString(pval);
                if (! res)
                {
                    if (rep != null) rep.addEntry("unexpected string [.'$Null'.'$comment']", (path != null ? lpath_29 : null));
                    if (rep != null) rep.addEntry("invalid optional prop value [.'$Null'.'$comment']", (path != null ? lpath_29 : null));
                    return false;
                }
            }
            else if (prop.compareTo("title") == 0)
            {
                // handle may title property
                // .'$Null'.title
                res = json.isString(pval);
                if (! res)
                {
                    if (rep != null) rep.addEntry("unexpected string [.'$Null'.title]", (path != null ? lpath_29 : null));
                    if (rep != null) rep.addEntry("invalid optional prop value [.'$Null'.title]", (path != null ? lpath_29 : null));
                    return false;
                }
            }
            else if (prop.compareTo("default") == 0)
            {
                // handle may default property
                // .'$Null'.default
                res = true;
            }
            else if (prop.compareTo("examples") == 0)
            {
                // handle may examples property
                // .'$Null'.examples
                res = json.isArray(pval);
                if (! res)
                {
                    if (rep != null) rep.addEntry("not array or unexpected array [.'$Null'.examples]", (path != null ? lpath_29 : null));
                    if (rep != null) rep.addEntry("invalid optional prop value [.'$Null'.examples]", (path != null ? lpath_29 : null));
                    return false;
                }
            }
            else if (prop.compareTo("description") == 0)
            {
                // handle may description property
                // .'$Null'.description
                res = json.isString(pval);
                if (! res)
                {
                    if (rep != null) rep.addEntry("unexpected string [.'$Null'.description]", (path != null ? lpath_29 : null));
                    if (rep != null) rep.addEntry("invalid optional prop value [.'$Null'.description]", (path != null ? lpath_29 : null));
                    return false;
                }
            }
            else if (prop.compareTo("$defs") == 0)
            {
                // handle may $defs property
                // .'$Null'.'$defs'
                res = _jm_obj_10(pval, (path != null ? lpath_29 : null), rep);
                if (! res)
                {
                    if (rep != null) rep.addEntry("unexpected element [.'$Null'.'$defs']", (path != null ? lpath_29 : null));
                    if (rep != null) rep.addEntry("invalid optional prop value [.'$Null'.'$defs']", (path != null ? lpath_29 : null));
                    return false;
                }
            }
            else if (prop.compareTo("definitions") == 0)
            {
                // handle may definitions property
                // .'$Null'.definitions
                res = _jm_obj_11(pval, (path != null ? lpath_29 : null), rep);
                if (! res)
                {
                    if (rep != null) rep.addEntry("unexpected element [.'$Null'.definitions]", (path != null ? lpath_29 : null));
                    if (rep != null) rep.addEntry("invalid optional prop value [.'$Null'.definitions]", (path != null ? lpath_29 : null));
                    return false;
                }
            }
            else
            {
                if (rep != null) rep.addEntry("unexpected prop [.'$Null']", (path != null ? lpath_29 : null));
                return false;
            }
        }
        if (must_count != 1)
        {
            if (rep != null)
            {
                if (! json.objectHasProp(val, "type"))
                {
                    if (rep != null) rep.addEntry("missing mandatory prop <type> [.'$Null']", path);
                }
            }
            return false;
        }
        return true;
    }

    // object .'$AllOf'.'$defs'
    public boolean _jm_obj_12(Object val, Path path, Report rep)
    {
        if (! json.isObject(val))
        {
            if (rep != null) rep.addEntry("not an object [.'$AllOf'.'$defs']", path);
            return false;
        }
        boolean res;
        Iterator<String> prop_loop = json.objectIterator(val);
        while (prop_loop.hasNext())
        {
            String prop = prop_loop.next();
            Object pval = json.objectValue(val, prop);
            Path lpath_33 = new Path(prop, path);
            // handle other props
            // .'$AllOf'.'$defs'.''
            res = json_model_24(pval, (path != null ? lpath_33 : null), rep);
            if (! res)
            {
                if (rep != null) rep.addEntry("unexpected $Schema [.'$AllOf'.'$defs'.'']", (path != null ? lpath_33 : null));
                return false;
            }
        }
        return true;
    }

    // object .'$AllOf'.definitions
    public boolean _jm_obj_13(Object val, Path path, Report rep)
    {
        if (! json.isObject(val))
        {
            if (rep != null) rep.addEntry("not an object [.'$AllOf'.definitions]", path);
            return false;
        }
        boolean res;
        Iterator<String> prop_loop = json.objectIterator(val);
        while (prop_loop.hasNext())
        {
            String prop = prop_loop.next();
            Object pval = json.objectValue(val, prop);
            Path lpath_34 = new Path(prop, path);
            // handle other props
            // .'$AllOf'.definitions.''
            res = json_model_24(pval, (path != null ? lpath_34 : null), rep);
            if (! res)
            {
                if (rep != null) rep.addEntry("unexpected $Schema [.'$AllOf'.definitions.'']", (path != null ? lpath_34 : null));
                return false;
            }
        }
        return true;
    }

    // check $AllOf (.'$AllOf')
    public boolean json_model_17(Object val, Path path, Report rep)
    {
        // .'$AllOf'
        if (! json.isObject(val))
        {
            if (rep != null) rep.addEntry("not an object [.'$AllOf']", path);
            return false;
        }
        boolean res;
        long must_count = 0;
        Iterator<String> prop_loop = json.objectIterator(val);
        while (prop_loop.hasNext())
        {
            String prop = prop_loop.next();
            Object pval = json.objectValue(val, prop);
            Path lpath_32 = new Path(prop, path);
            if (prop.compareTo("allOf") == 0)
            {
                // handle must allOf property
                must_count += 1;
                // .'$AllOf'.allOf
                res = json_model_4(pval, (path != null ? lpath_32 : null), rep);
                if (! res)
                {
                    if (rep != null) rep.addEntry("unexpected $schemaArray [.'$AllOf'.allOf]", (path != null ? lpath_32 : null));
                    if (rep != null) rep.addEntry("invalid mandatory prop value [.'$AllOf'.allOf]", (path != null ? lpath_32 : null));
                    return false;
                }
            }
            else if (prop.compareTo("$schema") == 0)
            {
                // handle may $schema property
                // .'$AllOf'.'$schema'
                res = json.isString(pval);
                if (! res)
                {
                    if (rep != null) rep.addEntry("unexpected string [.'$AllOf'.'$schema']", (path != null ? lpath_32 : null));
                    if (rep != null) rep.addEntry("invalid optional prop value [.'$AllOf'.'$schema']", (path != null ? lpath_32 : null));
                    return false;
                }
            }
            else if (prop.compareTo("$id") == 0)
            {
                // handle may $id property
                // .'$AllOf'.'$id'
                res = json.isString(pval);
                if (! res)
                {
                    if (rep != null) rep.addEntry("unexpected string [.'$AllOf'.'$id']", (path != null ? lpath_32 : null));
                    if (rep != null) rep.addEntry("invalid optional prop value [.'$AllOf'.'$id']", (path != null ? lpath_32 : null));
                    return false;
                }
            }
            else if (prop.compareTo("id") == 0)
            {
                // handle may id property
                // .'$AllOf'.id
                res = json.isString(pval);
                if (! res)
                {
                    if (rep != null) rep.addEntry("unexpected string [.'$AllOf'.id]", (path != null ? lpath_32 : null));
                    if (rep != null) rep.addEntry("invalid optional prop value [.'$AllOf'.id]", (path != null ? lpath_32 : null));
                    return false;
                }
            }
            else if (prop.compareTo("$comment") == 0)
            {
                // handle may $comment property
                // .'$AllOf'.'$comment'
                res = json.isString(pval);
                if (! res)
                {
                    if (rep != null) rep.addEntry("unexpected string [.'$AllOf'.'$comment']", (path != null ? lpath_32 : null));
                    if (rep != null) rep.addEntry("invalid optional prop value [.'$AllOf'.'$comment']", (path != null ? lpath_32 : null));
                    return false;
                }
            }
            else if (prop.compareTo("title") == 0)
            {
                // handle may title property
                // .'$AllOf'.title
                res = json.isString(pval);
                if (! res)
                {
                    if (rep != null) rep.addEntry("unexpected string [.'$AllOf'.title]", (path != null ? lpath_32 : null));
                    if (rep != null) rep.addEntry("invalid optional prop value [.'$AllOf'.title]", (path != null ? lpath_32 : null));
                    return false;
                }
            }
            else if (prop.compareTo("default") == 0)
            {
                // handle may default property
                // .'$AllOf'.default
                res = true;
            }
            else if (prop.compareTo("examples") == 0)
            {
                // handle may examples property
                // .'$AllOf'.examples
                res = json.isArray(pval);
                if (! res)
                {
                    if (rep != null) rep.addEntry("not array or unexpected array [.'$AllOf'.examples]", (path != null ? lpath_32 : null));
                    if (rep != null) rep.addEntry("invalid optional prop value [.'$AllOf'.examples]", (path != null ? lpath_32 : null));
                    return false;
                }
            }
            else if (prop.compareTo("description") == 0)
            {
                // handle may description property
                // .'$AllOf'.description
                res = json.isString(pval);
                if (! res)
                {
                    if (rep != null) rep.addEntry("unexpected string [.'$AllOf'.description]", (path != null ? lpath_32 : null));
                    if (rep != null) rep.addEntry("invalid optional prop value [.'$AllOf'.description]", (path != null ? lpath_32 : null));
                    return false;
                }
            }
            else if (prop.compareTo("$defs") == 0)
            {
                // handle may $defs property
                // .'$AllOf'.'$defs'
                res = _jm_obj_12(pval, (path != null ? lpath_32 : null), rep);
                if (! res)
                {
                    if (rep != null) rep.addEntry("unexpected element [.'$AllOf'.'$defs']", (path != null ? lpath_32 : null));
                    if (rep != null) rep.addEntry("invalid optional prop value [.'$AllOf'.'$defs']", (path != null ? lpath_32 : null));
                    return false;
                }
            }
            else if (prop.compareTo("definitions") == 0)
            {
                // handle may definitions property
                // .'$AllOf'.definitions
                res = _jm_obj_13(pval, (path != null ? lpath_32 : null), rep);
                if (! res)
                {
                    if (rep != null) rep.addEntry("unexpected element [.'$AllOf'.definitions]", (path != null ? lpath_32 : null));
                    if (rep != null) rep.addEntry("invalid optional prop value [.'$AllOf'.definitions]", (path != null ? lpath_32 : null));
                    return false;
                }
            }
            else
            {
                if (rep != null) rep.addEntry("unexpected prop [.'$AllOf']", (path != null ? lpath_32 : null));
                return false;
            }
        }
        if (must_count != 1)
        {
            if (rep != null)
            {
                if (! json.objectHasProp(val, "allOf"))
                {
                    if (rep != null) rep.addEntry("missing mandatory prop <allOf> [.'$AllOf']", path);
                }
            }
            return false;
        }
        return true;
    }

    // object .'$AnyOf'.'$defs'
    public boolean _jm_obj_14(Object val, Path path, Report rep)
    {
        if (! json.isObject(val))
        {
            if (rep != null) rep.addEntry("not an object [.'$AnyOf'.'$defs']", path);
            return false;
        }
        boolean res;
        Iterator<String> prop_loop = json.objectIterator(val);
        while (prop_loop.hasNext())
        {
            String prop = prop_loop.next();
            Object pval = json.objectValue(val, prop);
            Path lpath_36 = new Path(prop, path);
            // handle other props
            // .'$AnyOf'.'$defs'.''
            res = json_model_24(pval, (path != null ? lpath_36 : null), rep);
            if (! res)
            {
                if (rep != null) rep.addEntry("unexpected $Schema [.'$AnyOf'.'$defs'.'']", (path != null ? lpath_36 : null));
                return false;
            }
        }
        return true;
    }

    // object .'$AnyOf'.definitions
    public boolean _jm_obj_15(Object val, Path path, Report rep)
    {
        if (! json.isObject(val))
        {
            if (rep != null) rep.addEntry("not an object [.'$AnyOf'.definitions]", path);
            return false;
        }
        boolean res;
        Iterator<String> prop_loop = json.objectIterator(val);
        while (prop_loop.hasNext())
        {
            String prop = prop_loop.next();
            Object pval = json.objectValue(val, prop);
            Path lpath_37 = new Path(prop, path);
            // handle other props
            // .'$AnyOf'.definitions.''
            res = json_model_24(pval, (path != null ? lpath_37 : null), rep);
            if (! res)
            {
                if (rep != null) rep.addEntry("unexpected $Schema [.'$AnyOf'.definitions.'']", (path != null ? lpath_37 : null));
                return false;
            }
        }
        return true;
    }

    // check $AnyOf (.'$AnyOf')
    public boolean json_model_18(Object val, Path path, Report rep)
    {
        // .'$AnyOf'
        if (! json.isObject(val))
        {
            if (rep != null) rep.addEntry("not an object [.'$AnyOf']", path);
            return false;
        }
        boolean res;
        long must_count = 0;
        Iterator<String> prop_loop = json.objectIterator(val);
        while (prop_loop.hasNext())
        {
            String prop = prop_loop.next();
            Object pval = json.objectValue(val, prop);
            Path lpath_35 = new Path(prop, path);
            if (prop.compareTo("anyOf") == 0)
            {
                // handle must anyOf property
                must_count += 1;
                // .'$AnyOf'.anyOf
                res = json_model_4(pval, (path != null ? lpath_35 : null), rep);
                if (! res)
                {
                    if (rep != null) rep.addEntry("unexpected $schemaArray [.'$AnyOf'.anyOf]", (path != null ? lpath_35 : null));
                    if (rep != null) rep.addEntry("invalid mandatory prop value [.'$AnyOf'.anyOf]", (path != null ? lpath_35 : null));
                    return false;
                }
            }
            else if (prop.compareTo("$schema") == 0)
            {
                // handle may $schema property
                // .'$AnyOf'.'$schema'
                res = json.isString(pval);
                if (! res)
                {
                    if (rep != null) rep.addEntry("unexpected string [.'$AnyOf'.'$schema']", (path != null ? lpath_35 : null));
                    if (rep != null) rep.addEntry("invalid optional prop value [.'$AnyOf'.'$schema']", (path != null ? lpath_35 : null));
                    return false;
                }
            }
            else if (prop.compareTo("$id") == 0)
            {
                // handle may $id property
                // .'$AnyOf'.'$id'
                res = json.isString(pval);
                if (! res)
                {
                    if (rep != null) rep.addEntry("unexpected string [.'$AnyOf'.'$id']", (path != null ? lpath_35 : null));
                    if (rep != null) rep.addEntry("invalid optional prop value [.'$AnyOf'.'$id']", (path != null ? lpath_35 : null));
                    return false;
                }
            }
            else if (prop.compareTo("id") == 0)
            {
                // handle may id property
                // .'$AnyOf'.id
                res = json.isString(pval);
                if (! res)
                {
                    if (rep != null) rep.addEntry("unexpected string [.'$AnyOf'.id]", (path != null ? lpath_35 : null));
                    if (rep != null) rep.addEntry("invalid optional prop value [.'$AnyOf'.id]", (path != null ? lpath_35 : null));
                    return false;
                }
            }
            else if (prop.compareTo("$comment") == 0)
            {
                // handle may $comment property
                // .'$AnyOf'.'$comment'
                res = json.isString(pval);
                if (! res)
                {
                    if (rep != null) rep.addEntry("unexpected string [.'$AnyOf'.'$comment']", (path != null ? lpath_35 : null));
                    if (rep != null) rep.addEntry("invalid optional prop value [.'$AnyOf'.'$comment']", (path != null ? lpath_35 : null));
                    return false;
                }
            }
            else if (prop.compareTo("title") == 0)
            {
                // handle may title property
                // .'$AnyOf'.title
                res = json.isString(pval);
                if (! res)
                {
                    if (rep != null) rep.addEntry("unexpected string [.'$AnyOf'.title]", (path != null ? lpath_35 : null));
                    if (rep != null) rep.addEntry("invalid optional prop value [.'$AnyOf'.title]", (path != null ? lpath_35 : null));
                    return false;
                }
            }
            else if (prop.compareTo("default") == 0)
            {
                // handle may default property
                // .'$AnyOf'.default
                res = true;
            }
            else if (prop.compareTo("examples") == 0)
            {
                // handle may examples property
                // .'$AnyOf'.examples
                res = json.isArray(pval);
                if (! res)
                {
                    if (rep != null) rep.addEntry("not array or unexpected array [.'$AnyOf'.examples]", (path != null ? lpath_35 : null));
                    if (rep != null) rep.addEntry("invalid optional prop value [.'$AnyOf'.examples]", (path != null ? lpath_35 : null));
                    return false;
                }
            }
            else if (prop.compareTo("description") == 0)
            {
                // handle may description property
                // .'$AnyOf'.description
                res = json.isString(pval);
                if (! res)
                {
                    if (rep != null) rep.addEntry("unexpected string [.'$AnyOf'.description]", (path != null ? lpath_35 : null));
                    if (rep != null) rep.addEntry("invalid optional prop value [.'$AnyOf'.description]", (path != null ? lpath_35 : null));
                    return false;
                }
            }
            else if (prop.compareTo("$defs") == 0)
            {
                // handle may $defs property
                // .'$AnyOf'.'$defs'
                res = _jm_obj_14(pval, (path != null ? lpath_35 : null), rep);
                if (! res)
                {
                    if (rep != null) rep.addEntry("unexpected element [.'$AnyOf'.'$defs']", (path != null ? lpath_35 : null));
                    if (rep != null) rep.addEntry("invalid optional prop value [.'$AnyOf'.'$defs']", (path != null ? lpath_35 : null));
                    return false;
                }
            }
            else if (prop.compareTo("definitions") == 0)
            {
                // handle may definitions property
                // .'$AnyOf'.definitions
                res = _jm_obj_15(pval, (path != null ? lpath_35 : null), rep);
                if (! res)
                {
                    if (rep != null) rep.addEntry("unexpected element [.'$AnyOf'.definitions]", (path != null ? lpath_35 : null));
                    if (rep != null) rep.addEntry("invalid optional prop value [.'$AnyOf'.definitions]", (path != null ? lpath_35 : null));
                    return false;
                }
            }
            else
            {
                if (rep != null) rep.addEntry("unexpected prop [.'$AnyOf']", (path != null ? lpath_35 : null));
                return false;
            }
        }
        if (must_count != 1)
        {
            if (rep != null)
            {
                if (! json.objectHasProp(val, "anyOf"))
                {
                    if (rep != null) rep.addEntry("missing mandatory prop <anyOf> [.'$AnyOf']", path);
                }
            }
            return false;
        }
        return true;
    }

    // object .'$OneOf'.'$defs'
    public boolean _jm_obj_16(Object val, Path path, Report rep)
    {
        if (! json.isObject(val))
        {
            if (rep != null) rep.addEntry("not an object [.'$OneOf'.'$defs']", path);
            return false;
        }
        boolean res;
        Iterator<String> prop_loop = json.objectIterator(val);
        while (prop_loop.hasNext())
        {
            String prop = prop_loop.next();
            Object pval = json.objectValue(val, prop);
            Path lpath_39 = new Path(prop, path);
            // handle other props
            // .'$OneOf'.'$defs'.''
            res = json_model_24(pval, (path != null ? lpath_39 : null), rep);
            if (! res)
            {
                if (rep != null) rep.addEntry("unexpected $Schema [.'$OneOf'.'$defs'.'']", (path != null ? lpath_39 : null));
                return false;
            }
        }
        return true;
    }

    // object .'$OneOf'.definitions
    public boolean _jm_obj_17(Object val, Path path, Report rep)
    {
        if (! json.isObject(val))
        {
            if (rep != null) rep.addEntry("not an object [.'$OneOf'.definitions]", path);
            return false;
        }
        boolean res;
        Iterator<String> prop_loop = json.objectIterator(val);
        while (prop_loop.hasNext())
        {
            String prop = prop_loop.next();
            Object pval = json.objectValue(val, prop);
            Path lpath_40 = new Path(prop, path);
            // handle other props
            // .'$OneOf'.definitions.''
            res = json_model_24(pval, (path != null ? lpath_40 : null), rep);
            if (! res)
            {
                if (rep != null) rep.addEntry("unexpected $Schema [.'$OneOf'.definitions.'']", (path != null ? lpath_40 : null));
                return false;
            }
        }
        return true;
    }

    // check $OneOf (.'$OneOf')
    public boolean json_model_19(Object val, Path path, Report rep)
    {
        // .'$OneOf'
        if (! json.isObject(val))
        {
            if (rep != null) rep.addEntry("not an object [.'$OneOf']", path);
            return false;
        }
        boolean res;
        long must_count = 0;
        Iterator<String> prop_loop = json.objectIterator(val);
        while (prop_loop.hasNext())
        {
            String prop = prop_loop.next();
            Object pval = json.objectValue(val, prop);
            Path lpath_38 = new Path(prop, path);
            if (prop.compareTo("oneOf") == 0)
            {
                // handle must oneOf property
                must_count += 1;
                // .'$OneOf'.oneOf
                res = json_model_4(pval, (path != null ? lpath_38 : null), rep);
                if (! res)
                {
                    if (rep != null) rep.addEntry("unexpected $schemaArray [.'$OneOf'.oneOf]", (path != null ? lpath_38 : null));
                    if (rep != null) rep.addEntry("invalid mandatory prop value [.'$OneOf'.oneOf]", (path != null ? lpath_38 : null));
                    return false;
                }
            }
            else if (prop.compareTo("$schema") == 0)
            {
                // handle may $schema property
                // .'$OneOf'.'$schema'
                res = json.isString(pval);
                if (! res)
                {
                    if (rep != null) rep.addEntry("unexpected string [.'$OneOf'.'$schema']", (path != null ? lpath_38 : null));
                    if (rep != null) rep.addEntry("invalid optional prop value [.'$OneOf'.'$schema']", (path != null ? lpath_38 : null));
                    return false;
                }
            }
            else if (prop.compareTo("$id") == 0)
            {
                // handle may $id property
                // .'$OneOf'.'$id'
                res = json.isString(pval);
                if (! res)
                {
                    if (rep != null) rep.addEntry("unexpected string [.'$OneOf'.'$id']", (path != null ? lpath_38 : null));
                    if (rep != null) rep.addEntry("invalid optional prop value [.'$OneOf'.'$id']", (path != null ? lpath_38 : null));
                    return false;
                }
            }
            else if (prop.compareTo("id") == 0)
            {
                // handle may id property
                // .'$OneOf'.id
                res = json.isString(pval);
                if (! res)
                {
                    if (rep != null) rep.addEntry("unexpected string [.'$OneOf'.id]", (path != null ? lpath_38 : null));
                    if (rep != null) rep.addEntry("invalid optional prop value [.'$OneOf'.id]", (path != null ? lpath_38 : null));
                    return false;
                }
            }
            else if (prop.compareTo("$comment") == 0)
            {
                // handle may $comment property
                // .'$OneOf'.'$comment'
                res = json.isString(pval);
                if (! res)
                {
                    if (rep != null) rep.addEntry("unexpected string [.'$OneOf'.'$comment']", (path != null ? lpath_38 : null));
                    if (rep != null) rep.addEntry("invalid optional prop value [.'$OneOf'.'$comment']", (path != null ? lpath_38 : null));
                    return false;
                }
            }
            else if (prop.compareTo("title") == 0)
            {
                // handle may title property
                // .'$OneOf'.title
                res = json.isString(pval);
                if (! res)
                {
                    if (rep != null) rep.addEntry("unexpected string [.'$OneOf'.title]", (path != null ? lpath_38 : null));
                    if (rep != null) rep.addEntry("invalid optional prop value [.'$OneOf'.title]", (path != null ? lpath_38 : null));
                    return false;
                }
            }
            else if (prop.compareTo("default") == 0)
            {
                // handle may default property
                // .'$OneOf'.default
                res = true;
            }
            else if (prop.compareTo("examples") == 0)
            {
                // handle may examples property
                // .'$OneOf'.examples
                res = json.isArray(pval);
                if (! res)
                {
                    if (rep != null) rep.addEntry("not array or unexpected array [.'$OneOf'.examples]", (path != null ? lpath_38 : null));
                    if (rep != null) rep.addEntry("invalid optional prop value [.'$OneOf'.examples]", (path != null ? lpath_38 : null));
                    return false;
                }
            }
            else if (prop.compareTo("description") == 0)
            {
                // handle may description property
                // .'$OneOf'.description
                res = json.isString(pval);
                if (! res)
                {
                    if (rep != null) rep.addEntry("unexpected string [.'$OneOf'.description]", (path != null ? lpath_38 : null));
                    if (rep != null) rep.addEntry("invalid optional prop value [.'$OneOf'.description]", (path != null ? lpath_38 : null));
                    return false;
                }
            }
            else if (prop.compareTo("$defs") == 0)
            {
                // handle may $defs property
                // .'$OneOf'.'$defs'
                res = _jm_obj_16(pval, (path != null ? lpath_38 : null), rep);
                if (! res)
                {
                    if (rep != null) rep.addEntry("unexpected element [.'$OneOf'.'$defs']", (path != null ? lpath_38 : null));
                    if (rep != null) rep.addEntry("invalid optional prop value [.'$OneOf'.'$defs']", (path != null ? lpath_38 : null));
                    return false;
                }
            }
            else if (prop.compareTo("definitions") == 0)
            {
                // handle may definitions property
                // .'$OneOf'.definitions
                res = _jm_obj_17(pval, (path != null ? lpath_38 : null), rep);
                if (! res)
                {
                    if (rep != null) rep.addEntry("unexpected element [.'$OneOf'.definitions]", (path != null ? lpath_38 : null));
                    if (rep != null) rep.addEntry("invalid optional prop value [.'$OneOf'.definitions]", (path != null ? lpath_38 : null));
                    return false;
                }
            }
            else
            {
                if (rep != null) rep.addEntry("unexpected prop [.'$OneOf']", (path != null ? lpath_38 : null));
                return false;
            }
        }
        if (must_count != 1)
        {
            if (rep != null)
            {
                if (! json.objectHasProp(val, "oneOf"))
                {
                    if (rep != null) rep.addEntry("missing mandatory prop <oneOf> [.'$OneOf']", path);
                }
            }
            return false;
        }
        return true;
    }

    // object .'$Enum'.'$defs'
    public boolean _jm_obj_18(Object val, Path path, Report rep)
    {
        if (! json.isObject(val))
        {
            if (rep != null) rep.addEntry("not an object [.'$Enum'.'$defs']", path);
            return false;
        }
        boolean res;
        Iterator<String> prop_loop = json.objectIterator(val);
        while (prop_loop.hasNext())
        {
            String prop = prop_loop.next();
            Object pval = json.objectValue(val, prop);
            Path lpath_42 = new Path(prop, path);
            // handle other props
            // .'$Enum'.'$defs'.''
            res = json_model_24(pval, (path != null ? lpath_42 : null), rep);
            if (! res)
            {
                if (rep != null) rep.addEntry("unexpected $Schema [.'$Enum'.'$defs'.'']", (path != null ? lpath_42 : null));
                return false;
            }
        }
        return true;
    }

    // object .'$Enum'.definitions
    public boolean _jm_obj_19(Object val, Path path, Report rep)
    {
        if (! json.isObject(val))
        {
            if (rep != null) rep.addEntry("not an object [.'$Enum'.definitions]", path);
            return false;
        }
        boolean res;
        Iterator<String> prop_loop = json.objectIterator(val);
        while (prop_loop.hasNext())
        {
            String prop = prop_loop.next();
            Object pval = json.objectValue(val, prop);
            Path lpath_43 = new Path(prop, path);
            // handle other props
            // .'$Enum'.definitions.''
            res = json_model_24(pval, (path != null ? lpath_43 : null), rep);
            if (! res)
            {
                if (rep != null) rep.addEntry("unexpected $Schema [.'$Enum'.definitions.'']", (path != null ? lpath_43 : null));
                return false;
            }
        }
        return true;
    }

    // check $Enum (.'$Enum')
    public boolean json_model_20(Object val, Path path, Report rep)
    {
        // .'$Enum'
        if (! json.isObject(val))
        {
            if (rep != null) rep.addEntry("not an object [.'$Enum']", path);
            return false;
        }
        boolean res;
        long must_count = 0;
        Iterator<String> prop_loop = json.objectIterator(val);
        while (prop_loop.hasNext())
        {
            String prop = prop_loop.next();
            Object pval = json.objectValue(val, prop);
            Path lpath_41 = new Path(prop, path);
            if (prop.compareTo("enum") == 0)
            {
                // handle must enum property
                must_count += 1;
                // .'$Enum'.enum
                res = json_model_3(pval, (path != null ? lpath_41 : null), rep);
                if (! res)
                {
                    if (rep != null) rep.addEntry("unexpected $enum [.'$Enum'.enum]", (path != null ? lpath_41 : null));
                    if (rep != null) rep.addEntry("invalid mandatory prop value [.'$Enum'.enum]", (path != null ? lpath_41 : null));
                    return false;
                }
            }
            else if (prop.compareTo("$schema") == 0)
            {
                // handle may $schema property
                // .'$Enum'.'$schema'
                res = json.isString(pval);
                if (! res)
                {
                    if (rep != null) rep.addEntry("unexpected string [.'$Enum'.'$schema']", (path != null ? lpath_41 : null));
                    if (rep != null) rep.addEntry("invalid optional prop value [.'$Enum'.'$schema']", (path != null ? lpath_41 : null));
                    return false;
                }
            }
            else if (prop.compareTo("$id") == 0)
            {
                // handle may $id property
                // .'$Enum'.'$id'
                res = json.isString(pval);
                if (! res)
                {
                    if (rep != null) rep.addEntry("unexpected string [.'$Enum'.'$id']", (path != null ? lpath_41 : null));
                    if (rep != null) rep.addEntry("invalid optional prop value [.'$Enum'.'$id']", (path != null ? lpath_41 : null));
                    return false;
                }
            }
            else if (prop.compareTo("id") == 0)
            {
                // handle may id property
                // .'$Enum'.id
                res = json.isString(pval);
                if (! res)
                {
                    if (rep != null) rep.addEntry("unexpected string [.'$Enum'.id]", (path != null ? lpath_41 : null));
                    if (rep != null) rep.addEntry("invalid optional prop value [.'$Enum'.id]", (path != null ? lpath_41 : null));
                    return false;
                }
            }
            else if (prop.compareTo("$comment") == 0)
            {
                // handle may $comment property
                // .'$Enum'.'$comment'
                res = json.isString(pval);
                if (! res)
                {
                    if (rep != null) rep.addEntry("unexpected string [.'$Enum'.'$comment']", (path != null ? lpath_41 : null));
                    if (rep != null) rep.addEntry("invalid optional prop value [.'$Enum'.'$comment']", (path != null ? lpath_41 : null));
                    return false;
                }
            }
            else if (prop.compareTo("title") == 0)
            {
                // handle may title property
                // .'$Enum'.title
                res = json.isString(pval);
                if (! res)
                {
                    if (rep != null) rep.addEntry("unexpected string [.'$Enum'.title]", (path != null ? lpath_41 : null));
                    if (rep != null) rep.addEntry("invalid optional prop value [.'$Enum'.title]", (path != null ? lpath_41 : null));
                    return false;
                }
            }
            else if (prop.compareTo("default") == 0)
            {
                // handle may default property
                // .'$Enum'.default
                res = true;
            }
            else if (prop.compareTo("examples") == 0)
            {
                // handle may examples property
                // .'$Enum'.examples
                res = json.isArray(pval);
                if (! res)
                {
                    if (rep != null) rep.addEntry("not array or unexpected array [.'$Enum'.examples]", (path != null ? lpath_41 : null));
                    if (rep != null) rep.addEntry("invalid optional prop value [.'$Enum'.examples]", (path != null ? lpath_41 : null));
                    return false;
                }
            }
            else if (prop.compareTo("description") == 0)
            {
                // handle may description property
                // .'$Enum'.description
                res = json.isString(pval);
                if (! res)
                {
                    if (rep != null) rep.addEntry("unexpected string [.'$Enum'.description]", (path != null ? lpath_41 : null));
                    if (rep != null) rep.addEntry("invalid optional prop value [.'$Enum'.description]", (path != null ? lpath_41 : null));
                    return false;
                }
            }
            else if (prop.compareTo("$defs") == 0)
            {
                // handle may $defs property
                // .'$Enum'.'$defs'
                res = _jm_obj_18(pval, (path != null ? lpath_41 : null), rep);
                if (! res)
                {
                    if (rep != null) rep.addEntry("unexpected element [.'$Enum'.'$defs']", (path != null ? lpath_41 : null));
                    if (rep != null) rep.addEntry("invalid optional prop value [.'$Enum'.'$defs']", (path != null ? lpath_41 : null));
                    return false;
                }
            }
            else if (prop.compareTo("definitions") == 0)
            {
                // handle may definitions property
                // .'$Enum'.definitions
                res = _jm_obj_19(pval, (path != null ? lpath_41 : null), rep);
                if (! res)
                {
                    if (rep != null) rep.addEntry("unexpected element [.'$Enum'.definitions]", (path != null ? lpath_41 : null));
                    if (rep != null) rep.addEntry("invalid optional prop value [.'$Enum'.definitions]", (path != null ? lpath_41 : null));
                    return false;
                }
            }
            else
            {
                if (rep != null) rep.addEntry("unexpected prop [.'$Enum']", (path != null ? lpath_41 : null));
                return false;
            }
        }
        if (must_count != 1)
        {
            if (rep != null)
            {
                if (! json.objectHasProp(val, "enum"))
                {
                    if (rep != null) rep.addEntry("missing mandatory prop <enum> [.'$Enum']", path);
                }
            }
            return false;
        }
        return true;
    }

    // object .'$Const'.'$defs'
    public boolean _jm_obj_20(Object val, Path path, Report rep)
    {
        if (! json.isObject(val))
        {
            if (rep != null) rep.addEntry("not an object [.'$Const'.'$defs']", path);
            return false;
        }
        boolean res;
        Iterator<String> prop_loop = json.objectIterator(val);
        while (prop_loop.hasNext())
        {
            String prop = prop_loop.next();
            Object pval = json.objectValue(val, prop);
            Path lpath_45 = new Path(prop, path);
            // handle other props
            // .'$Const'.'$defs'.''
            res = json_model_24(pval, (path != null ? lpath_45 : null), rep);
            if (! res)
            {
                if (rep != null) rep.addEntry("unexpected $Schema [.'$Const'.'$defs'.'']", (path != null ? lpath_45 : null));
                return false;
            }
        }
        return true;
    }

    // object .'$Const'.definitions
    public boolean _jm_obj_21(Object val, Path path, Report rep)
    {
        if (! json.isObject(val))
        {
            if (rep != null) rep.addEntry("not an object [.'$Const'.definitions]", path);
            return false;
        }
        boolean res;
        Iterator<String> prop_loop = json.objectIterator(val);
        while (prop_loop.hasNext())
        {
            String prop = prop_loop.next();
            Object pval = json.objectValue(val, prop);
            Path lpath_46 = new Path(prop, path);
            // handle other props
            // .'$Const'.definitions.''
            res = json_model_24(pval, (path != null ? lpath_46 : null), rep);
            if (! res)
            {
                if (rep != null) rep.addEntry("unexpected $Schema [.'$Const'.definitions.'']", (path != null ? lpath_46 : null));
                return false;
            }
        }
        return true;
    }

    // check $Const (.'$Const')
    public boolean json_model_21(Object val, Path path, Report rep)
    {
        // .'$Const'
        if (! json.isObject(val))
        {
            if (rep != null) rep.addEntry("not an object [.'$Const']", path);
            return false;
        }
        boolean res;
        long must_count = 0;
        Iterator<String> prop_loop = json.objectIterator(val);
        while (prop_loop.hasNext())
        {
            String prop = prop_loop.next();
            Object pval = json.objectValue(val, prop);
            Path lpath_44 = new Path(prop, path);
            if (prop.compareTo("const") == 0)
            {
                // handle must const property
                must_count += 1;
                // .'$Const'.const
                res = json_model_2(pval, (path != null ? lpath_44 : null), rep);
                if (! res)
                {
                    if (rep != null) rep.addEntry("unexpected $const [.'$Const'.const]", (path != null ? lpath_44 : null));
                    if (rep != null) rep.addEntry("invalid mandatory prop value [.'$Const'.const]", (path != null ? lpath_44 : null));
                    return false;
                }
            }
            else if (prop.compareTo("$schema") == 0)
            {
                // handle may $schema property
                // .'$Const'.'$schema'
                res = json.isString(pval);
                if (! res)
                {
                    if (rep != null) rep.addEntry("unexpected string [.'$Const'.'$schema']", (path != null ? lpath_44 : null));
                    if (rep != null) rep.addEntry("invalid optional prop value [.'$Const'.'$schema']", (path != null ? lpath_44 : null));
                    return false;
                }
            }
            else if (prop.compareTo("$id") == 0)
            {
                // handle may $id property
                // .'$Const'.'$id'
                res = json.isString(pval);
                if (! res)
                {
                    if (rep != null) rep.addEntry("unexpected string [.'$Const'.'$id']", (path != null ? lpath_44 : null));
                    if (rep != null) rep.addEntry("invalid optional prop value [.'$Const'.'$id']", (path != null ? lpath_44 : null));
                    return false;
                }
            }
            else if (prop.compareTo("id") == 0)
            {
                // handle may id property
                // .'$Const'.id
                res = json.isString(pval);
                if (! res)
                {
                    if (rep != null) rep.addEntry("unexpected string [.'$Const'.id]", (path != null ? lpath_44 : null));
                    if (rep != null) rep.addEntry("invalid optional prop value [.'$Const'.id]", (path != null ? lpath_44 : null));
                    return false;
                }
            }
            else if (prop.compareTo("$comment") == 0)
            {
                // handle may $comment property
                // .'$Const'.'$comment'
                res = json.isString(pval);
                if (! res)
                {
                    if (rep != null) rep.addEntry("unexpected string [.'$Const'.'$comment']", (path != null ? lpath_44 : null));
                    if (rep != null) rep.addEntry("invalid optional prop value [.'$Const'.'$comment']", (path != null ? lpath_44 : null));
                    return false;
                }
            }
            else if (prop.compareTo("title") == 0)
            {
                // handle may title property
                // .'$Const'.title
                res = json.isString(pval);
                if (! res)
                {
                    if (rep != null) rep.addEntry("unexpected string [.'$Const'.title]", (path != null ? lpath_44 : null));
                    if (rep != null) rep.addEntry("invalid optional prop value [.'$Const'.title]", (path != null ? lpath_44 : null));
                    return false;
                }
            }
            else if (prop.compareTo("default") == 0)
            {
                // handle may default property
                // .'$Const'.default
                res = true;
            }
            else if (prop.compareTo("examples") == 0)
            {
                // handle may examples property
                // .'$Const'.examples
                res = json.isArray(pval);
                if (! res)
                {
                    if (rep != null) rep.addEntry("not array or unexpected array [.'$Const'.examples]", (path != null ? lpath_44 : null));
                    if (rep != null) rep.addEntry("invalid optional prop value [.'$Const'.examples]", (path != null ? lpath_44 : null));
                    return false;
                }
            }
            else if (prop.compareTo("description") == 0)
            {
                // handle may description property
                // .'$Const'.description
                res = json.isString(pval);
                if (! res)
                {
                    if (rep != null) rep.addEntry("unexpected string [.'$Const'.description]", (path != null ? lpath_44 : null));
                    if (rep != null) rep.addEntry("invalid optional prop value [.'$Const'.description]", (path != null ? lpath_44 : null));
                    return false;
                }
            }
            else if (prop.compareTo("$defs") == 0)
            {
                // handle may $defs property
                // .'$Const'.'$defs'
                res = _jm_obj_20(pval, (path != null ? lpath_44 : null), rep);
                if (! res)
                {
                    if (rep != null) rep.addEntry("unexpected element [.'$Const'.'$defs']", (path != null ? lpath_44 : null));
                    if (rep != null) rep.addEntry("invalid optional prop value [.'$Const'.'$defs']", (path != null ? lpath_44 : null));
                    return false;
                }
            }
            else if (prop.compareTo("definitions") == 0)
            {
                // handle may definitions property
                // .'$Const'.definitions
                res = _jm_obj_21(pval, (path != null ? lpath_44 : null), rep);
                if (! res)
                {
                    if (rep != null) rep.addEntry("unexpected element [.'$Const'.definitions]", (path != null ? lpath_44 : null));
                    if (rep != null) rep.addEntry("invalid optional prop value [.'$Const'.definitions]", (path != null ? lpath_44 : null));
                    return false;
                }
            }
            else
            {
                if (rep != null) rep.addEntry("unexpected prop [.'$Const']", (path != null ? lpath_44 : null));
                return false;
            }
        }
        if (must_count != 1)
        {
            if (rep != null)
            {
                if (! json.objectHasProp(val, "const"))
                {
                    if (rep != null) rep.addEntry("missing mandatory prop <const> [.'$Const']", path);
                }
            }
            return false;
        }
        return true;
    }

    // object .'$Ref'.'$defs'
    public boolean _jm_obj_22(Object val, Path path, Report rep)
    {
        if (! json.isObject(val))
        {
            if (rep != null) rep.addEntry("not an object [.'$Ref'.'$defs']", path);
            return false;
        }
        boolean res;
        Iterator<String> prop_loop = json.objectIterator(val);
        while (prop_loop.hasNext())
        {
            String prop = prop_loop.next();
            Object pval = json.objectValue(val, prop);
            Path lpath_48 = new Path(prop, path);
            // handle other props
            // .'$Ref'.'$defs'.''
            res = json_model_24(pval, (path != null ? lpath_48 : null), rep);
            if (! res)
            {
                if (rep != null) rep.addEntry("unexpected $Schema [.'$Ref'.'$defs'.'']", (path != null ? lpath_48 : null));
                return false;
            }
        }
        return true;
    }

    // object .'$Ref'.definitions
    public boolean _jm_obj_23(Object val, Path path, Report rep)
    {
        if (! json.isObject(val))
        {
            if (rep != null) rep.addEntry("not an object [.'$Ref'.definitions]", path);
            return false;
        }
        boolean res;
        Iterator<String> prop_loop = json.objectIterator(val);
        while (prop_loop.hasNext())
        {
            String prop = prop_loop.next();
            Object pval = json.objectValue(val, prop);
            Path lpath_49 = new Path(prop, path);
            // handle other props
            // .'$Ref'.definitions.''
            res = json_model_24(pval, (path != null ? lpath_49 : null), rep);
            if (! res)
            {
                if (rep != null) rep.addEntry("unexpected $Schema [.'$Ref'.definitions.'']", (path != null ? lpath_49 : null));
                return false;
            }
        }
        return true;
    }

    // check $Ref (.'$Ref')
    public boolean json_model_22(Object val, Path path, Report rep)
    {
        // .'$Ref'
        if (! json.isObject(val))
        {
            if (rep != null) rep.addEntry("not an object [.'$Ref']", path);
            return false;
        }
        boolean res;
        long must_count = 0;
        Iterator<String> prop_loop = json.objectIterator(val);
        while (prop_loop.hasNext())
        {
            String prop = prop_loop.next();
            Object pval = json.objectValue(val, prop);
            Path lpath_47 = new Path(prop, path);
            if (prop.compareTo("$ref") == 0)
            {
                // handle must $ref property
                must_count += 1;
                // .'$Ref'.'$ref'
                res = json.isString(pval) && rt.is_valid_url(json.asString(pval));
                if (! res)
                {
                    if (rep != null) rep.addEntry("unexpected $URL [.'$Ref'.'$ref']", (path != null ? lpath_47 : null));
                    if (rep != null) rep.addEntry("invalid mandatory prop value [.'$Ref'.'$ref']", (path != null ? lpath_47 : null));
                    return false;
                }
            }
            else if (prop.compareTo("$schema") == 0)
            {
                // handle may $schema property
                // .'$Ref'.'$schema'
                res = json.isString(pval);
                if (! res)
                {
                    if (rep != null) rep.addEntry("unexpected string [.'$Ref'.'$schema']", (path != null ? lpath_47 : null));
                    if (rep != null) rep.addEntry("invalid optional prop value [.'$Ref'.'$schema']", (path != null ? lpath_47 : null));
                    return false;
                }
            }
            else if (prop.compareTo("$id") == 0)
            {
                // handle may $id property
                // .'$Ref'.'$id'
                res = json.isString(pval);
                if (! res)
                {
                    if (rep != null) rep.addEntry("unexpected string [.'$Ref'.'$id']", (path != null ? lpath_47 : null));
                    if (rep != null) rep.addEntry("invalid optional prop value [.'$Ref'.'$id']", (path != null ? lpath_47 : null));
                    return false;
                }
            }
            else if (prop.compareTo("id") == 0)
            {
                // handle may id property
                // .'$Ref'.id
                res = json.isString(pval);
                if (! res)
                {
                    if (rep != null) rep.addEntry("unexpected string [.'$Ref'.id]", (path != null ? lpath_47 : null));
                    if (rep != null) rep.addEntry("invalid optional prop value [.'$Ref'.id]", (path != null ? lpath_47 : null));
                    return false;
                }
            }
            else if (prop.compareTo("$comment") == 0)
            {
                // handle may $comment property
                // .'$Ref'.'$comment'
                res = json.isString(pval);
                if (! res)
                {
                    if (rep != null) rep.addEntry("unexpected string [.'$Ref'.'$comment']", (path != null ? lpath_47 : null));
                    if (rep != null) rep.addEntry("invalid optional prop value [.'$Ref'.'$comment']", (path != null ? lpath_47 : null));
                    return false;
                }
            }
            else if (prop.compareTo("title") == 0)
            {
                // handle may title property
                // .'$Ref'.title
                res = json.isString(pval);
                if (! res)
                {
                    if (rep != null) rep.addEntry("unexpected string [.'$Ref'.title]", (path != null ? lpath_47 : null));
                    if (rep != null) rep.addEntry("invalid optional prop value [.'$Ref'.title]", (path != null ? lpath_47 : null));
                    return false;
                }
            }
            else if (prop.compareTo("default") == 0)
            {
                // handle may default property
                // .'$Ref'.default
                res = true;
            }
            else if (prop.compareTo("examples") == 0)
            {
                // handle may examples property
                // .'$Ref'.examples
                res = json.isArray(pval);
                if (! res)
                {
                    if (rep != null) rep.addEntry("not array or unexpected array [.'$Ref'.examples]", (path != null ? lpath_47 : null));
                    if (rep != null) rep.addEntry("invalid optional prop value [.'$Ref'.examples]", (path != null ? lpath_47 : null));
                    return false;
                }
            }
            else if (prop.compareTo("description") == 0)
            {
                // handle may description property
                // .'$Ref'.description
                res = json.isString(pval);
                if (! res)
                {
                    if (rep != null) rep.addEntry("unexpected string [.'$Ref'.description]", (path != null ? lpath_47 : null));
                    if (rep != null) rep.addEntry("invalid optional prop value [.'$Ref'.description]", (path != null ? lpath_47 : null));
                    return false;
                }
            }
            else if (prop.compareTo("$defs") == 0)
            {
                // handle may $defs property
                // .'$Ref'.'$defs'
                res = _jm_obj_22(pval, (path != null ? lpath_47 : null), rep);
                if (! res)
                {
                    if (rep != null) rep.addEntry("unexpected element [.'$Ref'.'$defs']", (path != null ? lpath_47 : null));
                    if (rep != null) rep.addEntry("invalid optional prop value [.'$Ref'.'$defs']", (path != null ? lpath_47 : null));
                    return false;
                }
            }
            else if (prop.compareTo("definitions") == 0)
            {
                // handle may definitions property
                // .'$Ref'.definitions
                res = _jm_obj_23(pval, (path != null ? lpath_47 : null), rep);
                if (! res)
                {
                    if (rep != null) rep.addEntry("unexpected element [.'$Ref'.definitions]", (path != null ? lpath_47 : null));
                    if (rep != null) rep.addEntry("invalid optional prop value [.'$Ref'.definitions]", (path != null ? lpath_47 : null));
                    return false;
                }
            }
            else
            {
                if (rep != null) rep.addEntry("unexpected prop [.'$Ref']", (path != null ? lpath_47 : null));
                return false;
            }
        }
        if (must_count != 1)
        {
            if (rep != null)
            {
                if (! json.objectHasProp(val, "$ref"))
                {
                    if (rep != null) rep.addEntry("missing mandatory prop <$ref> [.'$Ref']", path);
                }
            }
            return false;
        }
        return true;
    }


    // check $ObjectSchema (.'$ObjectSchema')
    public boolean json_model_23(Object val, Path path, Report rep)
    {
        boolean res;
        // we could use ^ instead of | below
        // .'$ObjectSchema'
        boolean iso_0 = json.isObject(val);
        res = iso_0;
        if (res)
        {
            if (json.objectHasProp(val, "type"))
            {
                Object tag_0 = json.objectValue(val, "type");
                Checker fun_0 = _jm_map_0_cmap.get(tag_0);
                if (fun_0 != null)
                {
                    res = fun_0.call(val, path, rep);
                }
                else
                {
                    res = false;
                    if (rep != null) rep.addEntry("tag <type> value not found [.'$ObjectSchema'.'|']", path);
                }
            }
            else
            {
                res = false;
                if (rep != null) rep.addEntry("tag prop <type> is missing [.'$ObjectSchema'.'|']", path);
            }
        }
        else
        {
            if (rep != null) rep.addEntry("value is not an object [.'$ObjectSchema'.'|']", path);
        }
        return res || json_model_9(val, path, rep) || json_model_21(val, path, rep) || json_model_20(val, path, rep) || json_model_17(val, path, rep) || json_model_18(val, path, rep) || json_model_19(val, path, rep) || json_model_22(val, path, rep);
    }

    // check $Schema (.'$Schema')
    public boolean json_model_24(Object val, Path path, Report rep)
    {
        // .'$Schema'
        // .'$Schema'.'|'.0
        boolean res = json.isBoolean(val);
        if (! res)
        {
            if (rep != null) rep.addEntry("not a bool [.'$Schema'.'|'.0]", path);
        }
        if (! res)
        {
            // .'$Schema'.'|'.1
            res = json_model_23(val, path, rep);
            if (! res)
            {
                if (rep != null) rep.addEntry("unexpected $ObjectSchema [.'$Schema'.'|'.1]", path);
            }
        }
        if (res)
        {
            if (rep != null) rep.clearEntries();
        }
        else
        {
            if (rep != null) rep.addEntry("no model matched [.'$Schema'.'|']", path);
        }
        return res;
    }

    // object .'$RootSchema'.'&'.0
    public boolean _jm_obj_24(Object val, Path path, Report rep)
    {
        // check open must/may only props
        if (! json.isObject(val))
        {
            if (rep != null) rep.addEntry("not an object [.'$RootSchema'.'&'.0]", path);
            return false;
        }
        Path lpath;
        Object pval;
        boolean res;
        if (! ((pval = json.objectValue(val, "$schema")) != null))
        {
            if (rep != null) rep.addEntry("missing mandatory prop <$schema> [.'$RootSchema'.'&'.0]", path);
            return false;
        }
        lpath = new Path("$schema", path);
        // .'$RootSchema'.'&'.0.'$schema'
        res = json.isString(pval);
        if (! res)
        {
            if (rep != null) rep.addEntry("unexpected string [.'$RootSchema'.'&'.0.'$schema']", (path != null ? lpath : null));
            if (rep != null) rep.addEntry("unexpected value for mandatory prop <$schema> [.'$RootSchema'.'&'.0]", (path != null ? lpath : null));
            return false;
        }
        return true;
    }

    // check $RootSchema (.'$RootSchema')
    public boolean json_model_25(Object val, Path path, Report rep)
    {
        // keyword $schema is mandatory at the root, and optional elsewhere
        // .'$RootSchema'
        boolean res = true;
        if (res)
        {
            // .'$RootSchema'.'&'.0
            res = _jm_obj_24(val, path, rep);
            if (! res)
            {
                if (rep != null) rep.addEntry("unexpected element [.'$RootSchema'.'&'.0]", path);
            }
            if (res)
            {
                // .'$RootSchema'.'&'.1
                res = json_model_23(val, path, rep);
                if (! res)
                {
                    if (rep != null) rep.addEntry("unexpected $ObjectSchema [.'$RootSchema'.'&'.1]", path);
                }
            }
        }
        if (res)
        {
            if (rep != null) rep.clearEntries();
        }
        else
        {
            if (rep != null) rep.addEntry("not all model match [.'$RootSchema'.'&']", path);
        }
        return res;
    }

    // check $ (.)
    public boolean json_model_1(Object val, Path path, Report rep)
    {
        // .
        boolean res = json_model_25(val, path, rep);
        if (! res)
        {
            if (rep != null) rep.addEntry("unexpected $RootSchema [.]", path);
        }
        return res;
    }


    public void init(JSON json)
    {
        if (!initialized)
        {
            try {
            _jm_cst_0_set = new HashSet<Object>();
            _jm_cst_0_set.add(json.safeJSON("\"uri\""));
            _jm_cst_0_set.add(json.safeJSON("\"uri-reference\""));
            _jm_cst_0_set.add(json.safeJSON("\"iri\""));
            _jm_cst_0_set.add(json.safeJSON("\"iri-reference\""));
            _jm_cst_0_set.add(json.safeJSON("\"date\""));
            _jm_cst_0_set.add(json.safeJSON("\"time\""));
            _jm_cst_0_set.add(json.safeJSON("\"date-time\""));
            _jm_cst_0_set.add(json.safeJSON("\"ipv4\""));
            _jm_cst_0_set.add(json.safeJSON("\"ipv6\""));
            _jm_cst_0_set.add(json.safeJSON("\"regex\""));
            _jm_cst_0_set.add(json.safeJSON("\"uuid\""));
            _jm_cst_0_set.add(json.safeJSON("\"hostname\""));
            _jm_cst_0_set.add(json.safeJSON("\"email\""));
            _jm_cst_0_set.add(json.safeJSON("\"idn-hostname\""));
            _jm_cst_0_set.add(json.safeJSON("\"idn-email\""));
            _jm_cst_0_set.add(json.safeJSON("\"duration\""));
            _jm_cst_0_set.add(json.safeJSON("\"int32\""));
            _jm_cst_0_set.add(json.safeJSON("\"int64\""));
            _jm_cst_0_set.add(json.safeJSON("\"uint\""));
            _jm_cst_0_set.add(json.safeJSON("\"uint32\""));
            _jm_cst_0_set.add(json.safeJSON("\"uint64\""));
            _jm_cst_0_set.add(json.safeJSON("\"json-pointer\""));
            _jm_cst_0_set.add(json.safeJSON("\"relative-json-pointer\""));
            _jm_cst_0_set.add(json.safeJSON("\"byte\""));
            _jm_cst_0_set.add(json.safeJSON("\"double\""));
            _jm_cst_0_set.add(json.safeJSON("\"int\""));
            _jm_cst_0_set.add(json.safeJSON("\"mime-type\""));
            _jm_cst_1_set = new HashSet<Object>();
            _jm_cst_1_set.add(json.safeJSON("\"uri\""));
            _jm_cst_1_set.add(json.safeJSON("\"uri-reference\""));
            _jm_cst_1_set.add(json.safeJSON("\"iri\""));
            _jm_cst_1_set.add(json.safeJSON("\"iri-reference\""));
            _jm_cst_1_set.add(json.safeJSON("\"date\""));
            _jm_cst_1_set.add(json.safeJSON("\"time\""));
            _jm_cst_1_set.add(json.safeJSON("\"date-time\""));
            _jm_cst_1_set.add(json.safeJSON("\"ipv4\""));
            _jm_cst_1_set.add(json.safeJSON("\"ipv6\""));
            _jm_cst_1_set.add(json.safeJSON("\"regex\""));
            _jm_cst_1_set.add(json.safeJSON("\"uuid\""));
            _jm_cst_1_set.add(json.safeJSON("\"hostname\""));
            _jm_cst_1_set.add(json.safeJSON("\"email\""));
            _jm_cst_1_set.add(json.safeJSON("\"idn-hostname\""));
            _jm_cst_1_set.add(json.safeJSON("\"idn-email\""));
            _jm_cst_1_set.add(json.safeJSON("\"duration\""));
            _jm_cst_1_set.add(json.safeJSON("\"int32\""));
            _jm_cst_1_set.add(json.safeJSON("\"int64\""));
            _jm_cst_1_set.add(json.safeJSON("\"uint\""));
            _jm_cst_1_set.add(json.safeJSON("\"uint32\""));
            _jm_cst_1_set.add(json.safeJSON("\"uint64\""));
            _jm_cst_1_set.add(json.safeJSON("\"json-pointer\""));
            _jm_cst_1_set.add(json.safeJSON("\"relative-json-pointer\""));
            _jm_cst_1_set.add(json.safeJSON("\"byte\""));
            _jm_cst_1_set.add(json.safeJSON("\"double\""));
            _jm_cst_1_set.add(json.safeJSON("\"int\""));
            _jm_cst_1_set.add(json.safeJSON("\"mime-type\""));
            json_model_10_map_pmap = new HashMap<String, Checker>();
            json_model_10_map_pmap.put("$comment", new Checker() { public boolean call(Object o, Path p, Report r) { return _jm_f_0(o, p, r);} });
            json_model_10_map_pmap.put("$defs", new Checker() { public boolean call(Object o, Path p, Report r) { return _jm_f_1(o, p, r);} });
            json_model_10_map_pmap.put("$id", new Checker() { public boolean call(Object o, Path p, Report r) { return _jm_f_2(o, p, r);} });
            json_model_10_map_pmap.put("$schema", new Checker() { public boolean call(Object o, Path p, Report r) { return _jm_f_3(o, p, r);} });
            json_model_10_map_pmap.put("default", new Checker() { public boolean call(Object o, Path p, Report r) { return _jm_f_4(o, p, r);} });
            json_model_10_map_pmap.put("definitions", new Checker() { public boolean call(Object o, Path p, Report r) { return _jm_f_5(o, p, r);} });
            json_model_10_map_pmap.put("description", new Checker() { public boolean call(Object o, Path p, Report r) { return _jm_f_6(o, p, r);} });
            json_model_10_map_pmap.put("examples", new Checker() { public boolean call(Object o, Path p, Report r) { return _jm_f_7(o, p, r);} });
            json_model_10_map_pmap.put("format", new Checker() { public boolean call(Object o, Path p, Report r) { return _jm_f_8(o, p, r);} });
            json_model_10_map_pmap.put("id", new Checker() { public boolean call(Object o, Path p, Report r) { return _jm_f_9(o, p, r);} });
            json_model_10_map_pmap.put("maxLength", new Checker() { public boolean call(Object o, Path p, Report r) { return _jm_f_10(o, p, r);} });
            json_model_10_map_pmap.put("minLength", new Checker() { public boolean call(Object o, Path p, Report r) { return _jm_f_11(o, p, r);} });
            json_model_10_map_pmap.put("pattern", new Checker() { public boolean call(Object o, Path p, Report r) { return _jm_f_12(o, p, r);} });
            json_model_10_map_pmap.put("title", new Checker() { public boolean call(Object o, Path p, Report r) { return _jm_f_13(o, p, r);} });
            json_model_11_map_pmap = new HashMap<String, Checker>();
            json_model_11_map_pmap.put("$comment", new Checker() { public boolean call(Object o, Path p, Report r) { return _jm_f_14(o, p, r);} });
            json_model_11_map_pmap.put("$defs", new Checker() { public boolean call(Object o, Path p, Report r) { return _jm_f_15(o, p, r);} });
            json_model_11_map_pmap.put("$id", new Checker() { public boolean call(Object o, Path p, Report r) { return _jm_f_16(o, p, r);} });
            json_model_11_map_pmap.put("$schema", new Checker() { public boolean call(Object o, Path p, Report r) { return _jm_f_17(o, p, r);} });
            json_model_11_map_pmap.put("additionalItems", new Checker() { public boolean call(Object o, Path p, Report r) { return json_model_24(o, p, r);} });
            json_model_11_map_pmap.put("default", new Checker() { public boolean call(Object o, Path p, Report r) { return _jm_f_18(o, p, r);} });
            json_model_11_map_pmap.put("definitions", new Checker() { public boolean call(Object o, Path p, Report r) { return _jm_f_19(o, p, r);} });
            json_model_11_map_pmap.put("description", new Checker() { public boolean call(Object o, Path p, Report r) { return _jm_f_20(o, p, r);} });
            json_model_11_map_pmap.put("examples", new Checker() { public boolean call(Object o, Path p, Report r) { return _jm_f_21(o, p, r);} });
            json_model_11_map_pmap.put("id", new Checker() { public boolean call(Object o, Path p, Report r) { return _jm_f_22(o, p, r);} });
            json_model_11_map_pmap.put("items", new Checker() { public boolean call(Object o, Path p, Report r) { return _jm_f_23(o, p, r);} });
            json_model_11_map_pmap.put("maxItems", new Checker() { public boolean call(Object o, Path p, Report r) { return _jm_f_24(o, p, r);} });
            json_model_11_map_pmap.put("minItems", new Checker() { public boolean call(Object o, Path p, Report r) { return _jm_f_25(o, p, r);} });
            json_model_11_map_pmap.put("prefixItems", new Checker() { public boolean call(Object o, Path p, Report r) { return json_model_4(o, p, r);} });
            json_model_11_map_pmap.put("title", new Checker() { public boolean call(Object o, Path p, Report r) { return _jm_f_26(o, p, r);} });
            json_model_11_map_pmap.put("uniqueItems", new Checker() { public boolean call(Object o, Path p, Report r) { return _jm_f_27(o, p, r);} });
            json_model_12_map_pmap = new HashMap<String, Checker>();
            json_model_12_map_pmap.put("$comment", new Checker() { public boolean call(Object o, Path p, Report r) { return _jm_f_28(o, p, r);} });
            json_model_12_map_pmap.put("$defs", new Checker() { public boolean call(Object o, Path p, Report r) { return _jm_f_29(o, p, r);} });
            json_model_12_map_pmap.put("$id", new Checker() { public boolean call(Object o, Path p, Report r) { return _jm_f_30(o, p, r);} });
            json_model_12_map_pmap.put("$schema", new Checker() { public boolean call(Object o, Path p, Report r) { return _jm_f_31(o, p, r);} });
            json_model_12_map_pmap.put("additionalProperties", new Checker() { public boolean call(Object o, Path p, Report r) { return json_model_24(o, p, r);} });
            json_model_12_map_pmap.put("default", new Checker() { public boolean call(Object o, Path p, Report r) { return _jm_f_32(o, p, r);} });
            json_model_12_map_pmap.put("definitions", new Checker() { public boolean call(Object o, Path p, Report r) { return _jm_f_33(o, p, r);} });
            json_model_12_map_pmap.put("description", new Checker() { public boolean call(Object o, Path p, Report r) { return _jm_f_34(o, p, r);} });
            json_model_12_map_pmap.put("examples", new Checker() { public boolean call(Object o, Path p, Report r) { return _jm_f_35(o, p, r);} });
            json_model_12_map_pmap.put("id", new Checker() { public boolean call(Object o, Path p, Report r) { return _jm_f_36(o, p, r);} });
            json_model_12_map_pmap.put("patternProperties", new Checker() { public boolean call(Object o, Path p, Report r) { return _jm_f_37(o, p, r);} });
            json_model_12_map_pmap.put("properties", new Checker() { public boolean call(Object o, Path p, Report r) { return _jm_f_38(o, p, r);} });
            json_model_12_map_pmap.put("required", new Checker() { public boolean call(Object o, Path p, Report r) { return _jm_f_39(o, p, r);} });
            json_model_12_map_pmap.put("title", new Checker() { public boolean call(Object o, Path p, Report r) { return _jm_f_40(o, p, r);} });
            _jm_map_0_cmap = new HashMap<Object, Checker>();
            _jm_map_0_cmap.put(json.safeJSON("\"null\""), new Checker() { public boolean call(Object o, Path p, Report r) { return json_model_16(o, p, r);} });
            _jm_map_0_cmap.put(json.safeJSON("\"boolean\""), new Checker() { public boolean call(Object o, Path p, Report r) { return json_model_15(o, p, r);} });
            _jm_map_0_cmap.put(json.safeJSON("\"integer\""), new Checker() { public boolean call(Object o, Path p, Report r) { return json_model_13(o, p, r);} });
            _jm_map_0_cmap.put(json.safeJSON("\"number\""), new Checker() { public boolean call(Object o, Path p, Report r) { return json_model_14(o, p, r);} });
            _jm_map_0_cmap.put(json.safeJSON("\"string\""), new Checker() { public boolean call(Object o, Path p, Report r) { return json_model_10(o, p, r);} });
            _jm_map_0_cmap.put(json.safeJSON("\"array\""), new Checker() { public boolean call(Object o, Path p, Report r) { return json_model_11(o, p, r);} });
            _jm_map_0_cmap.put(json.safeJSON("\"object\""), new Checker() { public boolean call(Object o, Path p, Report r) { return json_model_12(o, p, r);} });
            json_schema_draft_tighter_map_pmap = new HashMap<String, Checker>();
            json_schema_draft_tighter_map_pmap.put("", new Checker() { public boolean call(Object o, Path p, Report r) { return json_model_25(o, p, r);} });
            json_schema_draft_tighter_map_pmap.put("const", new Checker() { public boolean call(Object o, Path p, Report r) { return json_model_2(o, p, r);} });
            json_schema_draft_tighter_map_pmap.put("enum", new Checker() { public boolean call(Object o, Path p, Report r) { return json_model_3(o, p, r);} });
            json_schema_draft_tighter_map_pmap.put("schemaArray", new Checker() { public boolean call(Object o, Path p, Report r) { return json_model_4(o, p, r);} });
            json_schema_draft_tighter_map_pmap.put("stringKeywords", new Checker() { public boolean call(Object o, Path p, Report r) { return json_model_5(o, p, r);} });
            json_schema_draft_tighter_map_pmap.put("arrayKeywords", new Checker() { public boolean call(Object o, Path p, Report r) { return json_model_6(o, p, r);} });
            json_schema_draft_tighter_map_pmap.put("objectKeywords", new Checker() { public boolean call(Object o, Path p, Report r) { return json_model_7(o, p, r);} });
            json_schema_draft_tighter_map_pmap.put("numberKeywords", new Checker() { public boolean call(Object o, Path p, Report r) { return json_model_8(o, p, r);} });
            json_schema_draft_tighter_map_pmap.put("metas", new Checker() { public boolean call(Object o, Path p, Report r) { return json_model_9(o, p, r);} });
            json_schema_draft_tighter_map_pmap.put("String", new Checker() { public boolean call(Object o, Path p, Report r) { return json_model_10(o, p, r);} });
            json_schema_draft_tighter_map_pmap.put("Array", new Checker() { public boolean call(Object o, Path p, Report r) { return json_model_11(o, p, r);} });
            json_schema_draft_tighter_map_pmap.put("Object", new Checker() { public boolean call(Object o, Path p, Report r) { return json_model_12(o, p, r);} });
            json_schema_draft_tighter_map_pmap.put("Integer", new Checker() { public boolean call(Object o, Path p, Report r) { return json_model_13(o, p, r);} });
            json_schema_draft_tighter_map_pmap.put("Number", new Checker() { public boolean call(Object o, Path p, Report r) { return json_model_14(o, p, r);} });
            json_schema_draft_tighter_map_pmap.put("Bool", new Checker() { public boolean call(Object o, Path p, Report r) { return json_model_15(o, p, r);} });
            json_schema_draft_tighter_map_pmap.put("Null", new Checker() { public boolean call(Object o, Path p, Report r) { return json_model_16(o, p, r);} });
            json_schema_draft_tighter_map_pmap.put("AllOf", new Checker() { public boolean call(Object o, Path p, Report r) { return json_model_17(o, p, r);} });
            json_schema_draft_tighter_map_pmap.put("AnyOf", new Checker() { public boolean call(Object o, Path p, Report r) { return json_model_18(o, p, r);} });
            json_schema_draft_tighter_map_pmap.put("OneOf", new Checker() { public boolean call(Object o, Path p, Report r) { return json_model_19(o, p, r);} });
            json_schema_draft_tighter_map_pmap.put("Enum", new Checker() { public boolean call(Object o, Path p, Report r) { return json_model_20(o, p, r);} });
            json_schema_draft_tighter_map_pmap.put("Const", new Checker() { public boolean call(Object o, Path p, Report r) { return json_model_21(o, p, r);} });
            json_schema_draft_tighter_map_pmap.put("Ref", new Checker() { public boolean call(Object o, Path p, Report r) { return json_model_22(o, p, r);} });
            json_schema_draft_tighter_map_pmap.put("ObjectSchema", new Checker() { public boolean call(Object o, Path p, Report r) { return json_model_23(o, p, r);} });
            json_schema_draft_tighter_map_pmap.put("Schema", new Checker() { public boolean call(Object o, Path p, Report r) { return json_model_24(o, p, r);} });
            json_schema_draft_tighter_map_pmap.put("RootSchema", new Checker() { public boolean call(Object o, Path p, Report r) { return json_model_25(o, p, r);} });
                super.init(json);
            }
            catch (Exception e) {
                throw new Error("cannot initialized model checker: " + e);
            }
        }
    }

    public void free()
    {
        if (initialized)
        {
            super.free();
            _jm_cst_0_set = null;
            _jm_cst_1_set = null;
            json_model_10_map_pmap = null;
            json_model_11_map_pmap = null;
            json_model_12_map_pmap = null;
            _jm_map_0_cmap = null;
            json_schema_draft_tighter_map_pmap = null;
        }
    }

    public Checker get(String name)
    {
        return json_schema_draft_tighter_map_pmap.get(name);
    }

    public Set<String> models()
    {
        return json_schema_draft_tighter_map_pmap.keySet();
    }

    static public void main(String[] args) throws Exception
    {
        ModelChecker checker = new json_schema_draft_tighter();
        Main.main("json_schema_draft_tighter", checker, VERSION, args);
    }
}
