#! /usr/bin/env node
//
// Generated by JSON Model Compiler version 2.0a0
// see https://github.com/clairey-zx81/json-model
//
import * as runtime from "json_model_runtime"
import main from "json_model_runtime/main.js"
const JSON_MODEL_VERSION = "2.0a0";

let _jm_cst_0 = new Set()
var check_model_map = new Map()

// check $ (.)
function json_model_1(val, path, rep)
{
    let res;
    // .
    res = ((val === null || (typeof val === 'number' || val instanceof Number) || (typeof val === 'boolean' || val instanceof Boolean) || (typeof val === 'string' || val instanceof String))) && _jm_cst_0.has(val);
    if (! res)
    {
        rep !== null && rep.push(["value not in enum [.'|']", path])
    }
    return res;
}


var initialized = false

// differed module initializations
function check_model_init()
{
    if (! initialized)
    {
        initialized = true;
        _jm_cst_0.add(200)
        _jm_cst_0.add(201)
        _jm_cst_0.add(204)
        check_model_map[""] = json_model_1
    }
}

// differed module cleanup
function check_model_free()
{
    if (initialized)
    {
        initialized = false;
    }
}

export function check_model(val, name, rep)
{
    check_model_init()

    let checker = check_model_map[name]
    let path = rep !== null ? [] : null

    return checker(val, path, rep)
}

// possibly run as main based on a guess
if (import.meta.url.endsWith(process.argv[1]))
    main(check_model)
