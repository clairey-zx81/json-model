#! /bin/env node
// we may need require to load re2
import { createRequire } from 'node:module';
const require = createRequire(import.meta.url);
//
// Generated by JSON Model Compiler version 2
// see https://github.com/clairey-zx81/json-model
//
import * as runtime from "json_model_runtime"
const JSON_MODEL_VERSION = "2";

let _jm_cst_0 = new Set()
let _jm_cst_1 = new Set()
var json_model_1_map = new Map()
var check_model_map = new Map()


// check $allTypes (.'$allTypes')
function json_model_2(val, path, rep)
{
    // .'$allTypes'
    let res = ((val === null || (typeof val === 'number' || val instanceof Number) || (typeof val === 'boolean' || val instanceof Boolean) || (typeof val === 'string' || val instanceof String))) && _jm_cst_0.has(val);
    if (! res)
    {
        rep !== null && rep.push(["value not in enum [.'$allTypes'.'|']", path])
    }
    return res;
}

// check $distinctSchemaArray (.'$distinctSchemaArray')
function json_model_3(val, path, rep)
{
    // .'$distinctSchemaArray'
    // .'$distinctSchemaArray'.'@'
    let res = Array.isArray(val);
    if (res)
    {
        for (let arr_0_idx = 0; arr_0_idx < val.length; arr_0_idx++)
        {
            let arr_0_item = val[arr_0_idx]
            let arr_0_lpath = path ? path.concat([arr_0_idx]) : null;
            // .'$distinctSchemaArray'.'@'.0
            // .'$distinctSchemaArray'.'@'.0.'|'.0
            res = (typeof arr_0_item === 'string' || arr_0_item instanceof String);
            if (! res)
            {
                rep !== null && rep.push(["unexpected string [.'$distinctSchemaArray'.'@'.0.'|'.0]", (path ? arr_0_lpath : null)])
            }
            if (! res)
            {
                // .'$distinctSchemaArray'.'@'.0.'|'.1
                res = json_model_1(arr_0_item, (path ? arr_0_lpath : null), rep);
                if (! res)
                {
                    rep !== null && rep.push(["unexpected $Schema [.'$distinctSchemaArray'.'@'.0.'|'.1]", (path ? arr_0_lpath : null)])
                }
            }
            if (res)
            {
                if (rep !== null) rep.length = 0
            }
            else
            {
                rep !== null && rep.push(["no model matched [.'$distinctSchemaArray'.'@'.0.'|']", (path ? arr_0_lpath : null)])
                break;
            }
        }
    }
    if (! res)
    {
        rep !== null && rep.push(["not array or unexpected array [.'$distinctSchemaArray'.'@']", path])
    }
    if (res)
    {
        res = runtime.jm_array_is_unique(val, path, rep);
        if (! res)
        {
            rep !== null && rep.push(["constraints failed [.'$distinctSchemaArray']", path])
        }
    }
    return res;
}

// check json_model_1_map_$ref (.'$ref')
function _jm_f_0(val, path, rep)
{
    // .'$ref'
    let res = (typeof val === 'string' || val instanceof String);
    if (! res)
    {
        rep !== null && rep.push(["unexpected string [.'$ref']", path])
    }
    return res;
}

// check json_model_1_map_$schema (.'$schema')
function _jm_f_1(val, path, rep)
{
    // .'$schema'
    let res = (typeof val === 'string' || val instanceof String);
    if (! res)
    {
        rep !== null && rep.push(["unexpected string [.'$schema']", path])
    }
    return res;
}

// check json_model_1_map_additionalItems (.additionalItems)
function _jm_f_2(val, path, rep)
{
    // .additionalItems
    // .additionalItems.'|'.0
    let res = (typeof val === 'boolean' || val instanceof Boolean);
    if (! res)
    {
        rep !== null && rep.push(["not a bool [.additionalItems.'|'.0]", path])
    }
    if (! res)
    {
        // .additionalItems.'|'.1
        res = json_model_1(val, path, rep);
        if (! res)
        {
            rep !== null && rep.push(["unexpected $Schema [.additionalItems.'|'.1]", path])
        }
    }
    if (res)
    {
        if (rep !== null) rep.length = 0
    }
    else
    {
        rep !== null && rep.push(["no model matched [.additionalItems.'|']", path])
    }
    return res;
}

// check json_model_1_map_additionalProperties (.additionalProperties)
function _jm_f_3(val, path, rep)
{
    // .additionalProperties
    // .additionalProperties.'|'.0
    let res = (typeof val === 'boolean' || val instanceof Boolean);
    if (! res)
    {
        rep !== null && rep.push(["not a bool [.additionalProperties.'|'.0]", path])
    }
    if (! res)
    {
        // .additionalProperties.'|'.1
        res = json_model_1(val, path, rep);
        if (! res)
        {
            rep !== null && rep.push(["unexpected $Schema [.additionalProperties.'|'.1]", path])
        }
    }
    if (res)
    {
        if (rep !== null) rep.length = 0
    }
    else
    {
        rep !== null && rep.push(["no model matched [.additionalProperties.'|']", path])
    }
    return res;
}

// check json_model_1_map_default (.default)
function _jm_f_4(val, path, rep)
{
    // .default
    return true;
}

// check json_model_1_map_dependencies (.dependencies)
function _jm_f_5(val, path, rep)
{
    // .dependencies
    if (! (Object.prototype.toString.call(val) === '[object Object]'))
    {
        rep !== null && rep.push(["not an object [.dependencies]", path])
        return false;
    }
    let res;
    for (const [prop, pval] of Object.entries(val))
    {
        let lpath_1 = path ? path.concat([prop]) : null;
        // handle other props
        // .dependencies.''
        // .dependencies.''.'|'.0
        res = (typeof pval === 'string' || pval instanceof String);
        if (! res)
        {
            rep !== null && rep.push(["unexpected string [.dependencies.''.'|'.0]", (path ? lpath_1 : null)])
        }
        if (! res)
        {
            // .dependencies.''.'|'.1
            res = Array.isArray(pval);
            if (res)
            {
                for (let arr_1_idx = 0; arr_1_idx < pval.length; arr_1_idx++)
                {
                    let arr_1_item = pval[arr_1_idx]
                    let arr_1_lpath = (path ? lpath_1 : null) ? (path ? lpath_1 : null).concat([arr_1_idx]) : null;
                    // .dependencies.''.'|'.1.0
                    res = (typeof arr_1_item === 'string' || arr_1_item instanceof String);
                    if (! res)
                    {
                        rep !== null && rep.push(["unexpected string [.dependencies.''.'|'.1.0]", ((path ? lpath_1 : null) ? arr_1_lpath : null)])
                        break;
                    }
                }
            }
            if (! res)
            {
                rep !== null && rep.push(["not array or unexpected array [.dependencies.''.'|'.1]", (path ? lpath_1 : null)])
            }
            if (! res)
            {
                // .dependencies.''.'|'.2
                res = json_model_1(pval, (path ? lpath_1 : null), rep);
                if (! res)
                {
                    rep !== null && rep.push(["unexpected $Schema [.dependencies.''.'|'.2]", (path ? lpath_1 : null)])
                }
            }
        }
        if (res)
        {
            if (rep !== null) rep.length = 0
        }
        else
        {
            rep !== null && rep.push(["no model matched [.dependencies.''.'|']", (path ? lpath_1 : null)])
            return false;
        }
    }
    return true;
}

// check json_model_1_map_description (.description)
function _jm_f_6(val, path, rep)
{
    // .description
    let res = (typeof val === 'string' || val instanceof String);
    if (! res)
    {
        rep !== null && rep.push(["unexpected string [.description]", path])
    }
    return res;
}

// check json_model_1_map_disallow (.disallow)
function _jm_f_7(val, path, rep)
{
    // .disallow
    // .disallow.'|'.0
    let res = (typeof val === 'string' || val instanceof String);
    if (! res)
    {
        rep !== null && rep.push(["unexpected string [.disallow.'|'.0]", path])
    }
    if (! res)
    {
        // .disallow.'|'.1
        res = json_model_3(val, path, rep);
        if (! res)
        {
            rep !== null && rep.push(["unexpected $distinctSchemaArray [.disallow.'|'.1]", path])
        }
    }
    if (res)
    {
        if (rep !== null) rep.length = 0
    }
    else
    {
        rep !== null && rep.push(["no model matched [.disallow.'|']", path])
    }
    return res;
}

// check json_model_1_map_divisibleBy (.divisibleBy)
function _jm_f_8(val, path, rep)
{
    // .divisibleBy
    let res = ((typeof val === 'number' || val instanceof Number)) && val > 0.0;
    if (! res)
    {
        rep !== null && rep.push(["not a 1.0 loose float [.divisibleBy]", path])
    }
    return res;
}

// check json_model_1_map_enum (.enum)
function _jm_f_9(val, path, rep)
{
    // .enum
    // .enum.'@'
    let res = Array.isArray(val);
    if (! res)
    {
        rep !== null && rep.push(["not array or unexpected array [.enum.'@']", path])
    }
    if (res)
    {
        let ival_0 = val.length;
        res = runtime.jm_array_is_unique(val, path, rep) && ival_0 >= 1;
        if (! res)
        {
            rep !== null && rep.push(["constraints failed [.enum]", path])
        }
    }
    return res;
}

// check json_model_1_map_exclusiveMaximum (.exclusiveMaximum)
function _jm_f_10(val, path, rep)
{
    // .exclusiveMaximum
    let res = (typeof val === 'boolean' || val instanceof Boolean);
    if (! res)
    {
        rep !== null && rep.push(["not a bool [.exclusiveMaximum]", path])
    }
    return res;
}

// check json_model_1_map_exclusiveMinimum (.exclusiveMinimum)
function _jm_f_11(val, path, rep)
{
    // .exclusiveMinimum
    let res = (typeof val === 'boolean' || val instanceof Boolean);
    if (! res)
    {
        rep !== null && rep.push(["not a bool [.exclusiveMinimum]", path])
    }
    return res;
}

// check json_model_1_map_extends (.extends)
function _jm_f_12(val, path, rep)
{
    // .extends
    // .extends.'|'.0
    let res = json_model_1(val, path, rep);
    if (! res)
    {
        rep !== null && rep.push(["unexpected $Schema [.extends.'|'.0]", path])
    }
    if (! res)
    {
        // .extends.'|'.1
        res = Array.isArray(val);
        if (res)
        {
            for (let arr_2_idx = 0; arr_2_idx < val.length; arr_2_idx++)
            {
                let arr_2_item = val[arr_2_idx]
                let arr_2_lpath = path ? path.concat([arr_2_idx]) : null;
                // .extends.'|'.1.0
                res = json_model_1(arr_2_item, (path ? arr_2_lpath : null), rep);
                if (! res)
                {
                    rep !== null && rep.push(["unexpected $Schema [.extends.'|'.1.0]", (path ? arr_2_lpath : null)])
                    break;
                }
            }
        }
        if (! res)
        {
            rep !== null && rep.push(["not array or unexpected array [.extends.'|'.1]", path])
        }
    }
    if (res)
    {
        if (rep !== null) rep.length = 0
    }
    else
    {
        rep !== null && rep.push(["no model matched [.extends.'|']", path])
    }
    return res;
}


// check json_model_1_map_format (.format)
function _jm_f_13(val, path, rep)
{
    // .format
    let res = ((val === null || (typeof val === 'number' || val instanceof Number) || (typeof val === 'boolean' || val instanceof Boolean) || (typeof val === 'string' || val instanceof String))) && _jm_cst_1.has(val);
    if (! res)
    {
        rep !== null && rep.push(["value not in enum [.format.'|']", path])
    }
    return res;
}

// check json_model_1_map_id (.id)
function _jm_f_14(val, path, rep)
{
    // .id
    let res = (typeof val === 'string' || val instanceof String);
    if (! res)
    {
        rep !== null && rep.push(["unexpected string [.id]", path])
    }
    return res;
}

// check json_model_1_map_items (.items)
function _jm_f_15(val, path, rep)
{
    // .items
    // .items.'|'.0
    let res = json_model_1(val, path, rep);
    if (! res)
    {
        rep !== null && rep.push(["unexpected $Schema [.items.'|'.0]", path])
    }
    if (! res)
    {
        // .items.'|'.1
        res = Array.isArray(val);
        if (res)
        {
            for (let arr_3_idx = 0; arr_3_idx < val.length; arr_3_idx++)
            {
                let arr_3_item = val[arr_3_idx]
                let arr_3_lpath = path ? path.concat([arr_3_idx]) : null;
                // .items.'|'.1.0
                res = json_model_1(arr_3_item, (path ? arr_3_lpath : null), rep);
                if (! res)
                {
                    rep !== null && rep.push(["unexpected $Schema [.items.'|'.1.0]", (path ? arr_3_lpath : null)])
                    break;
                }
            }
        }
        if (! res)
        {
            rep !== null && rep.push(["not array or unexpected array [.items.'|'.1]", path])
        }
    }
    if (res)
    {
        if (rep !== null) rep.length = 0
    }
    else
    {
        rep !== null && rep.push(["no model matched [.items.'|']", path])
    }
    return res;
}

// check json_model_1_map_maxItems (.maxItems)
function _jm_f_16(val, path, rep)
{
    // .maxItems
    let res = ((typeof val === 'number' || val instanceof Number) && Number.isInteger(val)) && val >= 0;
    if (! res)
    {
        rep !== null && rep.push(["not a 0 strict int [.maxItems]", path])
    }
    return res;
}

// check json_model_1_map_maxLength (.maxLength)
function _jm_f_17(val, path, rep)
{
    // .maxLength
    let res = ((typeof val === 'number' || val instanceof Number) && Number.isInteger(val)) && val >= 0;
    if (! res)
    {
        rep !== null && rep.push(["not a 0 strict int [.maxLength]", path])
    }
    return res;
}

// check json_model_1_map_maximum (.maximum)
function _jm_f_18(val, path, rep)
{
    // .maximum
    let res = (typeof val === 'number' || val instanceof Number);
    if (! res)
    {
        rep !== null && rep.push(["not a -1.0 loose float [.maximum]", path])
    }
    return res;
}

// check json_model_1_map_minItems (.minItems)
function _jm_f_19(val, path, rep)
{
    // .minItems
    let res = ((typeof val === 'number' || val instanceof Number) && Number.isInteger(val)) && val >= 0;
    if (! res)
    {
        rep !== null && rep.push(["not a 0 strict int [.minItems]", path])
    }
    return res;
}

// check json_model_1_map_minLength (.minLength)
function _jm_f_20(val, path, rep)
{
    // .minLength
    let res = ((typeof val === 'number' || val instanceof Number) && Number.isInteger(val)) && val >= 0;
    if (! res)
    {
        rep !== null && rep.push(["not a 0 strict int [.minLength]", path])
    }
    return res;
}

// check json_model_1_map_minimum (.minimum)
function _jm_f_21(val, path, rep)
{
    // .minimum
    let res = (typeof val === 'number' || val instanceof Number);
    if (! res)
    {
        rep !== null && rep.push(["not a -1.0 loose float [.minimum]", path])
    }
    return res;
}

// check json_model_1_map_pattern (.pattern)
function _jm_f_22(val, path, rep)
{
    // .pattern
    let res = runtime.jm_is_valid_regex(val, false);
    if (! res)
    {
        rep !== null && rep.push(["unexpected $REGEX [.pattern]", path])
    }
    return res;
}

// check json_model_1_map_patternProperties (.patternProperties)
function _jm_f_23(val, path, rep)
{
    // .patternProperties
    if (! (Object.prototype.toString.call(val) === '[object Object]'))
    {
        rep !== null && rep.push(["not an object [.patternProperties]", path])
        return false;
    }
    let res;
    for (const [prop, pval] of Object.entries(val))
    {
        let lpath_2 = path ? path.concat([prop]) : null;
        // handle other props
        // .patternProperties.''
        res = json_model_1(pval, (path ? lpath_2 : null), rep);
        if (! res)
        {
            rep !== null && rep.push(["unexpected $Schema [.patternProperties.'']", (path ? lpath_2 : null)])
            return false;
        }
    }
    return true;
}

// check json_model_1_map_properties (.properties)
function _jm_f_24(val, path, rep)
{
    // .properties
    if (! (Object.prototype.toString.call(val) === '[object Object]'))
    {
        rep !== null && rep.push(["not an object [.properties]", path])
        return false;
    }
    let res;
    for (const [prop, pval] of Object.entries(val))
    {
        let lpath_3 = path ? path.concat([prop]) : null;
        // handle other props
        // .properties.''
        res = json_model_1(pval, (path ? lpath_3 : null), rep);
        if (! res)
        {
            rep !== null && rep.push(["unexpected $Schema [.properties.'']", (path ? lpath_3 : null)])
            return false;
        }
    }
    return true;
}

// check json_model_1_map_required (.required)
function _jm_f_25(val, path, rep)
{
    // .required
    let res = (typeof val === 'boolean' || val instanceof Boolean);
    if (! res)
    {
        rep !== null && rep.push(["not a bool [.required]", path])
    }
    return res;
}

// check json_model_1_map_title (.title)
function _jm_f_26(val, path, rep)
{
    // .title
    let res = (typeof val === 'string' || val instanceof String);
    if (! res)
    {
        rep !== null && rep.push(["unexpected string [.title]", path])
    }
    return res;
}

// check json_model_1_map_type (.type)
function _jm_f_27(val, path, rep)
{
    // .type
    // .type.'|'.0
    let res = json_model_2(val, path, rep);
    if (! res)
    {
        rep !== null && rep.push(["unexpected $allTypes [.type.'|'.0]", path])
    }
    if (! res)
    {
        // .type.'|'.1
        res = Array.isArray(val);
        if (res)
        {
            for (let arr_4_idx = 0; arr_4_idx < val.length; arr_4_idx++)
            {
                let arr_4_item = val[arr_4_idx]
                let arr_4_lpath = path ? path.concat([arr_4_idx]) : null;
                // .type.'|'.1.0
                // .type.'|'.1.0.'|'.0
                res = (typeof arr_4_item === 'string' || arr_4_item instanceof String);
                if (! res)
                {
                    rep !== null && rep.push(["unexpected string [.type.'|'.1.0.'|'.0]", (path ? arr_4_lpath : null)])
                }
                if (! res)
                {
                    // .type.'|'.1.0.'|'.1
                    res = json_model_1(arr_4_item, (path ? arr_4_lpath : null), rep);
                    if (! res)
                    {
                        rep !== null && rep.push(["unexpected $Schema [.type.'|'.1.0.'|'.1]", (path ? arr_4_lpath : null)])
                    }
                }
                if (res)
                {
                    if (rep !== null) rep.length = 0
                }
                else
                {
                    rep !== null && rep.push(["no model matched [.type.'|'.1.0.'|']", (path ? arr_4_lpath : null)])
                    break;
                }
            }
        }
        if (! res)
        {
            rep !== null && rep.push(["not array or unexpected array [.type.'|'.1]", path])
        }
    }
    if (res)
    {
        if (rep !== null) rep.length = 0
    }
    else
    {
        rep !== null && rep.push(["no model matched [.type.'|']", path])
    }
    return res;
}

// check json_model_1_map_uniqueItems (.uniqueItems)
function _jm_f_28(val, path, rep)
{
    // .uniqueItems
    let res = (typeof val === 'boolean' || val instanceof Boolean);
    if (! res)
    {
        rep !== null && rep.push(["not a bool [.uniqueItems]", path])
    }
    return res;
}


// check $ (.)
function json_model_1(val, path, rep)
{
    // JSON Model for JSON Schema Draft 03 [JSON_MODEL_STRICT_INT, JSON_MODEL_LOOSE_FLOAT]
    // .
    if (! (Object.prototype.toString.call(val) === '[object Object]'))
    {
        rep !== null && rep.push(["not an object [.]", path])
        return false;
    }
    let pfun;
    for (const [prop, pval] of Object.entries(val))
    {
        let lpath_0 = path ? path.concat([prop]) : null;
        if ((pfun = json_model_1_map.get(prop)))
        {
            // handle 29 may props
            if (pfun !== undefined && ! pfun(pval, (path ? lpath_0 : null), rep))
            {
                rep !== null && rep.push(["invalid optional prop value [.]", (path ? lpath_0 : null)])
                return false;
            }
        }
        else
        {
            rep !== null && rep.push(["unexpected prop [.]", (path ? lpath_0 : null)])
            return false;
        }
    }
    return true;
}


var initialized = false

// differed module initializations
export function check_model_init()
{
    if (! initialized)
    {
        initialized = true;
        runtime.jm_set_rx(RegExp)
        _jm_cst_0.add("null")
        _jm_cst_0.add("boolean")
        _jm_cst_0.add("integer")
        _jm_cst_0.add("number")
        _jm_cst_0.add("string")
        _jm_cst_0.add("array")
        _jm_cst_0.add("object")
        _jm_cst_0.add("any")
        _jm_cst_1.add("date-time")
        _jm_cst_1.add("date")
        _jm_cst_1.add("time")
        _jm_cst_1.add("utc-millisec")
        _jm_cst_1.add("regex")
        _jm_cst_1.add("color")
        _jm_cst_1.add("style")
        _jm_cst_1.add("phone")
        _jm_cst_1.add("uri")
        _jm_cst_1.add("email")
        _jm_cst_1.add("ip-address")
        _jm_cst_1.add("ipv6")
        _jm_cst_1.add("host-name")
        json_model_1_map.set("$ref", _jm_f_0)
        json_model_1_map.set("$schema", _jm_f_1)
        json_model_1_map.set("additionalItems", _jm_f_2)
        json_model_1_map.set("additionalProperties", _jm_f_3)
        json_model_1_map.set("default", _jm_f_4)
        json_model_1_map.set("dependencies", _jm_f_5)
        json_model_1_map.set("description", _jm_f_6)
        json_model_1_map.set("disallow", _jm_f_7)
        json_model_1_map.set("divisibleBy", _jm_f_8)
        json_model_1_map.set("enum", _jm_f_9)
        json_model_1_map.set("exclusiveMaximum", _jm_f_10)
        json_model_1_map.set("exclusiveMinimum", _jm_f_11)
        json_model_1_map.set("extends", _jm_f_12)
        json_model_1_map.set("format", _jm_f_13)
        json_model_1_map.set("id", _jm_f_14)
        json_model_1_map.set("items", _jm_f_15)
        json_model_1_map.set("maxItems", _jm_f_16)
        json_model_1_map.set("maxLength", _jm_f_17)
        json_model_1_map.set("maximum", _jm_f_18)
        json_model_1_map.set("minItems", _jm_f_19)
        json_model_1_map.set("minLength", _jm_f_20)
        json_model_1_map.set("minimum", _jm_f_21)
        json_model_1_map.set("pattern", _jm_f_22)
        json_model_1_map.set("patternProperties", _jm_f_23)
        json_model_1_map.set("properties", _jm_f_24)
        json_model_1_map.set("required", _jm_f_25)
        json_model_1_map.set("title", _jm_f_26)
        json_model_1_map.set("type", _jm_f_27)
        json_model_1_map.set("uniqueItems", _jm_f_28)
        check_model_map.set("", json_model_1)
        check_model_map.set("allTypes", json_model_2)
        check_model_map.set("distinctSchemaArray", json_model_3)
        check_model_map.set("Schema", json_model_1)
    }
}

// differed module cleanup
export function check_model_free()
{
    if (initialized)
    {
        initialized = false;
    }
}

export function check_model(val, name, rep)
{
    let checker = check_model_map.get(name)
    if (checker === undefined)
        throw `no checker for "${name}"`
    let path = rep !== null ? [] : null

    return checker(val, path, rep)
}

// possibly run as main based on a guess
import main from "json_model_runtime/main.js"

if (import.meta.url.endsWith(process.argv[1]))
    main(check_model_init, check_model, check_model_free)
