#! /bin/env node
// we may need require to load re2
import { createRequire } from 'node:module';
const require = createRequire(import.meta.url);
//
// Generated by JSON Model Compiler version 2
// see https://github.com/clairey-zx81/json-model
//
import * as runtime from "json_model_runtime"
const JSON_MODEL_VERSION = "2";

let _jm_cst_0 = new Set()
let _jm_cst_1 = new Set()
var check_model_map = new Map()


// check $allTypes (.'$allTypes')
function json_model_2(val, path, rep)
{
    // .'$allTypes'
    let res = ((val === null || (typeof val === 'number' || val instanceof Number) || (typeof val === 'boolean' || val instanceof Boolean) || (typeof val === 'string' || val instanceof String))) && _jm_cst_0.has(val);
    if (! res)
    {
        rep !== null && rep.push(["value not in enum [.'$allTypes'.'|']", path])
    }
    return res;
}

// check $distinctSchemaArray (.'$distinctSchemaArray')
function json_model_3(val, path, rep)
{
    // .'$distinctSchemaArray'
    // .'$distinctSchemaArray'.'@'
    let res = Array.isArray(val);
    if (res)
    {
        for (let arr_0_idx = 0; arr_0_idx < val.length; arr_0_idx++)
        {
            let arr_0_item = val[arr_0_idx]
            let arr_0_lpath = path ? path.concat([arr_0_idx]) : null;
            // .'$distinctSchemaArray'.'@'.0
            // .'$distinctSchemaArray'.'@'.0.'|'.0
            res = (typeof arr_0_item === 'string' || arr_0_item instanceof String);
            if (! res)
            {
                rep !== null && rep.push(["unexpected string [.'$distinctSchemaArray'.'@'.0.'|'.0]", (path ? arr_0_lpath : null)])
            }
            if (! res)
            {
                // .'$distinctSchemaArray'.'@'.0.'|'.1
                res = json_model_1(arr_0_item, (path ? arr_0_lpath : null), rep);
                if (! res)
                {
                    rep !== null && rep.push(["unexpected $Schema [.'$distinctSchemaArray'.'@'.0.'|'.1]", (path ? arr_0_lpath : null)])
                }
            }
            if (res)
            {
                if (rep !== null) rep.length = 0
            }
            else
            {
                rep !== null && rep.push(["no model matched [.'$distinctSchemaArray'.'@'.0.'|']", (path ? arr_0_lpath : null)])
                break;
            }
        }
    }
    if (! res)
    {
        rep !== null && rep.push(["not array or unexpected array [.'$distinctSchemaArray'.'@']", path])
    }
    if (res)
    {
        res = runtime.jm_array_is_unique(val, path, rep);
        if (! res)
        {
            rep !== null && rep.push(["constraints failed [.'$distinctSchemaArray']", path])
        }
    }
    return res;
}


// object .properties
function _jm_obj_0(val, path, rep)
{
    if (! (Object.prototype.toString.call(val) === '[object Object]'))
    {
        rep !== null && rep.push(["not an object [.properties]", path])
        return false;
    }
    let res;
    for (const [prop, pval] of Object.entries(val))
    {
        let lpath_1 = path ? path.concat([prop]) : null;
        // handle other props
        // .properties.''
        res = json_model_1(pval, (path ? lpath_1 : null), rep);
        if (! res)
        {
            rep !== null && rep.push(["unexpected $Schema [.properties.'']", (path ? lpath_1 : null)])
            return false;
        }
    }
    return true;
}

// object .dependencies
function _jm_obj_1(val, path, rep)
{
    if (! (Object.prototype.toString.call(val) === '[object Object]'))
    {
        rep !== null && rep.push(["not an object [.dependencies]", path])
        return false;
    }
    let res;
    for (const [prop, pval] of Object.entries(val))
    {
        let lpath_2 = path ? path.concat([prop]) : null;
        // handle other props
        // .dependencies.''
        // .dependencies.''.'|'.0
        res = (typeof pval === 'string' || pval instanceof String);
        if (! res)
        {
            rep !== null && rep.push(["unexpected string [.dependencies.''.'|'.0]", (path ? lpath_2 : null)])
        }
        if (! res)
        {
            // .dependencies.''.'|'.1
            res = Array.isArray(pval);
            if (res)
            {
                for (let arr_4_idx = 0; arr_4_idx < pval.length; arr_4_idx++)
                {
                    let arr_4_item = pval[arr_4_idx]
                    let arr_4_lpath = (path ? lpath_2 : null) ? (path ? lpath_2 : null).concat([arr_4_idx]) : null;
                    // .dependencies.''.'|'.1.0
                    res = (typeof arr_4_item === 'string' || arr_4_item instanceof String);
                    if (! res)
                    {
                        rep !== null && rep.push(["unexpected string [.dependencies.''.'|'.1.0]", ((path ? lpath_2 : null) ? arr_4_lpath : null)])
                        break;
                    }
                }
            }
            if (! res)
            {
                rep !== null && rep.push(["not array or unexpected array [.dependencies.''.'|'.1]", (path ? lpath_2 : null)])
            }
            if (! res)
            {
                // .dependencies.''.'|'.2
                res = json_model_1(pval, (path ? lpath_2 : null), rep);
                if (! res)
                {
                    rep !== null && rep.push(["unexpected $Schema [.dependencies.''.'|'.2]", (path ? lpath_2 : null)])
                }
            }
        }
        if (res)
        {
            if (rep !== null) rep.length = 0
        }
        else
        {
            rep !== null && rep.push(["no model matched [.dependencies.''.'|']", (path ? lpath_2 : null)])
            return false;
        }
    }
    return true;
}

// object .patternProperties
function _jm_obj_2(val, path, rep)
{
    if (! (Object.prototype.toString.call(val) === '[object Object]'))
    {
        rep !== null && rep.push(["not an object [.patternProperties]", path])
        return false;
    }
    let res;
    for (const [prop, pval] of Object.entries(val))
    {
        let lpath_3 = path ? path.concat([prop]) : null;
        // handle other props
        // .patternProperties.''
        res = json_model_1(pval, (path ? lpath_3 : null), rep);
        if (! res)
        {
            rep !== null && rep.push(["unexpected $Schema [.patternProperties.'']", (path ? lpath_3 : null)])
            return false;
        }
    }
    return true;
}

// check $ (.)
function json_model_1(val, path, rep)
{
    // JSON Model for JSON Schema Draft 03 [JSON_MODEL_STRICT_INT, JSON_MODEL_LOOSE_FLOAT]
    // .
    if (! (Object.prototype.toString.call(val) === '[object Object]'))
    {
        rep !== null && rep.push(["not an object [.]", path])
        return false;
    }
    let res;
    for (const [prop, pval] of Object.entries(val))
    {
        let lpath_0 = path ? path.concat([prop]) : null;
        if (prop == "id")
        {
            // handle may id property
            // .id
            res = (typeof pval === 'string' || pval instanceof String);
            if (! res)
            {
                rep !== null && rep.push(["unexpected string [.id]", (path ? lpath_0 : null)])
                rep !== null && rep.push(["invalid optional prop value [.id]", (path ? lpath_0 : null)])
                return false;
            }
        }
        else if (prop == "$ref")
        {
            // handle may $ref property
            // .'$ref'
            res = (typeof pval === 'string' || pval instanceof String);
            if (! res)
            {
                rep !== null && rep.push(["unexpected string [.'$ref']", (path ? lpath_0 : null)])
                rep !== null && rep.push(["invalid optional prop value [.'$ref']", (path ? lpath_0 : null)])
                return false;
            }
        }
        else if (prop == "enum")
        {
            // handle may enum property
            // .enum
            // .enum.'@'
            res = Array.isArray(pval);
            if (! res)
            {
                rep !== null && rep.push(["not array or unexpected array [.enum.'@']", (path ? lpath_0 : null)])
            }
            if (res)
            {
                let ival_0 = pval.length;
                res = runtime.jm_array_is_unique(pval, (path ? lpath_0 : null), rep) && ival_0 >= 1;
                if (! res)
                {
                    rep !== null && rep.push(["constraints failed [.enum]", (path ? lpath_0 : null)])
                }
            }
            if (! res)
            {
                rep !== null && rep.push(["invalid optional prop value [.enum]", (path ? lpath_0 : null)])
                return false;
            }
        }
        else if (prop == "type")
        {
            // handle may type property
            // .type
            // .type.'|'.0
            res = json_model_2(pval, (path ? lpath_0 : null), rep);
            if (! res)
            {
                rep !== null && rep.push(["unexpected $allTypes [.type.'|'.0]", (path ? lpath_0 : null)])
            }
            if (! res)
            {
                // .type.'|'.1
                res = Array.isArray(pval);
                if (res)
                {
                    for (let arr_1_idx = 0; arr_1_idx < pval.length; arr_1_idx++)
                    {
                        let arr_1_item = pval[arr_1_idx]
                        let arr_1_lpath = (path ? lpath_0 : null) ? (path ? lpath_0 : null).concat([arr_1_idx]) : null;
                        // .type.'|'.1.0
                        // .type.'|'.1.0.'|'.0
                        res = (typeof arr_1_item === 'string' || arr_1_item instanceof String);
                        if (! res)
                        {
                            rep !== null && rep.push(["unexpected string [.type.'|'.1.0.'|'.0]", ((path ? lpath_0 : null) ? arr_1_lpath : null)])
                        }
                        if (! res)
                        {
                            // .type.'|'.1.0.'|'.1
                            res = json_model_1(arr_1_item, ((path ? lpath_0 : null) ? arr_1_lpath : null), rep);
                            if (! res)
                            {
                                rep !== null && rep.push(["unexpected $Schema [.type.'|'.1.0.'|'.1]", ((path ? lpath_0 : null) ? arr_1_lpath : null)])
                            }
                        }
                        if (res)
                        {
                            if (rep !== null) rep.length = 0
                        }
                        else
                        {
                            rep !== null && rep.push(["no model matched [.type.'|'.1.0.'|']", ((path ? lpath_0 : null) ? arr_1_lpath : null)])
                            break;
                        }
                    }
                }
                if (! res)
                {
                    rep !== null && rep.push(["not array or unexpected array [.type.'|'.1]", (path ? lpath_0 : null)])
                }
            }
            if (res)
            {
                if (rep !== null) rep.length = 0
            }
            else
            {
                rep !== null && rep.push(["no model matched [.type.'|']", (path ? lpath_0 : null)])
                rep !== null && rep.push(["invalid optional prop value [.type]", (path ? lpath_0 : null)])
                return false;
            }
        }
        else if (prop == "items")
        {
            // handle may items property
            // .items
            // .items.'|'.0
            res = json_model_1(pval, (path ? lpath_0 : null), rep);
            if (! res)
            {
                rep !== null && rep.push(["unexpected $Schema [.items.'|'.0]", (path ? lpath_0 : null)])
            }
            if (! res)
            {
                // .items.'|'.1
                res = Array.isArray(pval);
                if (res)
                {
                    for (let arr_2_idx = 0; arr_2_idx < pval.length; arr_2_idx++)
                    {
                        let arr_2_item = pval[arr_2_idx]
                        let arr_2_lpath = (path ? lpath_0 : null) ? (path ? lpath_0 : null).concat([arr_2_idx]) : null;
                        // .items.'|'.1.0
                        res = json_model_1(arr_2_item, ((path ? lpath_0 : null) ? arr_2_lpath : null), rep);
                        if (! res)
                        {
                            rep !== null && rep.push(["unexpected $Schema [.items.'|'.1.0]", ((path ? lpath_0 : null) ? arr_2_lpath : null)])
                            break;
                        }
                    }
                }
                if (! res)
                {
                    rep !== null && rep.push(["not array or unexpected array [.items.'|'.1]", (path ? lpath_0 : null)])
                }
            }
            if (res)
            {
                if (rep !== null) rep.length = 0
            }
            else
            {
                rep !== null && rep.push(["no model matched [.items.'|']", (path ? lpath_0 : null)])
                rep !== null && rep.push(["invalid optional prop value [.items]", (path ? lpath_0 : null)])
                return false;
            }
        }
        else if (prop == "title")
        {
            // handle may title property
            // .title
            res = (typeof pval === 'string' || pval instanceof String);
            if (! res)
            {
                rep !== null && rep.push(["unexpected string [.title]", (path ? lpath_0 : null)])
                rep !== null && rep.push(["invalid optional prop value [.title]", (path ? lpath_0 : null)])
                return false;
            }
        }
        else if (prop == "format")
        {
            // handle may format property
            // .format
            res = ((pval === null || (typeof pval === 'number' || pval instanceof Number) || (typeof pval === 'boolean' || pval instanceof Boolean) || (typeof pval === 'string' || pval instanceof String))) && _jm_cst_1.has(pval);
            if (! res)
            {
                rep !== null && rep.push(["value not in enum [.format.'|']", (path ? lpath_0 : null)])
                rep !== null && rep.push(["invalid optional prop value [.format]", (path ? lpath_0 : null)])
                return false;
            }
        }
        else if (prop == "$schema")
        {
            // handle may $schema property
            // .'$schema'
            res = (typeof pval === 'string' || pval instanceof String);
            if (! res)
            {
                rep !== null && rep.push(["unexpected string [.'$schema']", (path ? lpath_0 : null)])
                rep !== null && rep.push(["invalid optional prop value [.'$schema']", (path ? lpath_0 : null)])
                return false;
            }
        }
        else if (prop == "default")
        {
            // handle may default property
            // .default
            res = true;
        }
        else if (prop == "extends")
        {
            // handle may extends property
            // .extends
            // .extends.'|'.0
            res = json_model_1(pval, (path ? lpath_0 : null), rep);
            if (! res)
            {
                rep !== null && rep.push(["unexpected $Schema [.extends.'|'.0]", (path ? lpath_0 : null)])
            }
            if (! res)
            {
                // .extends.'|'.1
                res = Array.isArray(pval);
                if (res)
                {
                    for (let arr_3_idx = 0; arr_3_idx < pval.length; arr_3_idx++)
                    {
                        let arr_3_item = pval[arr_3_idx]
                        let arr_3_lpath = (path ? lpath_0 : null) ? (path ? lpath_0 : null).concat([arr_3_idx]) : null;
                        // .extends.'|'.1.0
                        res = json_model_1(arr_3_item, ((path ? lpath_0 : null) ? arr_3_lpath : null), rep);
                        if (! res)
                        {
                            rep !== null && rep.push(["unexpected $Schema [.extends.'|'.1.0]", ((path ? lpath_0 : null) ? arr_3_lpath : null)])
                            break;
                        }
                    }
                }
                if (! res)
                {
                    rep !== null && rep.push(["not array or unexpected array [.extends.'|'.1]", (path ? lpath_0 : null)])
                }
            }
            if (res)
            {
                if (rep !== null) rep.length = 0
            }
            else
            {
                rep !== null && rep.push(["no model matched [.extends.'|']", (path ? lpath_0 : null)])
                rep !== null && rep.push(["invalid optional prop value [.extends]", (path ? lpath_0 : null)])
                return false;
            }
        }
        else if (prop == "maximum")
        {
            // handle may maximum property
            // .maximum
            res = (typeof pval === 'number' || pval instanceof Number);
            if (! res)
            {
                rep !== null && rep.push(["not a -1.0 loose float [.maximum]", (path ? lpath_0 : null)])
                rep !== null && rep.push(["invalid optional prop value [.maximum]", (path ? lpath_0 : null)])
                return false;
            }
        }
        else if (prop == "minimum")
        {
            // handle may minimum property
            // .minimum
            res = (typeof pval === 'number' || pval instanceof Number);
            if (! res)
            {
                rep !== null && rep.push(["not a -1.0 loose float [.minimum]", (path ? lpath_0 : null)])
                rep !== null && rep.push(["invalid optional prop value [.minimum]", (path ? lpath_0 : null)])
                return false;
            }
        }
        else if (prop == "pattern")
        {
            // handle may pattern property
            // .pattern
            res = runtime.jm_is_valid_regex(pval, false);
            if (! res)
            {
                rep !== null && rep.push(["unexpected $REGEX [.pattern]", (path ? lpath_0 : null)])
                rep !== null && rep.push(["invalid optional prop value [.pattern]", (path ? lpath_0 : null)])
                return false;
            }
        }
        else if (prop == "disallow")
        {
            // handle may disallow property
            // .disallow
            // .disallow.'|'.0
            res = (typeof pval === 'string' || pval instanceof String);
            if (! res)
            {
                rep !== null && rep.push(["unexpected string [.disallow.'|'.0]", (path ? lpath_0 : null)])
            }
            if (! res)
            {
                // .disallow.'|'.1
                res = json_model_3(pval, (path ? lpath_0 : null), rep);
                if (! res)
                {
                    rep !== null && rep.push(["unexpected $distinctSchemaArray [.disallow.'|'.1]", (path ? lpath_0 : null)])
                }
            }
            if (res)
            {
                if (rep !== null) rep.length = 0
            }
            else
            {
                rep !== null && rep.push(["no model matched [.disallow.'|']", (path ? lpath_0 : null)])
                rep !== null && rep.push(["invalid optional prop value [.disallow]", (path ? lpath_0 : null)])
                return false;
            }
        }
        else if (prop == "maxItems")
        {
            // handle may maxItems property
            // .maxItems
            res = ((typeof pval === 'number' || pval instanceof Number) && Number.isInteger(pval)) && pval >= 0;
            if (! res)
            {
                rep !== null && rep.push(["not a 0 strict int [.maxItems]", (path ? lpath_0 : null)])
                rep !== null && rep.push(["invalid optional prop value [.maxItems]", (path ? lpath_0 : null)])
                return false;
            }
        }
        else if (prop == "minItems")
        {
            // handle may minItems property
            // .minItems
            res = ((typeof pval === 'number' || pval instanceof Number) && Number.isInteger(pval)) && pval >= 0;
            if (! res)
            {
                rep !== null && rep.push(["not a 0 strict int [.minItems]", (path ? lpath_0 : null)])
                rep !== null && rep.push(["invalid optional prop value [.minItems]", (path ? lpath_0 : null)])
                return false;
            }
        }
        else if (prop == "required")
        {
            // handle may required property
            // .required
            res = (typeof pval === 'boolean' || pval instanceof Boolean);
            if (! res)
            {
                rep !== null && rep.push(["not a bool [.required]", (path ? lpath_0 : null)])
                rep !== null && rep.push(["invalid optional prop value [.required]", (path ? lpath_0 : null)])
                return false;
            }
        }
        else if (prop == "maxLength")
        {
            // handle may maxLength property
            // .maxLength
            res = ((typeof pval === 'number' || pval instanceof Number) && Number.isInteger(pval)) && pval >= 0;
            if (! res)
            {
                rep !== null && rep.push(["not a 0 strict int [.maxLength]", (path ? lpath_0 : null)])
                rep !== null && rep.push(["invalid optional prop value [.maxLength]", (path ? lpath_0 : null)])
                return false;
            }
        }
        else if (prop == "minLength")
        {
            // handle may minLength property
            // .minLength
            res = ((typeof pval === 'number' || pval instanceof Number) && Number.isInteger(pval)) && pval >= 0;
            if (! res)
            {
                rep !== null && rep.push(["not a 0 strict int [.minLength]", (path ? lpath_0 : null)])
                rep !== null && rep.push(["invalid optional prop value [.minLength]", (path ? lpath_0 : null)])
                return false;
            }
        }
        else if (prop == "properties")
        {
            // handle may properties property
            // .properties
            res = _jm_obj_0(pval, (path ? lpath_0 : null), rep);
            if (! res)
            {
                rep !== null && rep.push(["unexpected element [.properties]", (path ? lpath_0 : null)])
                rep !== null && rep.push(["invalid optional prop value [.properties]", (path ? lpath_0 : null)])
                return false;
            }
        }
        else if (prop == "description")
        {
            // handle may description property
            // .description
            res = (typeof pval === 'string' || pval instanceof String);
            if (! res)
            {
                rep !== null && rep.push(["unexpected string [.description]", (path ? lpath_0 : null)])
                rep !== null && rep.push(["invalid optional prop value [.description]", (path ? lpath_0 : null)])
                return false;
            }
        }
        else if (prop == "divisibleBy")
        {
            // handle may divisibleBy property
            // .divisibleBy
            res = ((typeof pval === 'number' || pval instanceof Number)) && pval > 0.0;
            if (! res)
            {
                rep !== null && rep.push(["not a 1.0 loose float [.divisibleBy]", (path ? lpath_0 : null)])
                rep !== null && rep.push(["invalid optional prop value [.divisibleBy]", (path ? lpath_0 : null)])
                return false;
            }
        }
        else if (prop == "uniqueItems")
        {
            // handle may uniqueItems property
            // .uniqueItems
            res = (typeof pval === 'boolean' || pval instanceof Boolean);
            if (! res)
            {
                rep !== null && rep.push(["not a bool [.uniqueItems]", (path ? lpath_0 : null)])
                rep !== null && rep.push(["invalid optional prop value [.uniqueItems]", (path ? lpath_0 : null)])
                return false;
            }
        }
        else if (prop == "dependencies")
        {
            // handle may dependencies property
            // .dependencies
            res = _jm_obj_1(pval, (path ? lpath_0 : null), rep);
            if (! res)
            {
                rep !== null && rep.push(["unexpected element [.dependencies]", (path ? lpath_0 : null)])
                rep !== null && rep.push(["invalid optional prop value [.dependencies]", (path ? lpath_0 : null)])
                return false;
            }
        }
        else if (prop == "additionalItems")
        {
            // handle may additionalItems property
            // .additionalItems
            // .additionalItems.'|'.0
            res = (typeof pval === 'boolean' || pval instanceof Boolean);
            if (! res)
            {
                rep !== null && rep.push(["not a bool [.additionalItems.'|'.0]", (path ? lpath_0 : null)])
            }
            if (! res)
            {
                // .additionalItems.'|'.1
                res = json_model_1(pval, (path ? lpath_0 : null), rep);
                if (! res)
                {
                    rep !== null && rep.push(["unexpected $Schema [.additionalItems.'|'.1]", (path ? lpath_0 : null)])
                }
            }
            if (res)
            {
                if (rep !== null) rep.length = 0
            }
            else
            {
                rep !== null && rep.push(["no model matched [.additionalItems.'|']", (path ? lpath_0 : null)])
                rep !== null && rep.push(["invalid optional prop value [.additionalItems]", (path ? lpath_0 : null)])
                return false;
            }
        }
        else if (prop == "exclusiveMaximum")
        {
            // handle may exclusiveMaximum property
            // .exclusiveMaximum
            res = (typeof pval === 'boolean' || pval instanceof Boolean);
            if (! res)
            {
                rep !== null && rep.push(["not a bool [.exclusiveMaximum]", (path ? lpath_0 : null)])
                rep !== null && rep.push(["invalid optional prop value [.exclusiveMaximum]", (path ? lpath_0 : null)])
                return false;
            }
        }
        else if (prop == "exclusiveMinimum")
        {
            // handle may exclusiveMinimum property
            // .exclusiveMinimum
            res = (typeof pval === 'boolean' || pval instanceof Boolean);
            if (! res)
            {
                rep !== null && rep.push(["not a bool [.exclusiveMinimum]", (path ? lpath_0 : null)])
                rep !== null && rep.push(["invalid optional prop value [.exclusiveMinimum]", (path ? lpath_0 : null)])
                return false;
            }
        }
        else if (prop == "patternProperties")
        {
            // handle may patternProperties property
            // .patternProperties
            res = _jm_obj_2(pval, (path ? lpath_0 : null), rep);
            if (! res)
            {
                rep !== null && rep.push(["unexpected element [.patternProperties]", (path ? lpath_0 : null)])
                rep !== null && rep.push(["invalid optional prop value [.patternProperties]", (path ? lpath_0 : null)])
                return false;
            }
        }
        else if (prop == "additionalProperties")
        {
            // handle may additionalProperties property
            // .additionalProperties
            // .additionalProperties.'|'.0
            res = (typeof pval === 'boolean' || pval instanceof Boolean);
            if (! res)
            {
                rep !== null && rep.push(["not a bool [.additionalProperties.'|'.0]", (path ? lpath_0 : null)])
            }
            if (! res)
            {
                // .additionalProperties.'|'.1
                res = json_model_1(pval, (path ? lpath_0 : null), rep);
                if (! res)
                {
                    rep !== null && rep.push(["unexpected $Schema [.additionalProperties.'|'.1]", (path ? lpath_0 : null)])
                }
            }
            if (res)
            {
                if (rep !== null) rep.length = 0
            }
            else
            {
                rep !== null && rep.push(["no model matched [.additionalProperties.'|']", (path ? lpath_0 : null)])
                rep !== null && rep.push(["invalid optional prop value [.additionalProperties]", (path ? lpath_0 : null)])
                return false;
            }
        }
        else
        {
            rep !== null && rep.push(["unexpected prop [.]", (path ? lpath_0 : null)])
            return false;
        }
    }
    return true;
}


var initialized = false

// differed module initializations
export function check_model_init()
{
    if (! initialized)
    {
        initialized = true;
        runtime.jm_set_rx(RegExp)
        _jm_cst_0.add("null")
        _jm_cst_0.add("boolean")
        _jm_cst_0.add("integer")
        _jm_cst_0.add("number")
        _jm_cst_0.add("string")
        _jm_cst_0.add("array")
        _jm_cst_0.add("object")
        _jm_cst_0.add("any")
        _jm_cst_1.add("date-time")
        _jm_cst_1.add("date")
        _jm_cst_1.add("time")
        _jm_cst_1.add("utc-millisec")
        _jm_cst_1.add("regex")
        _jm_cst_1.add("color")
        _jm_cst_1.add("style")
        _jm_cst_1.add("phone")
        _jm_cst_1.add("uri")
        _jm_cst_1.add("email")
        _jm_cst_1.add("ip-address")
        _jm_cst_1.add("ipv6")
        _jm_cst_1.add("host-name")
        check_model_map.set("", json_model_1)
        check_model_map.set("allTypes", json_model_2)
        check_model_map.set("distinctSchemaArray", json_model_3)
        check_model_map.set("Schema", json_model_1)
    }
}

// differed module cleanup
export function check_model_free()
{
    if (initialized)
    {
        initialized = false;
    }
}

export function check_model(val, name, rep)
{
    let checker = check_model_map.get(name)
    if (checker === undefined)
        throw `no checker for "${name}"`
    let path = rep !== null ? [] : null

    return checker(val, path, rep)
}

// possibly run as main based on a guess
import main from "json_model_runtime/main.js"

if (import.meta.url.endsWith(process.argv[1]))
    main(check_model_init, check_model, check_model_free)
