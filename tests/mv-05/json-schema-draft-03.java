//
// Generated by JSON Model Compiler version 2.0b1
// see https://github.com/clairey-zx81/json-model
//
import json_model.*;
import java.util.Map;
import java.util.Set;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Iterator;
import java.util.regex.Pattern;
import java.util.regex.Matcher;

public class json_schema_draft_03 extends ModelChecker
{
    static public final String VERSION = "2.0b1";

    Set<Object> _jm_cst_0_set;
    Set<Object> _jm_cst_1_set;
    Map<String, Checker> _jm_obj_0_map_pmap;
    public Map<String, Checker> json_schema_draft_03_map_pmap;

    // check $allTypes (.'$allTypes')
    public boolean json_model_2(Object val, Path path, Report rep)
    {
        boolean res;
        // .'$allTypes'
        res = json.isScalar(val) && _jm_cst_0_set.contains(val);
        if (! res)
        {
            if (rep != null) rep.addEntry("value not in enum [.'$allTypes'.'|']", path);
        }
        return res;
    }
    
    // check $distinctSchemaArray (.'$distinctSchemaArray')
    public boolean json_model_3(Object val, Path path, Report rep)
    {
        boolean res;
        // .'$distinctSchemaArray'
        // .'$distinctSchemaArray'.'@'
        res = json.isArray(val);
        if (res)
        {
            int arr_0_idx = -1;
            Iterator<Object> arr_0_item_loop = json.arrayIterator(val);
            while (arr_0_item_loop.hasNext())
            {
                arr_0_idx++;
                Object arr_0_item = arr_0_item_loop.next();
                Path arr_0_lpath = new Path(arr_0_idx, path);
                // .'$distinctSchemaArray'.'@'.0
                // .'$distinctSchemaArray'.'@'.0.'|'.0
                res = json.isString(arr_0_item);
                if (! res)
                {
                    if (rep != null) rep.addEntry("unexpected string [.'$distinctSchemaArray'.'@'.0.'|'.0]", (path != null ? arr_0_lpath : null));
                }
                if (! res)
                {
                    // .'$distinctSchemaArray'.'@'.0.'|'.1
                    res = json_model_1(arr_0_item, (path != null ? arr_0_lpath : null), rep);
                    if (! res)
                    {
                        if (rep != null) rep.addEntry("unexpected $Schema [.'$distinctSchemaArray'.'@'.0.'|'.1]", (path != null ? arr_0_lpath : null));
                    }
                }
                if (res)
                {
                    if (rep != null) rep.clearEntries();
                }
                else
                {
                    if (rep != null) rep.addEntry("no model matched [.'$distinctSchemaArray'.'@'.0.'|']", (path != null ? arr_0_lpath : null));
                }
                if (! res)
                {
                    break;
                }
            }
        }
        if (! res)
        {
            if (rep != null) rep.addEntry("not array or unexpected array [.'$distinctSchemaArray'.'@']", path);
        }
        if (res)
        {
            res = rt.array_is_unique(val, path, rep);
            if (! res)
            {
                if (rep != null) rep.addEntry("constraints failed [.'$distinctSchemaArray']", path);
            }
        }
        return res;
    }
    
    // check _jm_obj_0_map_$ref (.'$ref')
    public boolean _jm_f_0(Object val, Path path, Report rep)
    {
        boolean res;
        // .'$ref'
        res = json.isString(val);
        if (! res)
        {
            if (rep != null) rep.addEntry("unexpected string [.'$ref']", path);
        }
        return res;
    }
    
    // check _jm_obj_0_map_$schema (.'$schema')
    public boolean _jm_f_1(Object val, Path path, Report rep)
    {
        boolean res;
        // .'$schema'
        res = json.isString(val);
        if (! res)
        {
            if (rep != null) rep.addEntry("unexpected string [.'$schema']", path);
        }
        return res;
    }
    
    // check _jm_obj_0_map_additionalItems (.additionalItems)
    public boolean _jm_f_2(Object val, Path path, Report rep)
    {
        boolean res;
        // .additionalItems
        // .additionalItems.'|'.0
        res = json.isBoolean(val);
        if (! res)
        {
            if (rep != null) rep.addEntry("not a bool [.additionalItems.'|'.0]", path);
        }
        if (! res)
        {
            // .additionalItems.'|'.1
            res = json_model_1(val, path, rep);
            if (! res)
            {
                if (rep != null) rep.addEntry("unexpected $Schema [.additionalItems.'|'.1]", path);
            }
        }
        if (res)
        {
            if (rep != null) rep.clearEntries();
        }
        else
        {
            if (rep != null) rep.addEntry("no model matched [.additionalItems.'|']", path);
        }
        return res;
    }
    
    // check _jm_obj_0_map_additionalProperties (.additionalProperties)
    public boolean _jm_f_3(Object val, Path path, Report rep)
    {
        boolean res;
        // .additionalProperties
        // .additionalProperties.'|'.0
        res = json.isBoolean(val);
        if (! res)
        {
            if (rep != null) rep.addEntry("not a bool [.additionalProperties.'|'.0]", path);
        }
        if (! res)
        {
            // .additionalProperties.'|'.1
            res = json_model_1(val, path, rep);
            if (! res)
            {
                if (rep != null) rep.addEntry("unexpected $Schema [.additionalProperties.'|'.1]", path);
            }
        }
        if (res)
        {
            if (rep != null) rep.clearEntries();
        }
        else
        {
            if (rep != null) rep.addEntry("no model matched [.additionalProperties.'|']", path);
        }
        return res;
    }
    
    // check _jm_obj_0_map_default (.default)
    public boolean _jm_f_4(Object val, Path path, Report rep)
    {
        boolean res;
        // .default
        res = true;
        if (! res)
        {
            if (rep != null) rep.addEntry("unexpected $ANY [.default]", path);
        }
        return res;
    }
    
    // object .dependencies
    public boolean _jm_obj_1(Object val, Path path, Report rep)
    {
        if (! json.isObject(val))
        {
            if (rep != null) rep.addEntry("not an object [.dependencies]", path);
            return false;
        }
        boolean res;
        Iterator<String> prop_loop = json.objectIterator(val);
        while (prop_loop.hasNext())
        {
            String prop = prop_loop.next();
            Object pval = json.objectValue(val, prop);
            Path lpath_1 = new Path(prop, path);
            // handle other props
            // .dependencies.''
            // .dependencies.''.'|'.0
            res = json.isString(pval);
            if (! res)
            {
                if (rep != null) rep.addEntry("unexpected string [.dependencies.''.'|'.0]", (path != null ? lpath_1 : null));
            }
            if (! res)
            {
                // .dependencies.''.'|'.1
                res = json.isArray(pval);
                if (res)
                {
                    int arr_1_idx = -1;
                    Iterator<Object> arr_1_item_loop = json.arrayIterator(pval);
                    while (arr_1_item_loop.hasNext())
                    {
                        arr_1_idx++;
                        Object arr_1_item = arr_1_item_loop.next();
                        Path arr_1_lpath = new Path(arr_1_idx, (path != null ? lpath_1 : null));
                        // .dependencies.''.'|'.1.0
                        res = json.isString(arr_1_item);
                        if (! res)
                        {
                            if (rep != null) rep.addEntry("unexpected string [.dependencies.''.'|'.1.0]", ((path != null ? lpath_1 : null) != null ? arr_1_lpath : null));
                        }
                        if (! res)
                        {
                            break;
                        }
                    }
                }
                if (! res)
                {
                    if (rep != null) rep.addEntry("not array or unexpected array [.dependencies.''.'|'.1]", (path != null ? lpath_1 : null));
                }
                if (! res)
                {
                    // .dependencies.''.'|'.2
                    res = json_model_1(pval, (path != null ? lpath_1 : null), rep);
                    if (! res)
                    {
                        if (rep != null) rep.addEntry("unexpected $Schema [.dependencies.''.'|'.2]", (path != null ? lpath_1 : null));
                    }
                }
            }
            if (res)
            {
                if (rep != null) rep.clearEntries();
            }
            else
            {
                if (rep != null) rep.addEntry("no model matched [.dependencies.''.'|']", (path != null ? lpath_1 : null));
            }
            if (! res)
            {
                return false;
            }
        }
        return true;
    }
    
    // check _jm_obj_0_map_dependencies (.dependencies)
    public boolean _jm_f_5(Object val, Path path, Report rep)
    {
        boolean res;
        // .dependencies
        res = _jm_obj_1(val, path, rep);
        if (! res)
        {
            if (rep != null) rep.addEntry("unexpected element [.dependencies]", path);
        }
        return res;
    }
    
    // check _jm_obj_0_map_description (.description)
    public boolean _jm_f_6(Object val, Path path, Report rep)
    {
        boolean res;
        // .description
        res = json.isString(val);
        if (! res)
        {
            if (rep != null) rep.addEntry("unexpected string [.description]", path);
        }
        return res;
    }
    
    // check _jm_obj_0_map_disallow (.disallow)
    public boolean _jm_f_7(Object val, Path path, Report rep)
    {
        boolean res;
        // .disallow
        // .disallow.'|'.0
        res = json.isString(val);
        if (! res)
        {
            if (rep != null) rep.addEntry("unexpected string [.disallow.'|'.0]", path);
        }
        if (! res)
        {
            // .disallow.'|'.1
            res = json_model_3(val, path, rep);
            if (! res)
            {
                if (rep != null) rep.addEntry("unexpected $distinctSchemaArray [.disallow.'|'.1]", path);
            }
        }
        if (res)
        {
            if (rep != null) rep.clearEntries();
        }
        else
        {
            if (rep != null) rep.addEntry("no model matched [.disallow.'|']", path);
        }
        return res;
    }
    
    // check _jm_obj_0_map_divisibleBy (.divisibleBy)
    public boolean _jm_f_8(Object val, Path path, Report rep)
    {
        boolean res;
        // .divisibleBy
        res = json.isNumber(val) && json.asNumber(val) > 0.0;
        if (! res)
        {
            if (rep != null) rep.addEntry("not a 1.0 loose float [.divisibleBy]", path);
        }
        return res;
    }
    
    // check _jm_obj_0_map_enum (.enum)
    public boolean _jm_f_9(Object val, Path path, Report rep)
    {
        boolean res;
        // .enum
        // .enum.'@'
        res = json.isArray(val);
        if (res)
        {
            // accept any array
        }
        if (! res)
        {
            if (rep != null) rep.addEntry("not array or unexpected array [.enum.'@']", path);
        }
        if (res)
        {
            long ival_0 = json.arrayLength(val);
            res = rt.array_is_unique(val, path, rep) && ival_0 >= 1;
            if (! res)
            {
                if (rep != null) rep.addEntry("constraints failed [.enum]", path);
            }
        }
        return res;
    }
    
    // check _jm_obj_0_map_exclusiveMaximum (.exclusiveMaximum)
    public boolean _jm_f_10(Object val, Path path, Report rep)
    {
        boolean res;
        // .exclusiveMaximum
        res = json.isBoolean(val);
        if (! res)
        {
            if (rep != null) rep.addEntry("not a bool [.exclusiveMaximum]", path);
        }
        return res;
    }
    
    // check _jm_obj_0_map_exclusiveMinimum (.exclusiveMinimum)
    public boolean _jm_f_11(Object val, Path path, Report rep)
    {
        boolean res;
        // .exclusiveMinimum
        res = json.isBoolean(val);
        if (! res)
        {
            if (rep != null) rep.addEntry("not a bool [.exclusiveMinimum]", path);
        }
        return res;
    }
    
    // check _jm_obj_0_map_extends (.extends)
    public boolean _jm_f_12(Object val, Path path, Report rep)
    {
        boolean res;
        // .extends
        // .extends.'|'.0
        res = json_model_1(val, path, rep);
        if (! res)
        {
            if (rep != null) rep.addEntry("unexpected $Schema [.extends.'|'.0]", path);
        }
        if (! res)
        {
            // .extends.'|'.1
            res = json.isArray(val);
            if (res)
            {
                int arr_2_idx = -1;
                Iterator<Object> arr_2_item_loop = json.arrayIterator(val);
                while (arr_2_item_loop.hasNext())
                {
                    arr_2_idx++;
                    Object arr_2_item = arr_2_item_loop.next();
                    Path arr_2_lpath = new Path(arr_2_idx, path);
                    // .extends.'|'.1.0
                    res = json_model_1(arr_2_item, (path != null ? arr_2_lpath : null), rep);
                    if (! res)
                    {
                        if (rep != null) rep.addEntry("unexpected $Schema [.extends.'|'.1.0]", (path != null ? arr_2_lpath : null));
                    }
                    if (! res)
                    {
                        break;
                    }
                }
            }
            if (! res)
            {
                if (rep != null) rep.addEntry("not array or unexpected array [.extends.'|'.1]", path);
            }
        }
        if (res)
        {
            if (rep != null) rep.clearEntries();
        }
        else
        {
            if (rep != null) rep.addEntry("no model matched [.extends.'|']", path);
        }
        return res;
    }
    
    
    // check _jm_obj_0_map_format (.format)
    public boolean _jm_f_13(Object val, Path path, Report rep)
    {
        boolean res;
        // .format
        res = json.isScalar(val) && _jm_cst_1_set.contains(val);
        if (! res)
        {
            if (rep != null) rep.addEntry("value not in enum [.format.'|']", path);
        }
        return res;
    }
    
    // check _jm_obj_0_map_id (.id)
    public boolean _jm_f_14(Object val, Path path, Report rep)
    {
        boolean res;
        // .id
        res = json.isString(val);
        if (! res)
        {
            if (rep != null) rep.addEntry("unexpected string [.id]", path);
        }
        return res;
    }
    
    // check _jm_obj_0_map_items (.items)
    public boolean _jm_f_15(Object val, Path path, Report rep)
    {
        boolean res;
        // .items
        // .items.'|'.0
        res = json_model_1(val, path, rep);
        if (! res)
        {
            if (rep != null) rep.addEntry("unexpected $Schema [.items.'|'.0]", path);
        }
        if (! res)
        {
            // .items.'|'.1
            res = json.isArray(val);
            if (res)
            {
                int arr_3_idx = -1;
                Iterator<Object> arr_3_item_loop = json.arrayIterator(val);
                while (arr_3_item_loop.hasNext())
                {
                    arr_3_idx++;
                    Object arr_3_item = arr_3_item_loop.next();
                    Path arr_3_lpath = new Path(arr_3_idx, path);
                    // .items.'|'.1.0
                    res = json_model_1(arr_3_item, (path != null ? arr_3_lpath : null), rep);
                    if (! res)
                    {
                        if (rep != null) rep.addEntry("unexpected $Schema [.items.'|'.1.0]", (path != null ? arr_3_lpath : null));
                    }
                    if (! res)
                    {
                        break;
                    }
                }
            }
            if (! res)
            {
                if (rep != null) rep.addEntry("not array or unexpected array [.items.'|'.1]", path);
            }
        }
        if (res)
        {
            if (rep != null) rep.clearEntries();
        }
        else
        {
            if (rep != null) rep.addEntry("no model matched [.items.'|']", path);
        }
        return res;
    }
    
    // check _jm_obj_0_map_maxItems (.maxItems)
    public boolean _jm_f_16(Object val, Path path, Report rep)
    {
        boolean res;
        // .maxItems
        res = json.isInteger(val) && json.asLong(val) >= 0;
        if (! res)
        {
            if (rep != null) rep.addEntry("not a 0 strict int [.maxItems]", path);
        }
        return res;
    }
    
    // check _jm_obj_0_map_maxLength (.maxLength)
    public boolean _jm_f_17(Object val, Path path, Report rep)
    {
        boolean res;
        // .maxLength
        res = json.isInteger(val) && json.asLong(val) >= 0;
        if (! res)
        {
            if (rep != null) rep.addEntry("not a 0 strict int [.maxLength]", path);
        }
        return res;
    }
    
    // check _jm_obj_0_map_maximum (.maximum)
    public boolean _jm_f_18(Object val, Path path, Report rep)
    {
        boolean res;
        // .maximum
        res = json.isNumber(val);
        if (! res)
        {
            if (rep != null) rep.addEntry("not a -1.0 loose float [.maximum]", path);
        }
        return res;
    }
    
    // check _jm_obj_0_map_minItems (.minItems)
    public boolean _jm_f_19(Object val, Path path, Report rep)
    {
        boolean res;
        // .minItems
        res = json.isInteger(val) && json.asLong(val) >= 0;
        if (! res)
        {
            if (rep != null) rep.addEntry("not a 0 strict int [.minItems]", path);
        }
        return res;
    }
    
    // check _jm_obj_0_map_minLength (.minLength)
    public boolean _jm_f_20(Object val, Path path, Report rep)
    {
        boolean res;
        // .minLength
        res = json.isInteger(val) && json.asLong(val) >= 0;
        if (! res)
        {
            if (rep != null) rep.addEntry("not a 0 strict int [.minLength]", path);
        }
        return res;
    }
    
    // check _jm_obj_0_map_minimum (.minimum)
    public boolean _jm_f_21(Object val, Path path, Report rep)
    {
        boolean res;
        // .minimum
        res = json.isNumber(val);
        if (! res)
        {
            if (rep != null) rep.addEntry("not a -1.0 loose float [.minimum]", path);
        }
        return res;
    }
    
    // check _jm_obj_0_map_pattern (.pattern)
    public boolean _jm_f_22(Object val, Path path, Report rep)
    {
        boolean res;
        // .pattern
        res = rt.is_valid_regex(json.asString(val));
        if (! res)
        {
            if (rep != null) rep.addEntry("unexpected $REGEX [.pattern]", path);
        }
        return res;
    }
    
    // object .patternProperties
    public boolean _jm_obj_2(Object val, Path path, Report rep)
    {
        if (! json.isObject(val))
        {
            if (rep != null) rep.addEntry("not an object [.patternProperties]", path);
            return false;
        }
        boolean res;
        Iterator<String> prop_loop = json.objectIterator(val);
        while (prop_loop.hasNext())
        {
            String prop = prop_loop.next();
            Object pval = json.objectValue(val, prop);
            Path lpath_2 = new Path(prop, path);
            // handle other props
            // .patternProperties.''
            res = json_model_1(pval, (path != null ? lpath_2 : null), rep);
            if (! res)
            {
                if (rep != null) rep.addEntry("unexpected $Schema [.patternProperties.'']", (path != null ? lpath_2 : null));
            }
            if (! res)
            {
                return false;
            }
        }
        return true;
    }
    
    // check _jm_obj_0_map_patternProperties (.patternProperties)
    public boolean _jm_f_23(Object val, Path path, Report rep)
    {
        boolean res;
        // .patternProperties
        res = _jm_obj_2(val, path, rep);
        if (! res)
        {
            if (rep != null) rep.addEntry("unexpected element [.patternProperties]", path);
        }
        return res;
    }
    
    // object .properties
    public boolean _jm_obj_3(Object val, Path path, Report rep)
    {
        if (! json.isObject(val))
        {
            if (rep != null) rep.addEntry("not an object [.properties]", path);
            return false;
        }
        boolean res;
        Iterator<String> prop_loop = json.objectIterator(val);
        while (prop_loop.hasNext())
        {
            String prop = prop_loop.next();
            Object pval = json.objectValue(val, prop);
            Path lpath_3 = new Path(prop, path);
            // handle other props
            // .properties.''
            res = json_model_1(pval, (path != null ? lpath_3 : null), rep);
            if (! res)
            {
                if (rep != null) rep.addEntry("unexpected $Schema [.properties.'']", (path != null ? lpath_3 : null));
            }
            if (! res)
            {
                return false;
            }
        }
        return true;
    }
    
    // check _jm_obj_0_map_properties (.properties)
    public boolean _jm_f_24(Object val, Path path, Report rep)
    {
        boolean res;
        // .properties
        res = _jm_obj_3(val, path, rep);
        if (! res)
        {
            if (rep != null) rep.addEntry("unexpected element [.properties]", path);
        }
        return res;
    }
    
    // check _jm_obj_0_map_required (.required)
    public boolean _jm_f_25(Object val, Path path, Report rep)
    {
        boolean res;
        // .required
        res = json.isBoolean(val);
        if (! res)
        {
            if (rep != null) rep.addEntry("not a bool [.required]", path);
        }
        return res;
    }
    
    // check _jm_obj_0_map_title (.title)
    public boolean _jm_f_26(Object val, Path path, Report rep)
    {
        boolean res;
        // .title
        res = json.isString(val);
        if (! res)
        {
            if (rep != null) rep.addEntry("unexpected string [.title]", path);
        }
        return res;
    }
    
    // check _jm_obj_0_map_type (.type)
    public boolean _jm_f_27(Object val, Path path, Report rep)
    {
        boolean res;
        // .type
        // .type.'|'.0
        res = json_model_2(val, path, rep);
        if (! res)
        {
            if (rep != null) rep.addEntry("unexpected $allTypes [.type.'|'.0]", path);
        }
        if (! res)
        {
            // .type.'|'.1
            res = json.isArray(val);
            if (res)
            {
                int arr_4_idx = -1;
                Iterator<Object> arr_4_item_loop = json.arrayIterator(val);
                while (arr_4_item_loop.hasNext())
                {
                    arr_4_idx++;
                    Object arr_4_item = arr_4_item_loop.next();
                    Path arr_4_lpath = new Path(arr_4_idx, path);
                    // .type.'|'.1.0
                    // .type.'|'.1.0.'|'.0
                    res = json.isString(arr_4_item);
                    if (! res)
                    {
                        if (rep != null) rep.addEntry("unexpected string [.type.'|'.1.0.'|'.0]", (path != null ? arr_4_lpath : null));
                    }
                    if (! res)
                    {
                        // .type.'|'.1.0.'|'.1
                        res = json_model_1(arr_4_item, (path != null ? arr_4_lpath : null), rep);
                        if (! res)
                        {
                            if (rep != null) rep.addEntry("unexpected $Schema [.type.'|'.1.0.'|'.1]", (path != null ? arr_4_lpath : null));
                        }
                    }
                    if (res)
                    {
                        if (rep != null) rep.clearEntries();
                    }
                    else
                    {
                        if (rep != null) rep.addEntry("no model matched [.type.'|'.1.0.'|']", (path != null ? arr_4_lpath : null));
                    }
                    if (! res)
                    {
                        break;
                    }
                }
            }
            if (! res)
            {
                if (rep != null) rep.addEntry("not array or unexpected array [.type.'|'.1]", path);
            }
        }
        if (res)
        {
            if (rep != null) rep.clearEntries();
        }
        else
        {
            if (rep != null) rep.addEntry("no model matched [.type.'|']", path);
        }
        return res;
    }
    
    // check _jm_obj_0_map_uniqueItems (.uniqueItems)
    public boolean _jm_f_28(Object val, Path path, Report rep)
    {
        boolean res;
        // .uniqueItems
        res = json.isBoolean(val);
        if (! res)
        {
            if (rep != null) rep.addEntry("not a bool [.uniqueItems]", path);
        }
        return res;
    }
    
    
    // object .
    public boolean _jm_obj_0(Object val, Path path, Report rep)
    {
        if (! json.isObject(val))
        {
            if (rep != null) rep.addEntry("not an object [.]", path);
            return false;
        }
        Checker pfun;
        Iterator<String> prop_loop = json.objectIterator(val);
        while (prop_loop.hasNext())
        {
            String prop = prop_loop.next();
            Object pval = json.objectValue(val, prop);
            Path lpath_0 = new Path(prop, path);
            if ((pfun = _jm_obj_0_map_pmap.get(prop)) != null)
            {
                // handle 29 may props
                if (pfun != null && ! (pfun.call(pval, (path != null ? lpath_0 : null), rep)))
                {
                    if (rep != null) rep.addEntry("invalid optional prop value [.]", (path != null ? lpath_0 : null));
                    return false;
                }
            }
            else
            {
                if (rep != null) rep.addEntry("unexpected prop [.]", (path != null ? lpath_0 : null));
                return false;
            }
        }
        return true;
    }
    
    // check $ (.)
    public boolean json_model_1(Object val, Path path, Report rep)
    {
        boolean res;
        // JSON Model for JSON Schema Draft 03 [JSON_MODEL_STRICT_INT, JSON_MODEL_LOOSE_FLOAT]
        // .
        res = _jm_obj_0(val, path, rep);
        if (! res)
        {
            if (rep != null) rep.addEntry("unexpected element [.]", path);
        }
        return res;
    }
    

    public void init(JSON json)
    {
        if (!initialized)
        {
            try {
            _jm_cst_0_set = new HashSet<Object>();
            _jm_cst_0_set.add(json.safeJSON("\"null\""));
            _jm_cst_0_set.add(json.safeJSON("\"boolean\""));
            _jm_cst_0_set.add(json.safeJSON("\"integer\""));
            _jm_cst_0_set.add(json.safeJSON("\"number\""));
            _jm_cst_0_set.add(json.safeJSON("\"string\""));
            _jm_cst_0_set.add(json.safeJSON("\"array\""));
            _jm_cst_0_set.add(json.safeJSON("\"object\""));
            _jm_cst_0_set.add(json.safeJSON("\"any\""));
            _jm_cst_1_set = new HashSet<Object>();
            _jm_cst_1_set.add(json.safeJSON("\"date-time\""));
            _jm_cst_1_set.add(json.safeJSON("\"date\""));
            _jm_cst_1_set.add(json.safeJSON("\"time\""));
            _jm_cst_1_set.add(json.safeJSON("\"utc-millisec\""));
            _jm_cst_1_set.add(json.safeJSON("\"regex\""));
            _jm_cst_1_set.add(json.safeJSON("\"color\""));
            _jm_cst_1_set.add(json.safeJSON("\"style\""));
            _jm_cst_1_set.add(json.safeJSON("\"phone\""));
            _jm_cst_1_set.add(json.safeJSON("\"uri\""));
            _jm_cst_1_set.add(json.safeJSON("\"email\""));
            _jm_cst_1_set.add(json.safeJSON("\"ip-address\""));
            _jm_cst_1_set.add(json.safeJSON("\"ipv6\""));
            _jm_cst_1_set.add(json.safeJSON("\"host-name\""));
            _jm_obj_0_map_pmap = new HashMap<String, Checker>();
            _jm_obj_0_map_pmap.put("$ref", new Checker() { public boolean call(Object o, Path p, Report r) { return _jm_f_0(o, p, r);} });
            _jm_obj_0_map_pmap.put("$schema", new Checker() { public boolean call(Object o, Path p, Report r) { return _jm_f_1(o, p, r);} });
            _jm_obj_0_map_pmap.put("additionalItems", new Checker() { public boolean call(Object o, Path p, Report r) { return _jm_f_2(o, p, r);} });
            _jm_obj_0_map_pmap.put("additionalProperties", new Checker() { public boolean call(Object o, Path p, Report r) { return _jm_f_3(o, p, r);} });
            _jm_obj_0_map_pmap.put("default", new Checker() { public boolean call(Object o, Path p, Report r) { return _jm_f_4(o, p, r);} });
            _jm_obj_0_map_pmap.put("dependencies", new Checker() { public boolean call(Object o, Path p, Report r) { return _jm_f_5(o, p, r);} });
            _jm_obj_0_map_pmap.put("description", new Checker() { public boolean call(Object o, Path p, Report r) { return _jm_f_6(o, p, r);} });
            _jm_obj_0_map_pmap.put("disallow", new Checker() { public boolean call(Object o, Path p, Report r) { return _jm_f_7(o, p, r);} });
            _jm_obj_0_map_pmap.put("divisibleBy", new Checker() { public boolean call(Object o, Path p, Report r) { return _jm_f_8(o, p, r);} });
            _jm_obj_0_map_pmap.put("enum", new Checker() { public boolean call(Object o, Path p, Report r) { return _jm_f_9(o, p, r);} });
            _jm_obj_0_map_pmap.put("exclusiveMaximum", new Checker() { public boolean call(Object o, Path p, Report r) { return _jm_f_10(o, p, r);} });
            _jm_obj_0_map_pmap.put("exclusiveMinimum", new Checker() { public boolean call(Object o, Path p, Report r) { return _jm_f_11(o, p, r);} });
            _jm_obj_0_map_pmap.put("extends", new Checker() { public boolean call(Object o, Path p, Report r) { return _jm_f_12(o, p, r);} });
            _jm_obj_0_map_pmap.put("format", new Checker() { public boolean call(Object o, Path p, Report r) { return _jm_f_13(o, p, r);} });
            _jm_obj_0_map_pmap.put("id", new Checker() { public boolean call(Object o, Path p, Report r) { return _jm_f_14(o, p, r);} });
            _jm_obj_0_map_pmap.put("items", new Checker() { public boolean call(Object o, Path p, Report r) { return _jm_f_15(o, p, r);} });
            _jm_obj_0_map_pmap.put("maxItems", new Checker() { public boolean call(Object o, Path p, Report r) { return _jm_f_16(o, p, r);} });
            _jm_obj_0_map_pmap.put("maxLength", new Checker() { public boolean call(Object o, Path p, Report r) { return _jm_f_17(o, p, r);} });
            _jm_obj_0_map_pmap.put("maximum", new Checker() { public boolean call(Object o, Path p, Report r) { return _jm_f_18(o, p, r);} });
            _jm_obj_0_map_pmap.put("minItems", new Checker() { public boolean call(Object o, Path p, Report r) { return _jm_f_19(o, p, r);} });
            _jm_obj_0_map_pmap.put("minLength", new Checker() { public boolean call(Object o, Path p, Report r) { return _jm_f_20(o, p, r);} });
            _jm_obj_0_map_pmap.put("minimum", new Checker() { public boolean call(Object o, Path p, Report r) { return _jm_f_21(o, p, r);} });
            _jm_obj_0_map_pmap.put("pattern", new Checker() { public boolean call(Object o, Path p, Report r) { return _jm_f_22(o, p, r);} });
            _jm_obj_0_map_pmap.put("patternProperties", new Checker() { public boolean call(Object o, Path p, Report r) { return _jm_f_23(o, p, r);} });
            _jm_obj_0_map_pmap.put("properties", new Checker() { public boolean call(Object o, Path p, Report r) { return _jm_f_24(o, p, r);} });
            _jm_obj_0_map_pmap.put("required", new Checker() { public boolean call(Object o, Path p, Report r) { return _jm_f_25(o, p, r);} });
            _jm_obj_0_map_pmap.put("title", new Checker() { public boolean call(Object o, Path p, Report r) { return _jm_f_26(o, p, r);} });
            _jm_obj_0_map_pmap.put("type", new Checker() { public boolean call(Object o, Path p, Report r) { return _jm_f_27(o, p, r);} });
            _jm_obj_0_map_pmap.put("uniqueItems", new Checker() { public boolean call(Object o, Path p, Report r) { return _jm_f_28(o, p, r);} });
            json_schema_draft_03_map_pmap = new HashMap<String, Checker>();
            json_schema_draft_03_map_pmap.put("", new Checker() { public boolean call(Object o, Path p, Report r) { return json_model_1(o, p, r);} });
            json_schema_draft_03_map_pmap.put("allTypes", new Checker() { public boolean call(Object o, Path p, Report r) { return json_model_2(o, p, r);} });
            json_schema_draft_03_map_pmap.put("distinctSchemaArray", new Checker() { public boolean call(Object o, Path p, Report r) { return json_model_3(o, p, r);} });
            json_schema_draft_03_map_pmap.put("Schema", new Checker() { public boolean call(Object o, Path p, Report r) { return json_model_1(o, p, r);} });
                super.init(json);
            }
            catch (Exception e) {
                throw new Error("cannot initialized model checker: " + e);
            }
        }
    }

    public void free()
    {
        if (initialized)
        {
            super.free();
            _jm_cst_0_set = null;
            _jm_cst_1_set = null;
            _jm_obj_0_map_pmap = null;
            json_schema_draft_03_map_pmap = null;
        }
    }

    public Checker get(String name)
    {
        return json_schema_draft_03_map_pmap.get(name);
    }

    static public void main(String[] args) throws Exception
    {
        ModelChecker checker = new json_schema_draft_03();
        Main.main("json_schema_draft_03", checker, VERSION, args);
    }
}
