#! /bin/env node
// we may need require to load re2
import { createRequire } from 'node:module';
const require = createRequire(import.meta.url);
//
// Generated by JSON Model Compiler version 2
// see https://github.com/clairey-zx81/json-model
//
import * as runtime from "json_model_runtime"
const JSON_MODEL_VERSION = "2";

var check_model_map = new Map()

// check $Zz (.'$Zz')
function json_model_5(val, path, rep)
{
    let res;
    // .'$Zz'
    res = json_model_6(val, path, rep);
    if (! res)
    {
        rep !== null && rep.push(["unexpected $zero [.'$Zz']", path])
    }
    return res;
}

// check $z (.'$z')
function json_model_3(val, path, rep)
{
    let res;
    // .'$z'
    res = json_model_6(val, path, rep);
    if (! res)
    {
        rep !== null && rep.push(["unexpected $Zz#zero [.'$z']", path])
    }
    return res;
}

// check $l (.'$l')
function json_model_4(val, path, rep)
{
    let res;
    // .'$l'
    res = Array.isArray(val);
    if (res)
    {
        for (let arr_0_idx = 0; arr_0_idx < val.length; arr_0_idx++)
        {
            let arr_0_item = val[arr_0_idx]
            let arr_0_lpath = path ? path.concat([arr_0_idx]) : null;
            // .'$l'.0
            res = json_model_3(arr_0_item, (path ? arr_0_lpath : null), rep);
            if (! res)
            {
                rep !== null && rep.push(["unexpected $z [.'$l'.0]", (path ? arr_0_lpath : null)])
                break;
            }
        }
    }
    if (! res)
    {
        rep !== null && rep.push(["not array or unexpected array [.'$l']", path])
    }
    return res;
}

// check $ (.)
function json_model_1(val, path, rep)
{
    let res;
    // .
    res = json_model_4(val, path, rep);
    if (! res)
    {
        rep !== null && rep.push(["unexpected $l [.]", path])
    }
    return res;
}

// object .'$Zz#zero'
function _jm_obj_0(val, path, rep)
{
    if (! (Object.prototype.toString.call(val) === '[object Object]'))
    {
        rep !== null && rep.push(["not an object [.'$Zz#zero']", path])
        return false;
    }
    let res;
    let must_count = 0;
    for (const [prop, pval] of Object.entries(val))
    {
        let lpath_0 = path ? path.concat([prop]) : null;
        if (prop == "za")
        {
            // handle must za property
            must_count += 1;
            // .'$Zz#zero'.za
            res = ((typeof pval === 'number' || pval instanceof Number) && Number.isInteger(pval)) && pval >= 0;
            if (! res)
            {
                rep !== null && rep.push(["not a 0 strict int [.'$Zz#zero'.za]", (path ? lpath_0 : null)])
                rep !== null && rep.push(["invalid mandatory prop value [.'$Zz#zero'.za]", (path ? lpath_0 : null)])
                return false;
            }
        }
        else if (prop == "zb")
        {
            // handle must zb property
            must_count += 1;
            // .'$Zz#zero'.zb
            res = ((typeof pval === 'number' || pval instanceof Number) && Number.isInteger(pval)) && pval >= 0;
            if (! res)
            {
                rep !== null && rep.push(["not a 0 strict int [.'$Zz#zero'.zb]", (path ? lpath_0 : null)])
                rep !== null && rep.push(["invalid mandatory prop value [.'$Zz#zero'.zb]", (path ? lpath_0 : null)])
                return false;
            }
        }
        else
        {
            rep !== null && rep.push(["unexpected prop [.'$Zz#zero']", (path ? lpath_0 : null)])
            return false;
        }
    }
    if (must_count != 2)
    {
        if (rep !== null)
        {
            if (! val.hasOwnProperty("za"))
            {
                rep !== null && rep.push(["missing mandatory prop <za> [.'$Zz#zero']", path])
            }
            if (! val.hasOwnProperty("zb"))
            {
                rep !== null && rep.push(["missing mandatory prop <zb> [.'$Zz#zero']", path])
            }
        }
        return false;
    }
    return true;
}

// check $Zz#zero (.'$Zz#zero')
function json_model_6(val, path, rep)
{
    let res;
    // .'$Zz#zero'
    res = _jm_obj_0(val, path, rep);
    if (! res)
    {
        rep !== null && rep.push(["unexpected element [.'$Zz#zero']", path])
    }
    return res;
}


var initialized = false

// differed module initializations
export function check_model_init()
{
    if (! initialized)
    {
        initialized = true;
        runtime.jm_set_rx(RegExp)
        check_model_map.set("", json_model_4)
        check_model_map.set("Zz", json_model_5)
        check_model_map.set("z", json_model_3)
        check_model_map.set("l", json_model_4)
    }
}

// differed module cleanup
export function check_model_free()
{
    if (initialized)
    {
        initialized = false;
    }
}

export function check_model(val, name, rep)
{
    let checker = check_model_map.get(name)
    if (checker === undefined)
        throw `no checker for "${name}"`
    let path = rep !== null ? [] : null

    return checker(val, path, rep)
}

// possibly run as main based on a guess
import main from "json_model_runtime/main.js"

if (import.meta.url.endsWith(process.argv[1]))
    main(check_model_init, check_model, check_model_free)
