#! /bin/env node
// we may need require to load re2
import { createRequire } from 'node:module';
const require = createRequire(import.meta.url);
//
// Generated by JSON Model Compiler version 2
// see https://github.com/clairey-zx81/json-model
//
import * as runtime from "json_model_runtime"
const JSON_MODEL_VERSION = "2";

let _jm_map_0 = new Map()
var check_model_map = new Map()

// object .'|'.0
function _jm_obj_0(val, path, rep)
{
    // check close must only props
    if (! (Object.prototype.toString.call(val) === '[object Object]'))
    {
        rep !== null && rep.push(["not an object [.'|'.0]", path])
        return false;
    }
    if (Object.keys(val).length != 2)
    {
        rep !== null && rep.push(["bad property count [.'|'.0]", path])
        return false;
    }
    let lpath;
    let pval;
    let res;
    if (! val.hasOwnProperty("discriminator"))
    {
        rep !== null && rep.push(["missing mandatory prop <discriminator> [.'|'.0]", path])
        return false;
    }
    lpath = path ? path.concat(["discriminator"]) : null;
    pval = val["discriminator"];
    // .'|'.0.discriminator
    res = ((typeof pval === 'boolean' || pval instanceof Boolean)) && pval == true;
    if (! res)
    {
        rep !== null && rep.push(["unexpected =true [.'|'.0.discriminator]", (path ? lpath : null)])
        rep !== null && rep.push(["unexpected value for mandatory prop <discriminator> [.'|'.0]", (path ? lpath : null)])
        return false;
    }
    if (! val.hasOwnProperty("x"))
    {
        rep !== null && rep.push(["missing mandatory prop <x> [.'|'.0]", path])
        return false;
    }
    lpath = path ? path.concat(["x"]) : null;
    pval = val["x"];
    // .'|'.0.x
    res = (typeof pval === 'string' || pval instanceof String);
    if (! res)
    {
        rep !== null && rep.push(["unexpected string [.'|'.0.x]", (path ? lpath : null)])
        rep !== null && rep.push(["unexpected value for mandatory prop <x> [.'|'.0]", (path ? lpath : null)])
        return false;
    }
    return true;
}

// object .'|'.1
function _jm_obj_1(val, path, rep)
{
    // check close must only props
    if (! (Object.prototype.toString.call(val) === '[object Object]'))
    {
        rep !== null && rep.push(["not an object [.'|'.1]", path])
        return false;
    }
    if (Object.keys(val).length != 2)
    {
        rep !== null && rep.push(["bad property count [.'|'.1]", path])
        return false;
    }
    let lpath;
    let pval;
    let res;
    if (! val.hasOwnProperty("discriminator"))
    {
        rep !== null && rep.push(["missing mandatory prop <discriminator> [.'|'.1]", path])
        return false;
    }
    lpath = path ? path.concat(["discriminator"]) : null;
    pval = val["discriminator"];
    // .'|'.1.discriminator
    res = ((typeof pval === 'boolean' || pval instanceof Boolean)) && pval == false;
    if (! res)
    {
        rep !== null && rep.push(["unexpected =false [.'|'.1.discriminator]", (path ? lpath : null)])
        rep !== null && rep.push(["unexpected value for mandatory prop <discriminator> [.'|'.1]", (path ? lpath : null)])
        return false;
    }
    if (! val.hasOwnProperty("y"))
    {
        rep !== null && rep.push(["missing mandatory prop <y> [.'|'.1]", path])
        return false;
    }
    lpath = path ? path.concat(["y"]) : null;
    pval = val["y"];
    // .'|'.1.y
    res = (typeof pval === 'string' || pval instanceof String);
    if (! res)
    {
        rep !== null && rep.push(["unexpected string [.'|'.1.y]", (path ? lpath : null)])
        rep !== null && rep.push(["unexpected value for mandatory prop <y> [.'|'.1]", (path ? lpath : null)])
        return false;
    }
    return true;
}


// check $ (.)
function json_model_1(val, path, rep)
{
    let res;
    // boolean tag
    // .
    let iso_0 = Object.prototype.toString.call(val) === '[object Object]';
    res = iso_0;
    if (res)
    {
        if (val.hasOwnProperty("discriminator"))
        {
            let tag_0 = val["discriminator"];
            let fun_0 = _jm_map_0.get(tag_0);
            if (fun_0 !== undefined)
            {
                res = fun_0(val, path, rep);
            }
            else
            {
                res = false;
                rep !== null && rep.push(["tag <discriminator> value not found [.'|']", path])
            }
        }
        else
        {
            res = false;
            rep !== null && rep.push(["tag prop <discriminator> is missing [.'|']", path])
        }
    }
    else
    {
        rep !== null && rep.push(["value is not an object [.'|']", path])
    }
    return res;
}


var initialized = false

// differed module initializations
export function check_model_init()
{
    if (! initialized)
    {
        initialized = true;
        runtime.jm_set_rx(RegExp)
        _jm_map_0.set(true, _jm_obj_0)
        _jm_map_0.set(false, _jm_obj_1)
        check_model_map.set("", json_model_1)
    }
}

// differed module cleanup
export function check_model_free()
{
    if (initialized)
    {
        initialized = false;
    }
}

export function check_model(val, name, rep)
{
    let checker = check_model_map.get(name)
    if (checker === undefined)
        throw `no checker for "${name}"`
    let path = rep !== null ? [] : null

    return checker(val, path, rep)
}

// possibly run as main based on a guess
import main from "json_model_runtime/main.js"

if (import.meta.url.endsWith(process.argv[1]))
    main(check_model_init, check_model, check_model_free)
