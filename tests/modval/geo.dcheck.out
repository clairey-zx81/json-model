geo.0.true.json: PASS
geo.1.false.json: FAIL [('.Point.type', '$.type', 'expecting string Point'), ('.geometry.|[0]', '$', '$Point failed'), ('.MultiPoint.type', '$.type', 'expecting string MultiPoint'), ('.geometry.|[1]', '$', '$MultiPoint failed'), ('.LineString.type', '$.type', 'expecting string LineString'), ('.geometry.|[2]', '$', '$LineString failed'), ('.MultiLineString.type', '$.type', 'expecting string MultiLineString'), ('.geometry.|[3]', '$', '$MultiLineString failed'), ('.Polygon.type', '$.type', 'expecting string Polygon'), ('.geometry.|[4]', '$', '$Polygon failed'), ('.MultiPolygon.type', '$.type', 'expecting string MultiPolygon'), ('.geometry.|[5]', '$', '$MultiPolygon failed'), ('.geometry.|', '$', 'no any matched'), ('.^[0]', '$', '$geometry failed'), ('.GeometryCollection.type', '$.type', 'expecting string GeometryCollection'), ('.^[1]', '$', '$GeometryCollection failed'), ('.Feature.type', '$.type', 'expecting string Feature'), ('.^[2]', '$', '$Feature failed'), ('.FeatureCollection.type', '$.type', 'expecting string FeatureCollection'), ('.^[3]', '$', '$FeatureCollection failed'), ('.^', '$', 'no match found')]
