//
// Generated by JSON Model Compiler version 2
// see https://github.com/clairey-zx81/json-model
//

import json_model.*;
import java.util.Map;
import java.util.Set;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Iterator;
import java.util.regex.Pattern;
import java.util.regex.Matcher;

@SuppressWarnings("unchecked")
public class op_list_int extends ModelChecker
{
    static public final String VERSION = "2";

    Set<Object> _jm_cst_0_set;
    Set<Object> _jm_cst_1_set;
    Map<Object, Checker> _jm_map_0_cmap;
    public Map<String, Checker> op_list_int_map_pmap;

    // object .'|'.0
    public boolean _jm_obj_0(Object val, Path path, Report rep)
    {
        if (! json.isObject(val))
        {
            if (rep != null) rep.addEntry("not an object [.'|'.0]", path);
            return false;
        }
        boolean res;
        long must_count = 0;
        Iterator<String> prop_loop = json.objectIterator(val);
        while (prop_loop.hasNext())
        {
            String prop = prop_loop.next();
            Object pval = json.objectValue(val, prop);
            Path lpath_0 = new Path(prop, path);
            if (prop.compareTo("t") == 0)
            {
                // handle must t property
                must_count += 1;
                // .'|'.0.t
                res = json.isInteger(pval) && json.asLong(pval) == 0;
                if (! res)
                {
                    if (rep != null) rep.addEntry("unexpected =0 [.'|'.0.t]", (path != null ? lpath_0 : null));
                }
                if (! res)
                {
                    if (rep != null) rep.addEntry("invalid mandatory prop value [.'|'.0.t]", (path != null ? lpath_0 : null));
                    return false;
                }
            }
            else if (prop.compareTo("z") == 0)
            {
                // handle must z property
                must_count += 1;
                // .'|'.0.z
                res = json.isInteger(pval) && json.asLong(pval) >= 1;
                if (! res)
                {
                    if (rep != null) rep.addEntry("not a 1 strict int [.'|'.0.z]", (path != null ? lpath_0 : null));
                }
                if (! res)
                {
                    if (rep != null) rep.addEntry("invalid mandatory prop value [.'|'.0.z]", (path != null ? lpath_0 : null));
                    return false;
                }
            }
            else
            {
                if (rep != null) rep.addEntry("unexpected prop [.'|'.0]", (path != null ? lpath_0 : null));
                return false;
            }
        }
        if (must_count != 2)
        {
            if (rep != null)
            {
                if (! json.objectHasProp(val, "t"))
                {
                    if (rep != null) rep.addEntry("missing mandatory prop <t> [.'|'.0]", path);
                }
                if (! json.objectHasProp(val, "z"))
                {
                    if (rep != null) rep.addEntry("missing mandatory prop <z> [.'|'.0]", path);
                }
            }
            return false;
        }
        return true;
    }
    
    
    // object .'|'.1
    public boolean _jm_obj_1(Object val, Path path, Report rep)
    {
        if (! json.isObject(val))
        {
            if (rep != null) rep.addEntry("not an object [.'|'.1]", path);
            return false;
        }
        boolean res;
        long must_count = 0;
        Iterator<String> prop_loop = json.objectIterator(val);
        while (prop_loop.hasNext())
        {
            String prop = prop_loop.next();
            Object pval = json.objectValue(val, prop);
            Path lpath_1 = new Path(prop, path);
            if (prop.compareTo("t") == 0)
            {
                // handle must t property
                must_count += 1;
                // .'|'.1.t
                res = json.isScalar(pval) && _jm_cst_0_set.contains(pval);
                if (! res)
                {
                    if (rep != null) rep.addEntry("value not in enum [.'|'.1.t.'|']", (path != null ? lpath_1 : null));
                }
                if (! res)
                {
                    if (rep != null) rep.addEntry("invalid mandatory prop value [.'|'.1.t]", (path != null ? lpath_1 : null));
                    return false;
                }
            }
            else if (prop.compareTo("p") == 0)
            {
                // handle must p property
                must_count += 1;
                // .'|'.1.p
                res = json.isInteger(pval) && json.asLong(pval) >= 1;
                if (! res)
                {
                    if (rep != null) rep.addEntry("not a 1 strict int [.'|'.1.p]", (path != null ? lpath_1 : null));
                }
                if (! res)
                {
                    if (rep != null) rep.addEntry("invalid mandatory prop value [.'|'.1.p]", (path != null ? lpath_1 : null));
                    return false;
                }
            }
            else
            {
                if (rep != null) rep.addEntry("unexpected prop [.'|'.1]", (path != null ? lpath_1 : null));
                return false;
            }
        }
        if (must_count != 2)
        {
            if (rep != null)
            {
                if (! json.objectHasProp(val, "p"))
                {
                    if (rep != null) rep.addEntry("missing mandatory prop <p> [.'|'.1]", path);
                }
                if (! json.objectHasProp(val, "t"))
                {
                    if (rep != null) rep.addEntry("missing mandatory prop <t> [.'|'.1]", path);
                }
            }
            return false;
        }
        return true;
    }
    
    
    // object .'|'.2
    public boolean _jm_obj_2(Object val, Path path, Report rep)
    {
        if (! json.isObject(val))
        {
            if (rep != null) rep.addEntry("not an object [.'|'.2]", path);
            return false;
        }
        boolean res;
        long must_count = 0;
        Iterator<String> prop_loop = json.objectIterator(val);
        while (prop_loop.hasNext())
        {
            String prop = prop_loop.next();
            Object pval = json.objectValue(val, prop);
            Path lpath_2 = new Path(prop, path);
            if (prop.compareTo("t") == 0)
            {
                // handle must t property
                must_count += 1;
                // .'|'.2.t
                res = json.isScalar(pval) && _jm_cst_1_set.contains(pval);
                if (! res)
                {
                    if (rep != null) rep.addEntry("value not in enum [.'|'.2.t.'|']", (path != null ? lpath_2 : null));
                }
                if (! res)
                {
                    if (rep != null) rep.addEntry("invalid mandatory prop value [.'|'.2.t]", (path != null ? lpath_2 : null));
                    return false;
                }
            }
            else if (prop.compareTo("i") == 0)
            {
                // handle must i property
                must_count += 1;
                // .'|'.2.i
                res = json.isInteger(pval) && json.asLong(pval) >= 1;
                if (! res)
                {
                    if (rep != null) rep.addEntry("not a 1 strict int [.'|'.2.i]", (path != null ? lpath_2 : null));
                }
                if (! res)
                {
                    if (rep != null) rep.addEntry("invalid mandatory prop value [.'|'.2.i]", (path != null ? lpath_2 : null));
                    return false;
                }
            }
            else
            {
                if (rep != null) rep.addEntry("unexpected prop [.'|'.2]", (path != null ? lpath_2 : null));
                return false;
            }
        }
        if (must_count != 2)
        {
            if (rep != null)
            {
                if (! json.objectHasProp(val, "i"))
                {
                    if (rep != null) rep.addEntry("missing mandatory prop <i> [.'|'.2]", path);
                }
                if (! json.objectHasProp(val, "t"))
                {
                    if (rep != null) rep.addEntry("missing mandatory prop <t> [.'|'.2]", path);
                }
            }
            return false;
        }
        return true;
    }
    
    // object .'|'.3
    public boolean _jm_obj_3(Object val, Path path, Report rep)
    {
        if (! json.isObject(val))
        {
            if (rep != null) rep.addEntry("not an object [.'|'.3]", path);
            return false;
        }
        boolean res;
        long must_count = 0;
        Iterator<String> prop_loop = json.objectIterator(val);
        while (prop_loop.hasNext())
        {
            String prop = prop_loop.next();
            Object pval = json.objectValue(val, prop);
            Path lpath_3 = new Path(prop, path);
            if (prop.compareTo("t") == 0)
            {
                // handle must t property
                must_count += 1;
                // .'|'.3.t
                res = json.isInteger(pval) && json.asLong(pval) == 10;
                if (! res)
                {
                    if (rep != null) rep.addEntry("unexpected =10 [.'|'.3.t]", (path != null ? lpath_3 : null));
                }
                if (! res)
                {
                    if (rep != null) rep.addEntry("invalid mandatory prop value [.'|'.3.t]", (path != null ? lpath_3 : null));
                    return false;
                }
            }
            else if (prop.compareTo("d") == 0)
            {
                // handle must d property
                must_count += 1;
                // .'|'.3.d
                res = json.isInteger(pval) && json.asLong(pval) >= 1;
                if (! res)
                {
                    if (rep != null) rep.addEntry("not a 1 strict int [.'|'.3.d]", (path != null ? lpath_3 : null));
                }
                if (! res)
                {
                    if (rep != null) rep.addEntry("invalid mandatory prop value [.'|'.3.d]", (path != null ? lpath_3 : null));
                    return false;
                }
            }
            else
            {
                if (rep != null) rep.addEntry("unexpected prop [.'|'.3]", (path != null ? lpath_3 : null));
                return false;
            }
        }
        if (must_count != 2)
        {
            if (rep != null)
            {
                if (! json.objectHasProp(val, "d"))
                {
                    if (rep != null) rep.addEntry("missing mandatory prop <d> [.'|'.3]", path);
                }
                if (! json.objectHasProp(val, "t"))
                {
                    if (rep != null) rep.addEntry("missing mandatory prop <t> [.'|'.3]", path);
                }
            }
            return false;
        }
        return true;
    }
    
    
    // check $ (.)
    public boolean json_model_1(Object val, Path path, Report rep)
    {
        boolean res;
        // .
        boolean iso_0 = json.isObject(val);
        res = iso_0;
        if (res)
        {
            if (json.objectHasProp(val, "t"))
            {
                Object tag_0 = json.objectValue(val, "t");
                Checker fun_0 = _jm_map_0_cmap.get(tag_0);
                if (fun_0 != null)
                {
                    res = fun_0.call(val, path, rep);
                }
                else
                {
                    res = false;
                    if (rep != null) rep.addEntry("tag <t> value not found [.'|']", path);
                }
            }
            else
            {
                res = false;
                if (rep != null) rep.addEntry("tag prop <t> is missing [.'|']", path);
            }
        }
        else
        {
            if (rep != null) rep.addEntry("value is not an object [.'|']", path);
        }
        return res;
    }
    

    public void init(JSON json)
    {
        if (!initialized)
        {
            try {
            _jm_cst_0_set = new HashSet<Object>();
            _jm_cst_0_set.add(json.safeJSON("2"));
            _jm_cst_0_set.add(json.safeJSON("4"));
            _jm_cst_0_set.add(json.safeJSON("6"));
            _jm_cst_0_set.add(json.safeJSON("8"));
            _jm_cst_1_set = new HashSet<Object>();
            _jm_cst_1_set.add(json.safeJSON("1"));
            _jm_cst_1_set.add(json.safeJSON("3"));
            _jm_cst_1_set.add(json.safeJSON("5"));
            _jm_cst_1_set.add(json.safeJSON("7"));
            _jm_cst_1_set.add(json.safeJSON("9"));
            _jm_map_0_cmap = new HashMap<Object, Checker>();
            _jm_map_0_cmap.put(json.safeJSON("0"), new Checker() { public boolean call(Object o, Path p, Report r) { return _jm_obj_0(o, p, r);} });
            _jm_map_0_cmap.put(json.safeJSON("2"), new Checker() { public boolean call(Object o, Path p, Report r) { return _jm_obj_1(o, p, r);} });
            _jm_map_0_cmap.put(json.safeJSON("4"), new Checker() { public boolean call(Object o, Path p, Report r) { return _jm_obj_1(o, p, r);} });
            _jm_map_0_cmap.put(json.safeJSON("6"), new Checker() { public boolean call(Object o, Path p, Report r) { return _jm_obj_1(o, p, r);} });
            _jm_map_0_cmap.put(json.safeJSON("8"), new Checker() { public boolean call(Object o, Path p, Report r) { return _jm_obj_1(o, p, r);} });
            _jm_map_0_cmap.put(json.safeJSON("1"), new Checker() { public boolean call(Object o, Path p, Report r) { return _jm_obj_2(o, p, r);} });
            _jm_map_0_cmap.put(json.safeJSON("3"), new Checker() { public boolean call(Object o, Path p, Report r) { return _jm_obj_2(o, p, r);} });
            _jm_map_0_cmap.put(json.safeJSON("5"), new Checker() { public boolean call(Object o, Path p, Report r) { return _jm_obj_2(o, p, r);} });
            _jm_map_0_cmap.put(json.safeJSON("7"), new Checker() { public boolean call(Object o, Path p, Report r) { return _jm_obj_2(o, p, r);} });
            _jm_map_0_cmap.put(json.safeJSON("9"), new Checker() { public boolean call(Object o, Path p, Report r) { return _jm_obj_2(o, p, r);} });
            _jm_map_0_cmap.put(json.safeJSON("10"), new Checker() { public boolean call(Object o, Path p, Report r) { return _jm_obj_3(o, p, r);} });
            op_list_int_map_pmap = new HashMap<String, Checker>();
            op_list_int_map_pmap.put("", new Checker() { public boolean call(Object o, Path p, Report r) { return json_model_1(o, p, r);} });
                super.init(json);
            }
            catch (Exception e) {
                throw new Error("cannot initialized model checker: " + e);
            }
        }
    }

    public void free()
    {
        if (initialized)
        {
            super.free();
            _jm_cst_0_set = null;
            _jm_cst_1_set = null;
            _jm_map_0_cmap = null;
            op_list_int_map_pmap = null;
        }
    }

    public Checker get(String name)
    {
        return op_list_int_map_pmap.get(name);
    }

    public Set<String> models()
    {
        return op_list_int_map_pmap.keySet();
    }

    static public void main(String[] args) throws Exception
    {
        ModelChecker checker = new op_list_int();
        Main.main("op_list_int", checker, VERSION, args);
    }
}
