#! /bin/env node
// we may need require to load re2
import { createRequire } from 'node:module';
const require = createRequire(import.meta.url);
//
// Generated by JSON Model Compiler version 2.0b0
// see https://github.com/clairey-zx81/json-model
//
import * as runtime from "json_model_runtime"
const JSON_MODEL_VERSION = "2.0b0";

var _jm_obj_2_mup = new Map()
var check_model_map = new Map()

// check $T (.'$T')
function json_model_2(val, path, rep)
{
    let res;
    // .'$T'
    res = ((typeof val === 'string' || val instanceof String)) && val == "cst_01";
    if (! res)
    {
        rep !== null && rep.push(["unexpected _cst_01 [.'$T']", path])
    }
    return res;
}

// object .'$X'
function _jm_obj_0(val, path, rep)
{
    if (! (Object.prototype.toString.call(val) === '[object Object]'))
    {
        rep !== null && rep.push(["not an object [.'$X']", path])
        return false;
    }
    let res;
    let must_count = 0;
    for(const [prop, pval] of Object.entries(val))
    {
        let lpath_0 = path ? path.concat([prop]) : null;
        if (prop == "a")
        {
            // handle must a property
            must_count += 1;
            // .'$X'.a
            res = ((typeof pval === 'string' || pval instanceof String)) && pval == "cst_01";
            if (! res)
            {
                rep !== null && rep.push(["unexpected _cst_01 [.'$X'.a]", (path ? lpath_0 : null)])
            }
            if (! res)
            {
                rep !== null && rep.push(["invalid mandatory prop value [.'$X'.a]", (path ? lpath_0 : null)])
                return false;
            }
        }
        else if (prop == "b")
        {
            // handle must b property
            must_count += 1;
            // .'$X'.b
            res = ((typeof pval === 'string' || pval instanceof String)) && pval == "cst_01";
            if (! res)
            {
                rep !== null && rep.push(["unexpected _cst_01 [.'$X'.b]", (path ? lpath_0 : null)])
            }
            if (! res)
            {
                rep !== null && rep.push(["invalid mandatory prop value [.'$X'.b]", (path ? lpath_0 : null)])
                return false;
            }
        }
        else
        {
            rep !== null && rep.push(["unexpected prop [.'$X']", (path ? lpath_0 : null)])
            return false;
        }
    }
    if (must_count != 2)
    {
        if (rep !== null)
        {
            if (! val.hasOwnProperty("a"))
            {
                rep !== null && rep.push(["missing mandatory prop <a> [.'$X']", path])
            }
            if (! val.hasOwnProperty("b"))
            {
                rep !== null && rep.push(["missing mandatory prop <b> [.'$X']", path])
            }
        }
        return false;
    }
    return true;
}

// check $X (.'$X')
function json_model_3(val, path, rep)
{
    let res;
    // .'$X'
    res = _jm_obj_0(val, path, rep);
    if (! res)
    {
        rep !== null && rep.push(["unexpected object [.'$X']", path])
    }
    return res;
}

// object .'$Y'
function _jm_obj_1(val, path, rep)
{
    if (! (Object.prototype.toString.call(val) === '[object Object]'))
    {
        rep !== null && rep.push(["not an object [.'$Y']", path])
        return false;
    }
    let res;
    let must_count = 0;
    for(const [prop, pval] of Object.entries(val))
    {
        let lpath_1 = path ? path.concat([prop]) : null;
        if (prop == "c")
        {
            // handle must c property
            must_count += 1;
            // .'$Y'.c
            res = ((typeof pval === 'string' || pval instanceof String)) && pval == "cst_01";
            if (! res)
            {
                rep !== null && rep.push(["unexpected _cst_01 [.'$Y'.c]", (path ? lpath_1 : null)])
            }
            if (! res)
            {
                rep !== null && rep.push(["invalid mandatory prop value [.'$Y'.c]", (path ? lpath_1 : null)])
                return false;
            }
        }
        else if (prop == "d")
        {
            // handle must d property
            must_count += 1;
            // .'$Y'.d
            res = ((typeof pval === 'string' || pval instanceof String)) && pval == "cst_01";
            if (! res)
            {
                rep !== null && rep.push(["unexpected _cst_01 [.'$Y'.d]", (path ? lpath_1 : null)])
            }
            if (! res)
            {
                rep !== null && rep.push(["invalid mandatory prop value [.'$Y'.d]", (path ? lpath_1 : null)])
                return false;
            }
        }
        else
        {
            rep !== null && rep.push(["unexpected prop [.'$Y']", (path ? lpath_1 : null)])
            return false;
        }
    }
    if (must_count != 2)
    {
        if (rep !== null)
        {
            if (! val.hasOwnProperty("c"))
            {
                rep !== null && rep.push(["missing mandatory prop <c> [.'$Y']", path])
            }
            if (! val.hasOwnProperty("d"))
            {
                rep !== null && rep.push(["missing mandatory prop <d> [.'$Y']", path])
            }
        }
        return false;
    }
    return true;
}

// check $Y (.'$Y')
function json_model_4(val, path, rep)
{
    let res;
    // .'$Y'
    res = _jm_obj_1(val, path, rep);
    if (! res)
    {
        rep !== null && rep.push(["unexpected object [.'$Y']", path])
    }
    return res;
}

// check _jm_obj_2_mup_a (.a)
function _jm_f_0(val, path, rep)
{
    let res;
    // .a
    res = ((typeof val === 'string' || val instanceof String)) && val == "cst_01";
    if (! res)
    {
        rep !== null && rep.push(["unexpected _cst_01 [.a]", path])
    }
    return res;
}

// check _jm_obj_2_mup_b (.b)
function _jm_f_1(val, path, rep)
{
    let res;
    // .b
    res = ((typeof val === 'string' || val instanceof String)) && val == "cst_01";
    if (! res)
    {
        rep !== null && rep.push(["unexpected _cst_01 [.b]", path])
    }
    return res;
}

// check _jm_obj_2_mup_c (.c)
function _jm_f_2(val, path, rep)
{
    let res;
    // .c
    res = ((typeof val === 'string' || val instanceof String)) && val == "cst_01";
    if (! res)
    {
        rep !== null && rep.push(["unexpected _cst_01 [.c]", path])
    }
    return res;
}

// check _jm_obj_2_mup_d (.d)
function _jm_f_3(val, path, rep)
{
    let res;
    // .d
    res = ((typeof val === 'string' || val instanceof String)) && val == "cst_01";
    if (! res)
    {
        rep !== null && rep.push(["unexpected _cst_01 [.d]", path])
    }
    return res;
}


// object .
function _jm_obj_2(val, path, rep)
{
    if (! (Object.prototype.toString.call(val) === '[object Object]'))
    {
        rep !== null && rep.push(["not an object [.]", path])
        return false;
    }
    let pfun;
    let must_count = 0;
    for(const [prop, pval] of Object.entries(val))
    {
        let lpath_2 = path ? path.concat([prop]) : null;
        if ((pfun = _jm_obj_2_mup.get(prop)))
        {
            // handle 4 mandatory props
            if (pfun !== undefined)
            {
                must_count += 1;
                if (! pfun(pval, (path ? lpath_2 : null), rep))
                {
                    rep !== null && rep.push(["invalid mandatory prop value [.]", (path ? lpath_2 : null)])
                    return false;
                }
            }
        }
        else
        {
            rep !== null && rep.push(["unexpected prop [.]", (path ? lpath_2 : null)])
            return false;
        }
    }
    if (must_count != 4)
    {
        if (rep !== null)
        {
            if (! val.hasOwnProperty("a"))
            {
                rep !== null && rep.push(["missing mandatory prop <a> [.]", path])
            }
            if (! val.hasOwnProperty("b"))
            {
                rep !== null && rep.push(["missing mandatory prop <b> [.]", path])
            }
            if (! val.hasOwnProperty("c"))
            {
                rep !== null && rep.push(["missing mandatory prop <c> [.]", path])
            }
            if (! val.hasOwnProperty("d"))
            {
                rep !== null && rep.push(["missing mandatory prop <d> [.]", path])
            }
        }
        return false;
    }
    return true;
}

// check $ (.)
function json_model_1(val, path, rep)
{
    let res;
    // .
    res = _jm_obj_2(val, path, rep);
    if (! res)
    {
        rep !== null && rep.push(["unexpected object [.]", path])
    }
    return res;
}


var initialized = false

// differed module initializations
export function check_model_init()
{
    if (! initialized)
    {
        initialized = true;
        runtime.jm_set_rx(RegExp)
        _jm_obj_2_mup.set("a", _jm_f_0)
        _jm_obj_2_mup.set("b", _jm_f_1)
        _jm_obj_2_mup.set("c", _jm_f_2)
        _jm_obj_2_mup.set("d", _jm_f_3)
        check_model_map.set("", json_model_1)
        check_model_map.set("T", json_model_2)
        check_model_map.set("X", json_model_3)
        check_model_map.set("Y", json_model_4)
    }
}

// differed module cleanup
export function check_model_free()
{
    if (initialized)
    {
        initialized = false;
    }
}

export function check_model(val, name, rep)
{
    let checker = check_model_map.get(name)
    if (checker === undefined)
        throw `no checker for "${name}"`
    let path = rep !== null ? [] : null

    return checker(val, path, rep)
}

// possibly run as main based on a guess
import main from "json_model_runtime/main.js"

if (import.meta.url.endsWith(process.argv[1]))
    main(check_model_init, check_model, check_model_free)
