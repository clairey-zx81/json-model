//
// Generated by JSON Model Compiler version 2.0b1
// see https://github.com/clairey-zx81/json-model
//
import json_model.*;
import java.util.Map;
import java.util.Set;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Iterator;
import java.util.regex.Pattern;
import java.util.regex.Matcher;

public class base_019 extends ModelChecker
{
    static public final String VERSION = "2.0b1";

    public Map<String, Checker> base_019_map_pmap;

    // check $ (.)
    public boolean json_model_1(Object val, Path path, Report rep)
    {
        boolean res;
        // .
        // .'@'
        res = json.isDouble(val) && json.asDouble(val) >= 0.0;
        if (! res)
        {
            if (rep != null) rep.addEntry("not a 0.0 strict float [.'@']", path);
        }
        if (res)
        {
            double fval_0 = json.asDouble(val);
            res = fval_0 < 100 && fval_0 >= 0;
            if (! res)
            {
                if (rep != null) rep.addEntry("constraints failed [.]", path);
            }
        }
        return res;
    }
    

    public void init(JSON json)
    {
        if (!initialized)
        {
            try {
            base_019_map_pmap = new HashMap<String, Checker>();
            base_019_map_pmap.put("", new Checker() { public boolean call(Object o, Path p, Report r) { return json_model_1(o, p, r);} });
                super.init(json);
            }
            catch (Exception e) {
                throw new Error("cannot initialized model checker: " + e);
            }
        }
    }

    public void free()
    {
        if (initialized)
        {
            super.free();
            base_019_map_pmap = null;
        }
    }

    public Checker get(String name)
    {
        return base_019_map_pmap.get(name);
    }

    static public void main(String[] args) throws Exception
    {
        ModelChecker checker = new base_019();
        Main.main("base_019", checker, VERSION, args);
    }
}
