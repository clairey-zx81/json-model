#! /bin/env node
// we may need require to load re2
import { createRequire } from 'node:module';
const require = createRequire(import.meta.url);
//
// Generated by JSON Model Compiler version 2
// see https://github.com/clairey-zx81/json-model
//
import * as runtime from "json_model_runtime"
const JSON_MODEL_VERSION = "2";

let _jm_cst_0 = new Set()
const _jm_re_0_re = new runtime.RX("^#[0-9a-fA-F]{6}$", "")
let _jm_cst_1 = new Set()
let _jm_cst_2 = new Set()
let _jm_map_0 = new Map()
let _jm_cst_3 = new Set()
let _jm_cst_4 = new Set()
let _jm_cst_5 = new Set()
let _jm_cst_6 = new Set()
let _jm_cst_7 = new Set()
let _jm_cst_8 = new Set()
const _jm_re_1_re = new runtime.RX(".", "")
let _jm_cst_9 = new Set()
let _jm_cst_10 = new Set()
let _jm_cst_11 = new Set()
let _jm_cst_12 = new Set()
let _jm_cst_13 = new Set()
let _jm_cst_14 = new Set()
var _jm_obj_23_map = new Map()
const _jm_re_2_re = new runtime.RX("^[^:]+:[^:]+$", "")
let _jm_cst_15 = new Set()
var check_model_map = new Map()


const _jm_re_0 = (s) => _jm_re_0_re.exec(s) !== null

// check $color (.'$color')
function json_model_2(val, path, rep)
{
    // .'$color'
    let res = ((val === null || (typeof val === 'number' || val instanceof Number) || (typeof val === 'boolean' || val instanceof Boolean) || (typeof val === 'string' || val instanceof String))) && _jm_cst_0.has(val);
    if (! res)
    {
        rep !== null && rep.push(["value not in enum [.'$color'.'|']", path])
    }
    if (! res)
    {
        res = (typeof val === 'string' || val instanceof String);
        if (! res)
        {
            rep !== null && rep.push(["unexpected type [.'$color'.'|']", path])
        }
        if (res)
        {
            // .'$color'.'|'.0
            // "/^#[0-9a-fA-F]{6}$/"
            res = _jm_re_0(val, path, rep);
            if (res)
            {
                if (rep !== null) rep.length = 0
            }
            else
            {
                rep !== null && rep.push(["unexpected /^#[0-9a-fA-F]{6}$/ [.'$color'.'|'.0]", path])
                rep !== null && rep.push(["no model matched [.'$color'.'|']", path])
            }
        }
    }
    return res;
}

// check $colorArray (.'$colorArray')
function json_model_3(val, path, rep)
{
    // .'$colorArray'
    // .'$colorArray'.'@'
    let res = Array.isArray(val);
    if (res)
    {
        for (let arr_0_idx = 0; arr_0_idx < val.length; arr_0_idx++)
        {
            let arr_0_item = val[arr_0_idx]
            let arr_0_lpath = path ? path.concat([arr_0_idx]) : null;
            // .'$colorArray'.'@'.0
            res = json_model_2(arr_0_item, (path ? arr_0_lpath : null), rep);
            if (! res)
            {
                rep !== null && rep.push(["unexpected $color [.'$colorArray'.'@'.0]", (path ? arr_0_lpath : null)])
                break;
            }
        }
    }
    if (! res)
    {
        rep !== null && rep.push(["not array or unexpected array [.'$colorArray'.'@']", path])
    }
    if (res)
    {
        let ival_0 = val.length;
        res = runtime.jm_array_is_unique(val, path, rep) && ival_0 >= 1;
        if (! res)
        {
            rep !== null && rep.push(["constraints failed [.'$colorArray']", path])
        }
    }
    return res;
}

// check $keybinding (.'$keybinding')
function json_model_4(val, path, rep)
{
    // .'$keybinding'
    // .'$keybinding'.'|'.0
    let res = val === null;
    if (! res)
    {
        rep !== null && rep.push(["not null [.'$keybinding'.'|'.0]", path])
    }
    if (! res)
    {
        // .'$keybinding'.'|'.1
        res = (typeof val === 'string' || val instanceof String);
        if (! res)
        {
            rep !== null && rep.push(["unexpected string [.'$keybinding'.'|'.1]", path])
        }
    }
    if (res)
    {
        if (rep !== null) rep.length = 0
    }
    else
    {
        rep !== null && rep.push(["no model matched [.'$keybinding'.'|']", path])
    }
    return res;
}


// check $custom-commands-prompts-type-property (.'$custom-commands-prompts-type-property')
function json_model_5(val, path, rep)
{
    // .'$custom-commands-prompts-type-property'
    let res = ((val === null || (typeof val === 'number' || val instanceof Number) || (typeof val === 'boolean' || val instanceof Boolean) || (typeof val === 'string' || val instanceof String))) && _jm_cst_1.has(val);
    if (! res)
    {
        rep !== null && rep.push(["value not in enum [.'$custom-commands-prompts-type-property'.'|']", path])
    }
    return res;
}

// check $custom-commands-prompts-title-property (.'$custom-commands-prompts-title-property')
function json_model_6(val, path, rep)
{
    // .'$custom-commands-prompts-title-property'
    let res = (typeof val === 'string' || val instanceof String);
    if (! res)
    {
        rep !== null && rep.push(["unexpected string [.'$custom-commands-prompts-title-property']", path])
    }
    return res;
}

// check $custom-commands-prompts-key-property (.'$custom-commands-prompts-key-property')
function json_model_7(val, path, rep)
{
    // .'$custom-commands-prompts-key-property'
    let res = (typeof val === 'string' || val instanceof String);
    if (! res)
    {
        rep !== null && rep.push(["unexpected string [.'$custom-commands-prompts-key-property']", path])
    }
    return res;
}

// check $neString (.'$neString')
function json_model_8(val, path, rep)
{
    // .'$neString'
    // .'$neString'.'@'
    let res = (typeof val === 'string' || val instanceof String);
    if (! res)
    {
        rep !== null && rep.push(["unexpected string [.'$neString'.'@']", path])
    }
    if (res)
    {
        let sval_0 = val;
        res = sval_0 != "";
        if (! res)
        {
            rep !== null && rep.push(["constraints failed [.'$neString']", path])
        }
    }
    return res;
}

// check $stringArray (.'$stringArray')
function json_model_9(val, path, rep)
{
    // .'$stringArray'
    // .'$stringArray'.'@'
    let res = Array.isArray(val);
    if (res)
    {
        for (let arr_1_idx = 0; arr_1_idx < val.length; arr_1_idx++)
        {
            let arr_1_item = val[arr_1_idx]
            let arr_1_lpath = path ? path.concat([arr_1_idx]) : null;
            // .'$stringArray'.'@'.0
            res = json_model_8(arr_1_item, (path ? arr_1_lpath : null), rep);
            if (! res)
            {
                rep !== null && rep.push(["unexpected $neString [.'$stringArray'.'@'.0]", (path ? arr_1_lpath : null)])
                break;
            }
        }
    }
    if (! res)
    {
        rep !== null && rep.push(["not array or unexpected array [.'$stringArray'.'@']", path])
    }
    if (res)
    {
        res = runtime.jm_array_is_unique(val, path, rep);
        if (! res)
        {
            rep !== null && rep.push(["constraints failed [.'$stringArray']", path])
        }
    }
    return res;
}

// object .'$Prompts'.'|'.0.suggestions.'|'.1
function _jm_obj_1(val, path, rep)
{
    // check close must only props
    if (! (Object.prototype.toString.call(val) === '[object Object]'))
    {
        rep !== null && rep.push(["not an object [.'$Prompts'.'|'.0.suggestions.'|'.1]", path])
        return false;
    }
    if (Object.keys(val).length != 1)
    {
        rep !== null && rep.push(["bad property count [.'$Prompts'.'|'.0.suggestions.'|'.1]", path])
        return false;
    }
    let lpath;
    let pval;
    let res;
    if (! val.hasOwnProperty("command"))
    {
        rep !== null && rep.push(["missing mandatory prop <command> [.'$Prompts'.'|'.0.suggestions.'|'.1]", path])
        return false;
    }
    lpath = path ? path.concat(["command"]) : null;
    pval = val["command"];
    // .'$Prompts'.'|'.0.suggestions.'|'.1.command
    res = (typeof pval === 'string' || pval instanceof String);
    if (! res)
    {
        rep !== null && rep.push(["unexpected string [.'$Prompts'.'|'.0.suggestions.'|'.1.command]", (path ? lpath : null)])
        rep !== null && rep.push(["unexpected value for mandatory prop <command> [.'$Prompts'.'|'.0.suggestions.'|'.1]", (path ? lpath : null)])
        return false;
    }
    return true;
}


// object .'$Prompts'.'|'.0.suggestions.'|'.0
function _jm_obj_2(val, path, rep)
{
    // check close must only props
    if (! (Object.prototype.toString.call(val) === '[object Object]'))
    {
        rep !== null && rep.push(["not an object [.'$Prompts'.'|'.0.suggestions.'|'.0]", path])
        return false;
    }
    if (Object.keys(val).length != 1)
    {
        rep !== null && rep.push(["bad property count [.'$Prompts'.'|'.0.suggestions.'|'.0]", path])
        return false;
    }
    let lpath;
    let pval;
    let res;
    if (! val.hasOwnProperty("preset"))
    {
        rep !== null && rep.push(["missing mandatory prop <preset> [.'$Prompts'.'|'.0.suggestions.'|'.0]", path])
        return false;
    }
    lpath = path ? path.concat(["preset"]) : null;
    pval = val["preset"];
    // .'$Prompts'.'|'.0.suggestions.'|'.0.preset
    res = ((pval === null || (typeof pval === 'number' || pval instanceof Number) || (typeof pval === 'boolean' || pval instanceof Boolean) || (typeof pval === 'string' || pval instanceof String))) && _jm_cst_2.has(pval);
    if (! res)
    {
        rep !== null && rep.push(["value not in enum [.'$Prompts'.'|'.0.suggestions.'|'.0.preset.'|']", (path ? lpath : null)])
        rep !== null && rep.push(["unexpected value for mandatory prop <preset> [.'$Prompts'.'|'.0.suggestions.'|'.0]", (path ? lpath : null)])
        return false;
    }
    return true;
}

// object .'$Prompts'.'|'.0
function _jm_obj_0(val, path, rep)
{
    if (! (Object.prototype.toString.call(val) === '[object Object]'))
    {
        rep !== null && rep.push(["not an object [.'$Prompts'.'|'.0]", path])
        return false;
    }
    let res;
    let must_count = 0;
    for (const [prop, pval] of Object.entries(val))
    {
        let lpath_0 = path ? path.concat([prop]) : null;
        if (prop == "type")
        {
            // handle must type property
            must_count += 1;
            // .'$Prompts'.'|'.0.type
            res = ((typeof pval === 'string' || pval instanceof String)) && pval == "input";
            if (! res)
            {
                rep !== null && rep.push(["unexpected input [.'$Prompts'.'|'.0.type]", (path ? lpath_0 : null)])
                rep !== null && rep.push(["invalid mandatory prop value [.'$Prompts'.'|'.0.type]", (path ? lpath_0 : null)])
                return false;
            }
        }
        else if (prop == "title")
        {
            // handle must title property
            must_count += 1;
            // .'$Prompts'.'|'.0.title
            res = json_model_6(pval, (path ? lpath_0 : null), rep);
            if (! res)
            {
                rep !== null && rep.push(["unexpected $custom-commands-prompts-title-property [.'$Prompts'.'|'.0.title]", (path ? lpath_0 : null)])
                rep !== null && rep.push(["invalid mandatory prop value [.'$Prompts'.'|'.0.title]", (path ? lpath_0 : null)])
                return false;
            }
        }
        else if (prop == "key")
        {
            // handle must key property
            must_count += 1;
            // .'$Prompts'.'|'.0.key
            res = json_model_7(pval, (path ? lpath_0 : null), rep);
            if (! res)
            {
                rep !== null && rep.push(["unexpected $custom-commands-prompts-key-property [.'$Prompts'.'|'.0.key]", (path ? lpath_0 : null)])
                rep !== null && rep.push(["invalid mandatory prop value [.'$Prompts'.'|'.0.key]", (path ? lpath_0 : null)])
                return false;
            }
        }
        else if (prop == "initialValue")
        {
            // handle may initialValue property
            // .'$Prompts'.'|'.0.initialValue
            res = (typeof pval === 'string' || pval instanceof String);
            if (! res)
            {
                rep !== null && rep.push(["unexpected string [.'$Prompts'.'|'.0.initialValue]", (path ? lpath_0 : null)])
                rep !== null && rep.push(["invalid optional prop value [.'$Prompts'.'|'.0.initialValue]", (path ? lpath_0 : null)])
                return false;
            }
        }
        else if (prop == "suggestions")
        {
            // handle may suggestions property
            // .'$Prompts'.'|'.0.suggestions
            res = Object.prototype.toString.call(pval) === '[object Object]';
            if (! res)
            {
                rep !== null && rep.push(["unexpected type [.'$Prompts'.'|'.0.suggestions.'|']", (path ? lpath_0 : null)])
            }
            if (res)
            {
                // .'$Prompts'.'|'.0.suggestions.'|'.0
                res = _jm_obj_2(pval, (path ? lpath_0 : null), rep);
                if (! res)
                {
                    rep !== null && rep.push(["unexpected element [.'$Prompts'.'|'.0.suggestions.'|'.0]", (path ? lpath_0 : null)])
                }
                if (! res)
                {
                    // .'$Prompts'.'|'.0.suggestions.'|'.1
                    res = _jm_obj_1(pval, (path ? lpath_0 : null), rep);
                    if (! res)
                    {
                        rep !== null && rep.push(["unexpected element [.'$Prompts'.'|'.0.suggestions.'|'.1]", (path ? lpath_0 : null)])
                    }
                }
                if (res)
                {
                    if (rep !== null) rep.length = 0
                }
                else
                {
                    rep !== null && rep.push(["no model matched [.'$Prompts'.'|'.0.suggestions.'|']", (path ? lpath_0 : null)])
                }
            }
            if (! res)
            {
                rep !== null && rep.push(["invalid optional prop value [.'$Prompts'.'|'.0.suggestions]", (path ? lpath_0 : null)])
                return false;
            }
        }
        else
        {
            rep !== null && rep.push(["unexpected prop [.'$Prompts'.'|'.0]", (path ? lpath_0 : null)])
            return false;
        }
    }
    if (must_count != 3)
    {
        if (rep !== null)
        {
            if (! val.hasOwnProperty("key"))
            {
                rep !== null && rep.push(["missing mandatory prop <key> [.'$Prompts'.'|'.0]", path])
            }
            if (! val.hasOwnProperty("title"))
            {
                rep !== null && rep.push(["missing mandatory prop <title> [.'$Prompts'.'|'.0]", path])
            }
            if (! val.hasOwnProperty("type"))
            {
                rep !== null && rep.push(["missing mandatory prop <type> [.'$Prompts'.'|'.0]", path])
            }
        }
        return false;
    }
    return true;
}

// object .'$Prompts'.'|'.1
function _jm_obj_3(val, path, rep)
{
    if (! (Object.prototype.toString.call(val) === '[object Object]'))
    {
        rep !== null && rep.push(["not an object [.'$Prompts'.'|'.1]", path])
        return false;
    }
    let res;
    let must_count = 0;
    for (const [prop, pval] of Object.entries(val))
    {
        let lpath_1 = path ? path.concat([prop]) : null;
        if (prop == "type")
        {
            // handle must type property
            must_count += 1;
            // .'$Prompts'.'|'.1.type
            res = ((typeof pval === 'string' || pval instanceof String)) && pval == "confirm";
            if (! res)
            {
                rep !== null && rep.push(["unexpected confirm [.'$Prompts'.'|'.1.type]", (path ? lpath_1 : null)])
                rep !== null && rep.push(["invalid mandatory prop value [.'$Prompts'.'|'.1.type]", (path ? lpath_1 : null)])
                return false;
            }
        }
        else if (prop == "title")
        {
            // handle must title property
            must_count += 1;
            // .'$Prompts'.'|'.1.title
            res = json_model_6(pval, (path ? lpath_1 : null), rep);
            if (! res)
            {
                rep !== null && rep.push(["unexpected $custom-commands-prompts-title-property [.'$Prompts'.'|'.1.title]", (path ? lpath_1 : null)])
                rep !== null && rep.push(["invalid mandatory prop value [.'$Prompts'.'|'.1.title]", (path ? lpath_1 : null)])
                return false;
            }
        }
        else if (prop == "key")
        {
            // handle must key property
            must_count += 1;
            // .'$Prompts'.'|'.1.key
            res = json_model_7(pval, (path ? lpath_1 : null), rep);
            if (! res)
            {
                rep !== null && rep.push(["unexpected $custom-commands-prompts-key-property [.'$Prompts'.'|'.1.key]", (path ? lpath_1 : null)])
                rep !== null && rep.push(["invalid mandatory prop value [.'$Prompts'.'|'.1.key]", (path ? lpath_1 : null)])
                return false;
            }
        }
        else if (prop == "body")
        {
            // handle may body property
            // .'$Prompts'.'|'.1.body
            res = (typeof pval === 'string' || pval instanceof String);
            if (! res)
            {
                rep !== null && rep.push(["unexpected string [.'$Prompts'.'|'.1.body]", (path ? lpath_1 : null)])
                rep !== null && rep.push(["invalid optional prop value [.'$Prompts'.'|'.1.body]", (path ? lpath_1 : null)])
                return false;
            }
        }
        else
        {
            rep !== null && rep.push(["unexpected prop [.'$Prompts'.'|'.1]", (path ? lpath_1 : null)])
            return false;
        }
    }
    if (must_count != 3)
    {
        if (rep !== null)
        {
            if (! val.hasOwnProperty("key"))
            {
                rep !== null && rep.push(["missing mandatory prop <key> [.'$Prompts'.'|'.1]", path])
            }
            if (! val.hasOwnProperty("title"))
            {
                rep !== null && rep.push(["missing mandatory prop <title> [.'$Prompts'.'|'.1]", path])
            }
            if (! val.hasOwnProperty("type"))
            {
                rep !== null && rep.push(["missing mandatory prop <type> [.'$Prompts'.'|'.1]", path])
            }
        }
        return false;
    }
    return true;
}

// object .'$Prompts'.'|'.2.options.'@'.0
function _jm_obj_5(val, path, rep)
{
    if (! (Object.prototype.toString.call(val) === '[object Object]'))
    {
        rep !== null && rep.push(["not an object [.'$Prompts'.'|'.2.options.'@'.0]", path])
        return false;
    }
    let res;
    let must_count = 0;
    for (const [prop, pval] of Object.entries(val))
    {
        let lpath_2 = path ? path.concat([prop]) : null;
        if (prop == "value")
        {
            // handle must value property
            must_count += 1;
            // .'$Prompts'.'|'.2.options.'@'.0.value
            res = json_model_8(pval, (path ? lpath_2 : null), rep);
            if (! res)
            {
                rep !== null && rep.push(["unexpected $neString [.'$Prompts'.'|'.2.options.'@'.0.value]", (path ? lpath_2 : null)])
                rep !== null && rep.push(["invalid mandatory prop value [.'$Prompts'.'|'.2.options.'@'.0.value]", (path ? lpath_2 : null)])
                return false;
            }
        }
        else if (prop == "description")
        {
            // handle may description property
            // .'$Prompts'.'|'.2.options.'@'.0.description
            res = (typeof pval === 'string' || pval instanceof String);
            if (! res)
            {
                rep !== null && rep.push(["unexpected string [.'$Prompts'.'|'.2.options.'@'.0.description]", (path ? lpath_2 : null)])
                rep !== null && rep.push(["invalid optional prop value [.'$Prompts'.'|'.2.options.'@'.0.description]", (path ? lpath_2 : null)])
                return false;
            }
        }
        else if (prop == "name")
        {
            // handle may name property
            // .'$Prompts'.'|'.2.options.'@'.0.name
            res = (typeof pval === 'string' || pval instanceof String);
            if (! res)
            {
                rep !== null && rep.push(["unexpected string [.'$Prompts'.'|'.2.options.'@'.0.name]", (path ? lpath_2 : null)])
                rep !== null && rep.push(["invalid optional prop value [.'$Prompts'.'|'.2.options.'@'.0.name]", (path ? lpath_2 : null)])
                return false;
            }
        }
        else
        {
            rep !== null && rep.push(["unexpected prop [.'$Prompts'.'|'.2.options.'@'.0]", (path ? lpath_2 : null)])
            return false;
        }
    }
    if (must_count != 1)
    {
        if (rep !== null)
        {
            if (! val.hasOwnProperty("value"))
            {
                rep !== null && rep.push(["missing mandatory prop <value> [.'$Prompts'.'|'.2.options.'@'.0]", path])
            }
        }
        return false;
    }
    return true;
}

// object .'$Prompts'.'|'.2
function _jm_obj_4(val, path, rep)
{
    // check close must only props
    if (! (Object.prototype.toString.call(val) === '[object Object]'))
    {
        rep !== null && rep.push(["not an object [.'$Prompts'.'|'.2]", path])
        return false;
    }
    if (Object.keys(val).length != 4)
    {
        rep !== null && rep.push(["bad property count [.'$Prompts'.'|'.2]", path])
        return false;
    }
    let lpath;
    let pval;
    let res;
    if (! val.hasOwnProperty("type"))
    {
        rep !== null && rep.push(["missing mandatory prop <type> [.'$Prompts'.'|'.2]", path])
        return false;
    }
    lpath = path ? path.concat(["type"]) : null;
    pval = val["type"];
    // .'$Prompts'.'|'.2.type
    res = ((typeof pval === 'string' || pval instanceof String)) && pval == "menu";
    if (! res)
    {
        rep !== null && rep.push(["unexpected menu [.'$Prompts'.'|'.2.type]", (path ? lpath : null)])
        rep !== null && rep.push(["unexpected value for mandatory prop <type> [.'$Prompts'.'|'.2]", (path ? lpath : null)])
        return false;
    }
    if (! val.hasOwnProperty("title"))
    {
        rep !== null && rep.push(["missing mandatory prop <title> [.'$Prompts'.'|'.2]", path])
        return false;
    }
    lpath = path ? path.concat(["title"]) : null;
    pval = val["title"];
    // .'$Prompts'.'|'.2.title
    res = json_model_6(pval, (path ? lpath : null), rep);
    if (! res)
    {
        rep !== null && rep.push(["unexpected $custom-commands-prompts-title-property [.'$Prompts'.'|'.2.title]", (path ? lpath : null)])
        rep !== null && rep.push(["unexpected value for mandatory prop <title> [.'$Prompts'.'|'.2]", (path ? lpath : null)])
        return false;
    }
    if (! val.hasOwnProperty("key"))
    {
        rep !== null && rep.push(["missing mandatory prop <key> [.'$Prompts'.'|'.2]", path])
        return false;
    }
    lpath = path ? path.concat(["key"]) : null;
    pval = val["key"];
    // .'$Prompts'.'|'.2.key
    res = json_model_7(pval, (path ? lpath : null), rep);
    if (! res)
    {
        rep !== null && rep.push(["unexpected $custom-commands-prompts-key-property [.'$Prompts'.'|'.2.key]", (path ? lpath : null)])
        rep !== null && rep.push(["unexpected value for mandatory prop <key> [.'$Prompts'.'|'.2]", (path ? lpath : null)])
        return false;
    }
    if (! val.hasOwnProperty("options"))
    {
        rep !== null && rep.push(["missing mandatory prop <options> [.'$Prompts'.'|'.2]", path])
        return false;
    }
    lpath = path ? path.concat(["options"]) : null;
    pval = val["options"];
    // .'$Prompts'.'|'.2.options
    // .'$Prompts'.'|'.2.options.'@'
    res = Array.isArray(pval);
    if (res)
    {
        for (let arr_2_idx = 0; arr_2_idx < pval.length; arr_2_idx++)
        {
            let arr_2_item = pval[arr_2_idx]
            let arr_2_lpath = (path ? lpath : null) ? (path ? lpath : null).concat([arr_2_idx]) : null;
            // .'$Prompts'.'|'.2.options.'@'.0
            res = _jm_obj_5(arr_2_item, ((path ? lpath : null) ? arr_2_lpath : null), rep);
            if (! res)
            {
                rep !== null && rep.push(["unexpected element [.'$Prompts'.'|'.2.options.'@'.0]", ((path ? lpath : null) ? arr_2_lpath : null)])
                break;
            }
        }
    }
    if (! res)
    {
        rep !== null && rep.push(["not array or unexpected array [.'$Prompts'.'|'.2.options.'@']", (path ? lpath : null)])
    }
    if (res)
    {
        res = runtime.jm_array_is_unique(pval, (path ? lpath : null), rep);
        if (! res)
        {
            rep !== null && rep.push(["constraints failed [.'$Prompts'.'|'.2.options]", (path ? lpath : null)])
        }
    }
    if (! res)
    {
        rep !== null && rep.push(["unexpected value for mandatory prop <options> [.'$Prompts'.'|'.2]", (path ? lpath : null)])
        return false;
    }
    return true;
}

// object .'$Prompts'.'|'.3
function _jm_obj_6(val, path, rep)
{
    if (! (Object.prototype.toString.call(val) === '[object Object]'))
    {
        rep !== null && rep.push(["not an object [.'$Prompts'.'|'.3]", path])
        return false;
    }
    let res;
    let must_count = 0;
    for (const [prop, pval] of Object.entries(val))
    {
        let lpath_3 = path ? path.concat([prop]) : null;
        if (prop == "type")
        {
            // handle must type property
            must_count += 1;
            // .'$Prompts'.'|'.3.type
            res = ((typeof pval === 'string' || pval instanceof String)) && pval == "menuFromCommand";
            if (! res)
            {
                rep !== null && rep.push(["unexpected menuFromCommand [.'$Prompts'.'|'.3.type]", (path ? lpath_3 : null)])
                rep !== null && rep.push(["invalid mandatory prop value [.'$Prompts'.'|'.3.type]", (path ? lpath_3 : null)])
                return false;
            }
        }
        else if (prop == "title")
        {
            // handle must title property
            must_count += 1;
            // .'$Prompts'.'|'.3.title
            res = json_model_6(pval, (path ? lpath_3 : null), rep);
            if (! res)
            {
                rep !== null && rep.push(["unexpected $custom-commands-prompts-title-property [.'$Prompts'.'|'.3.title]", (path ? lpath_3 : null)])
                rep !== null && rep.push(["invalid mandatory prop value [.'$Prompts'.'|'.3.title]", (path ? lpath_3 : null)])
                return false;
            }
        }
        else if (prop == "key")
        {
            // handle must key property
            must_count += 1;
            // .'$Prompts'.'|'.3.key
            res = json_model_7(pval, (path ? lpath_3 : null), rep);
            if (! res)
            {
                rep !== null && rep.push(["unexpected $custom-commands-prompts-key-property [.'$Prompts'.'|'.3.key]", (path ? lpath_3 : null)])
                rep !== null && rep.push(["invalid mandatory prop value [.'$Prompts'.'|'.3.key]", (path ? lpath_3 : null)])
                return false;
            }
        }
        else if (prop == "command")
        {
            // handle must command property
            must_count += 1;
            // .'$Prompts'.'|'.3.command
            res = (typeof pval === 'string' || pval instanceof String);
            if (! res)
            {
                rep !== null && rep.push(["unexpected string [.'$Prompts'.'|'.3.command]", (path ? lpath_3 : null)])
                rep !== null && rep.push(["invalid mandatory prop value [.'$Prompts'.'|'.3.command]", (path ? lpath_3 : null)])
                return false;
            }
        }
        else if (prop == "filter")
        {
            // handle may filter property
            // .'$Prompts'.'|'.3.filter
            res = (typeof pval === 'string' || pval instanceof String);
            if (! res)
            {
                rep !== null && rep.push(["unexpected string [.'$Prompts'.'|'.3.filter]", (path ? lpath_3 : null)])
                rep !== null && rep.push(["invalid optional prop value [.'$Prompts'.'|'.3.filter]", (path ? lpath_3 : null)])
                return false;
            }
        }
        else if (prop == "valueFormat")
        {
            // handle may valueFormat property
            // .'$Prompts'.'|'.3.valueFormat
            res = (typeof pval === 'string' || pval instanceof String);
            if (! res)
            {
                rep !== null && rep.push(["unexpected string [.'$Prompts'.'|'.3.valueFormat]", (path ? lpath_3 : null)])
                rep !== null && rep.push(["invalid optional prop value [.'$Prompts'.'|'.3.valueFormat]", (path ? lpath_3 : null)])
                return false;
            }
        }
        else if (prop == "labelFormat")
        {
            // handle may labelFormat property
            // .'$Prompts'.'|'.3.labelFormat
            res = (typeof pval === 'string' || pval instanceof String);
            if (! res)
            {
                rep !== null && rep.push(["unexpected string [.'$Prompts'.'|'.3.labelFormat]", (path ? lpath_3 : null)])
                rep !== null && rep.push(["invalid optional prop value [.'$Prompts'.'|'.3.labelFormat]", (path ? lpath_3 : null)])
                return false;
            }
        }
        else
        {
            rep !== null && rep.push(["unexpected prop [.'$Prompts'.'|'.3]", (path ? lpath_3 : null)])
            return false;
        }
    }
    if (must_count != 4)
    {
        if (rep !== null)
        {
            if (! val.hasOwnProperty("command"))
            {
                rep !== null && rep.push(["missing mandatory prop <command> [.'$Prompts'.'|'.3]", path])
            }
            if (! val.hasOwnProperty("key"))
            {
                rep !== null && rep.push(["missing mandatory prop <key> [.'$Prompts'.'|'.3]", path])
            }
            if (! val.hasOwnProperty("title"))
            {
                rep !== null && rep.push(["missing mandatory prop <title> [.'$Prompts'.'|'.3]", path])
            }
            if (! val.hasOwnProperty("type"))
            {
                rep !== null && rep.push(["missing mandatory prop <type> [.'$Prompts'.'|'.3]", path])
            }
        }
        return false;
    }
    return true;
}


// check $Prompts (.'$Prompts')
function json_model_10(val, path, rep)
{
    let res;
    // .'$Prompts'
    let iso_0 = Object.prototype.toString.call(val) === '[object Object]';
    res = iso_0;
    if (res)
    {
        if (val.hasOwnProperty("type"))
        {
            let tag_0 = val["type"];
            let fun_0 = _jm_map_0.get(tag_0);
            if (fun_0 !== undefined)
            {
                res = fun_0(val, path, rep);
            }
            else
            {
                res = false;
                rep !== null && rep.push(["tag <type> value not found [.'$Prompts'.'|']", path])
            }
        }
        else
        {
            res = false;
            rep !== null && rep.push(["tag prop <type> is missing [.'$Prompts'.'|']", path])
        }
    }
    else
    {
        rep !== null && rep.push(["value is not an object [.'$Prompts'.'|']", path])
    }
    return res;
}




// object .gui.theme
function _jm_obj_8(val, path, rep)
{
    if (! (Object.prototype.toString.call(val) === '[object Object]'))
    {
        rep !== null && rep.push(["not an object [.gui.theme]", path])
        return false;
    }
    let res;
    for (const [prop, pval] of Object.entries(val))
    {
        let lpath_6 = path ? path.concat([prop]) : null;
        if (prop == "activeBorderColor")
        {
            // handle may activeBorderColor property
            // .gui.theme.activeBorderColor
            res = json_model_3(pval, (path ? lpath_6 : null), rep);
            if (! res)
            {
                rep !== null && rep.push(["unexpected $colorArray [.gui.theme.activeBorderColor]", (path ? lpath_6 : null)])
                rep !== null && rep.push(["invalid optional prop value [.gui.theme.activeBorderColor]", (path ? lpath_6 : null)])
                return false;
            }
        }
        else if (prop == "inactiveBorderColor")
        {
            // handle may inactiveBorderColor property
            // .gui.theme.inactiveBorderColor
            res = json_model_3(pval, (path ? lpath_6 : null), rep);
            if (! res)
            {
                rep !== null && rep.push(["unexpected $colorArray [.gui.theme.inactiveBorderColor]", (path ? lpath_6 : null)])
                rep !== null && rep.push(["invalid optional prop value [.gui.theme.inactiveBorderColor]", (path ? lpath_6 : null)])
                return false;
            }
        }
        else if (prop == "searchingActiveBorderColor")
        {
            // handle may searchingActiveBorderColor property
            // .gui.theme.searchingActiveBorderColor
            res = json_model_3(pval, (path ? lpath_6 : null), rep);
            if (! res)
            {
                rep !== null && rep.push(["unexpected $colorArray [.gui.theme.searchingActiveBorderColor]", (path ? lpath_6 : null)])
                rep !== null && rep.push(["invalid optional prop value [.gui.theme.searchingActiveBorderColor]", (path ? lpath_6 : null)])
                return false;
            }
        }
        else if (prop == "optionsTextColor")
        {
            // handle may optionsTextColor property
            // .gui.theme.optionsTextColor
            res = json_model_3(pval, (path ? lpath_6 : null), rep);
            if (! res)
            {
                rep !== null && rep.push(["unexpected $colorArray [.gui.theme.optionsTextColor]", (path ? lpath_6 : null)])
                rep !== null && rep.push(["invalid optional prop value [.gui.theme.optionsTextColor]", (path ? lpath_6 : null)])
                return false;
            }
        }
        else if (prop == "selectedLineBgColor")
        {
            // handle may selectedLineBgColor property
            // .gui.theme.selectedLineBgColor
            res = json_model_3(pval, (path ? lpath_6 : null), rep);
            if (! res)
            {
                rep !== null && rep.push(["unexpected $colorArray [.gui.theme.selectedLineBgColor]", (path ? lpath_6 : null)])
                rep !== null && rep.push(["invalid optional prop value [.gui.theme.selectedLineBgColor]", (path ? lpath_6 : null)])
                return false;
            }
        }
        else if (prop == "selectedRangeBgColor")
        {
            // handle may selectedRangeBgColor property
            // .gui.theme.selectedRangeBgColor
            res = json_model_3(pval, (path ? lpath_6 : null), rep);
            if (! res)
            {
                rep !== null && rep.push(["unexpected $colorArray [.gui.theme.selectedRangeBgColor]", (path ? lpath_6 : null)])
                rep !== null && rep.push(["invalid optional prop value [.gui.theme.selectedRangeBgColor]", (path ? lpath_6 : null)])
                return false;
            }
        }
        else if (prop == "cherryPickedCommitBgColor")
        {
            // handle may cherryPickedCommitBgColor property
            // .gui.theme.cherryPickedCommitBgColor
            res = json_model_3(pval, (path ? lpath_6 : null), rep);
            if (! res)
            {
                rep !== null && rep.push(["unexpected $colorArray [.gui.theme.cherryPickedCommitBgColor]", (path ? lpath_6 : null)])
                rep !== null && rep.push(["invalid optional prop value [.gui.theme.cherryPickedCommitBgColor]", (path ? lpath_6 : null)])
                return false;
            }
        }
        else if (prop == "cherryPickedCommitFgColor")
        {
            // handle may cherryPickedCommitFgColor property
            // .gui.theme.cherryPickedCommitFgColor
            res = json_model_3(pval, (path ? lpath_6 : null), rep);
            if (! res)
            {
                rep !== null && rep.push(["unexpected $colorArray [.gui.theme.cherryPickedCommitFgColor]", (path ? lpath_6 : null)])
                rep !== null && rep.push(["invalid optional prop value [.gui.theme.cherryPickedCommitFgColor]", (path ? lpath_6 : null)])
                return false;
            }
        }
        else if (prop == "unstagedChangesColor")
        {
            // handle may unstagedChangesColor property
            // .gui.theme.unstagedChangesColor
            res = json_model_3(pval, (path ? lpath_6 : null), rep);
            if (! res)
            {
                rep !== null && rep.push(["unexpected $colorArray [.gui.theme.unstagedChangesColor]", (path ? lpath_6 : null)])
                rep !== null && rep.push(["invalid optional prop value [.gui.theme.unstagedChangesColor]", (path ? lpath_6 : null)])
                return false;
            }
        }
        else if (prop == "defaultFgColor")
        {
            // handle may defaultFgColor property
            // .gui.theme.defaultFgColor
            res = json_model_3(pval, (path ? lpath_6 : null), rep);
            if (! res)
            {
                rep !== null && rep.push(["unexpected $colorArray [.gui.theme.defaultFgColor]", (path ? lpath_6 : null)])
                rep !== null && rep.push(["invalid optional prop value [.gui.theme.defaultFgColor]", (path ? lpath_6 : null)])
                return false;
            }
        }
        else
        {
            rep !== null && rep.push(["unexpected prop [.gui.theme]", (path ? lpath_6 : null)])
            return false;
        }
    }
    return true;
}

// object .gui.commitLength
function _jm_obj_9(val, path, rep)
{
    if (! (Object.prototype.toString.call(val) === '[object Object]'))
    {
        rep !== null && rep.push(["not an object [.gui.commitLength]", path])
        return false;
    }
    let res;
    for (const [prop, pval] of Object.entries(val))
    {
        let lpath_7 = path ? path.concat([prop]) : null;
        if (prop == "show")
        {
            // handle may show property
            // .gui.commitLength.show
            res = (typeof pval === 'boolean' || pval instanceof Boolean);
            if (! res)
            {
                rep !== null && rep.push(["not a bool [.gui.commitLength.show]", (path ? lpath_7 : null)])
                rep !== null && rep.push(["invalid optional prop value [.gui.commitLength.show]", (path ? lpath_7 : null)])
                return false;
            }
        }
        else
        {
            rep !== null && rep.push(["unexpected prop [.gui.commitLength]", (path ? lpath_7 : null)])
            return false;
        }
    }
    return true;
}




const _jm_re_1 = (s) => _jm_re_1_re.exec(s) !== null

// object .gui.authorColors
function _jm_obj_10(val, path, rep)
{
    if (! (Object.prototype.toString.call(val) === '[object Object]'))
    {
        rep !== null && rep.push(["not an object [.gui.authorColors]", path])
        return false;
    }
    let res;
    for (const [prop, pval] of Object.entries(val))
    {
        let lpath_8 = path ? path.concat([prop]) : null;
        if (_jm_re_1(prop, path, rep))
        {
            // handle 1 re props
            // .gui.authorColors.'/./'
            res = json_model_2(pval, (path ? lpath_8 : null), rep);
            if (! res)
            {
                rep !== null && rep.push(["unexpected $color [.gui.authorColors.'/./']", (path ? lpath_8 : null)])
                return false;
            }
        }
        else
        {
            rep !== null && rep.push(["unexpected prop [.gui.authorColors]", (path ? lpath_8 : null)])
            return false;
        }
    }
    return true;
}

// object .gui.branchColors
function _jm_obj_11(val, path, rep)
{
    if (! (Object.prototype.toString.call(val) === '[object Object]'))
    {
        rep !== null && rep.push(["not an object [.gui.branchColors]", path])
        return false;
    }
    let res;
    for (const [prop, pval] of Object.entries(val))
    {
        let lpath_9 = path ? path.concat([prop]) : null;
        if (_jm_re_1(prop, path, rep))
        {
            // handle 1 re props
            // .gui.branchColors.'/./'
            res = json_model_2(pval, (path ? lpath_9 : null), rep);
            if (! res)
            {
                rep !== null && rep.push(["unexpected $color [.gui.branchColors.'/./']", (path ? lpath_9 : null)])
                return false;
            }
        }
        else
        {
            rep !== null && rep.push(["unexpected prop [.gui.branchColors]", (path ? lpath_9 : null)])
            return false;
        }
    }
    return true;
}

// object .gui
function _jm_obj_7(val, path, rep)
{
    if (! (Object.prototype.toString.call(val) === '[object Object]'))
    {
        rep !== null && rep.push(["not an object [.gui]", path])
        return false;
    }
    let res;
    for (const [prop, pval] of Object.entries(val))
    {
        let lpath_5 = path ? path.concat([prop]) : null;
        if (prop == "windowSize")
        {
            // handle may windowSize property
            // .gui.windowSize
            res = ((pval === null || (typeof pval === 'number' || pval instanceof Number) || (typeof pval === 'boolean' || pval instanceof Boolean) || (typeof pval === 'string' || pval instanceof String))) && _jm_cst_3.has(pval);
            if (! res)
            {
                rep !== null && rep.push(["value not in enum [.gui.windowSize.'|']", (path ? lpath_5 : null)])
                rep !== null && rep.push(["invalid optional prop value [.gui.windowSize]", (path ? lpath_5 : null)])
                return false;
            }
        }
        else if (prop == "scrollHeight")
        {
            // handle may scrollHeight property
            // .gui.scrollHeight
            res = ((typeof pval === 'number' || pval instanceof Number) && Number.isInteger(pval)) && pval >= 1;
            if (! res)
            {
                rep !== null && rep.push(["not a 1 strict int [.gui.scrollHeight]", (path ? lpath_5 : null)])
                rep !== null && rep.push(["invalid optional prop value [.gui.scrollHeight]", (path ? lpath_5 : null)])
                return false;
            }
        }
        else if (prop == "scrollPastBottom")
        {
            // handle may scrollPastBottom property
            // .gui.scrollPastBottom
            res = (typeof pval === 'boolean' || pval instanceof Boolean);
            if (! res)
            {
                rep !== null && rep.push(["not a bool [.gui.scrollPastBottom]", (path ? lpath_5 : null)])
                rep !== null && rep.push(["invalid optional prop value [.gui.scrollPastBottom]", (path ? lpath_5 : null)])
                return false;
            }
        }
        else if (prop == "sidePanelWidth")
        {
            // handle may sidePanelWidth property
            // .gui.sidePanelWidth
            // .gui.sidePanelWidth.'@'
            res = ((typeof pval === 'number' || pval instanceof Number)) && pval >= 0.0;
            if (! res)
            {
                rep !== null && rep.push(["not a 0.0 strict float [.gui.sidePanelWidth.'@']", (path ? lpath_5 : null)])
            }
            if (res)
            {
                let fval_0 = pval;
                res = fval_0 <= 1.0;
                if (! res)
                {
                    rep !== null && rep.push(["constraints failed [.gui.sidePanelWidth]", (path ? lpath_5 : null)])
                }
            }
            if (! res)
            {
                rep !== null && rep.push(["invalid optional prop value [.gui.sidePanelWidth]", (path ? lpath_5 : null)])
                return false;
            }
        }
        else if (prop == "expandFocusedSidePanel")
        {
            // handle may expandFocusedSidePanel property
            // .gui.expandFocusedSidePanel
            res = (typeof pval === 'boolean' || pval instanceof Boolean);
            if (! res)
            {
                rep !== null && rep.push(["not a bool [.gui.expandFocusedSidePanel]", (path ? lpath_5 : null)])
                rep !== null && rep.push(["invalid optional prop value [.gui.expandFocusedSidePanel]", (path ? lpath_5 : null)])
                return false;
            }
        }
        else if (prop == "mainPanelSplitMode")
        {
            // handle may mainPanelSplitMode property
            // .gui.mainPanelSplitMode
            res = ((pval === null || (typeof pval === 'number' || pval instanceof Number) || (typeof pval === 'boolean' || pval instanceof Boolean) || (typeof pval === 'string' || pval instanceof String))) && _jm_cst_4.has(pval);
            if (! res)
            {
                rep !== null && rep.push(["value not in enum [.gui.mainPanelSplitMode.'|']", (path ? lpath_5 : null)])
                rep !== null && rep.push(["invalid optional prop value [.gui.mainPanelSplitMode]", (path ? lpath_5 : null)])
                return false;
            }
        }
        else if (prop == "language")
        {
            // handle may language property
            // .gui.language
            res = ((pval === null || (typeof pval === 'number' || pval instanceof Number) || (typeof pval === 'boolean' || pval instanceof Boolean) || (typeof pval === 'string' || pval instanceof String))) && _jm_cst_5.has(pval);
            if (! res)
            {
                rep !== null && rep.push(["value not in enum [.gui.language.'|']", (path ? lpath_5 : null)])
                rep !== null && rep.push(["invalid optional prop value [.gui.language]", (path ? lpath_5 : null)])
                return false;
            }
        }
        else if (prop == "timeFormat")
        {
            // handle may timeFormat property
            // .gui.timeFormat
            res = (typeof pval === 'string' || pval instanceof String);
            if (! res)
            {
                rep !== null && rep.push(["unexpected string [.gui.timeFormat]", (path ? lpath_5 : null)])
                rep !== null && rep.push(["invalid optional prop value [.gui.timeFormat]", (path ? lpath_5 : null)])
                return false;
            }
        }
        else if (prop == "shortTimeFormat")
        {
            // handle may shortTimeFormat property
            // .gui.shortTimeFormat
            res = (typeof pval === 'string' || pval instanceof String);
            if (! res)
            {
                rep !== null && rep.push(["unexpected string [.gui.shortTimeFormat]", (path ? lpath_5 : null)])
                rep !== null && rep.push(["invalid optional prop value [.gui.shortTimeFormat]", (path ? lpath_5 : null)])
                return false;
            }
        }
        else if (prop == "theme")
        {
            // handle may theme property
            // .gui.theme
            res = _jm_obj_8(pval, (path ? lpath_5 : null), rep);
            if (! res)
            {
                rep !== null && rep.push(["unexpected element [.gui.theme]", (path ? lpath_5 : null)])
                rep !== null && rep.push(["invalid optional prop value [.gui.theme]", (path ? lpath_5 : null)])
                return false;
            }
        }
        else if (prop == "commitLength")
        {
            // handle may commitLength property
            // .gui.commitLength
            res = _jm_obj_9(pval, (path ? lpath_5 : null), rep);
            if (! res)
            {
                rep !== null && rep.push(["unexpected element [.gui.commitLength]", (path ? lpath_5 : null)])
                rep !== null && rep.push(["invalid optional prop value [.gui.commitLength]", (path ? lpath_5 : null)])
                return false;
            }
        }
        else if (prop == "mouseEvents")
        {
            // handle may mouseEvents property
            // .gui.mouseEvents
            res = (typeof pval === 'boolean' || pval instanceof Boolean);
            if (! res)
            {
                rep !== null && rep.push(["not a bool [.gui.mouseEvents]", (path ? lpath_5 : null)])
                rep !== null && rep.push(["invalid optional prop value [.gui.mouseEvents]", (path ? lpath_5 : null)])
                return false;
            }
        }
        else if (prop == "skipDiscardChangeWarning")
        {
            // handle may skipDiscardChangeWarning property
            // .gui.skipDiscardChangeWarning
            res = (typeof pval === 'boolean' || pval instanceof Boolean);
            if (! res)
            {
                rep !== null && rep.push(["not a bool [.gui.skipDiscardChangeWarning]", (path ? lpath_5 : null)])
                rep !== null && rep.push(["invalid optional prop value [.gui.skipDiscardChangeWarning]", (path ? lpath_5 : null)])
                return false;
            }
        }
        else if (prop == "skipStashWarning")
        {
            // handle may skipStashWarning property
            // .gui.skipStashWarning
            res = (typeof pval === 'boolean' || pval instanceof Boolean);
            if (! res)
            {
                rep !== null && rep.push(["not a bool [.gui.skipStashWarning]", (path ? lpath_5 : null)])
                rep !== null && rep.push(["invalid optional prop value [.gui.skipStashWarning]", (path ? lpath_5 : null)])
                return false;
            }
        }
        else if (prop == "showFileTree")
        {
            // handle may showFileTree property
            // .gui.showFileTree
            res = (typeof pval === 'boolean' || pval instanceof Boolean);
            if (! res)
            {
                rep !== null && rep.push(["not a bool [.gui.showFileTree]", (path ? lpath_5 : null)])
                rep !== null && rep.push(["invalid optional prop value [.gui.showFileTree]", (path ? lpath_5 : null)])
                return false;
            }
        }
        else if (prop == "showListFooter")
        {
            // handle may showListFooter property
            // .gui.showListFooter
            res = (typeof pval === 'boolean' || pval instanceof Boolean);
            if (! res)
            {
                rep !== null && rep.push(["not a bool [.gui.showListFooter]", (path ? lpath_5 : null)])
                rep !== null && rep.push(["invalid optional prop value [.gui.showListFooter]", (path ? lpath_5 : null)])
                return false;
            }
        }
        else if (prop == "showRandomTip")
        {
            // handle may showRandomTip property
            // .gui.showRandomTip
            res = (typeof pval === 'boolean' || pval instanceof Boolean);
            if (! res)
            {
                rep !== null && rep.push(["not a bool [.gui.showRandomTip]", (path ? lpath_5 : null)])
                rep !== null && rep.push(["invalid optional prop value [.gui.showRandomTip]", (path ? lpath_5 : null)])
                return false;
            }
        }
        else if (prop == "showBranchCommitHash")
        {
            // handle may showBranchCommitHash property
            // .gui.showBranchCommitHash
            res = (typeof pval === 'boolean' || pval instanceof Boolean);
            if (! res)
            {
                rep !== null && rep.push(["not a bool [.gui.showBranchCommitHash]", (path ? lpath_5 : null)])
                rep !== null && rep.push(["invalid optional prop value [.gui.showBranchCommitHash]", (path ? lpath_5 : null)])
                return false;
            }
        }
        else if (prop == "showBottomLine")
        {
            // handle may showBottomLine property
            // .gui.showBottomLine
            res = (typeof pval === 'boolean' || pval instanceof Boolean);
            if (! res)
            {
                rep !== null && rep.push(["not a bool [.gui.showBottomLine]", (path ? lpath_5 : null)])
                rep !== null && rep.push(["invalid optional prop value [.gui.showBottomLine]", (path ? lpath_5 : null)])
                return false;
            }
        }
        else if (prop == "showCommandLog")
        {
            // handle may showCommandLog property
            // .gui.showCommandLog
            res = (typeof pval === 'boolean' || pval instanceof Boolean);
            if (! res)
            {
                rep !== null && rep.push(["not a bool [.gui.showCommandLog]", (path ? lpath_5 : null)])
                rep !== null && rep.push(["invalid optional prop value [.gui.showCommandLog]", (path ? lpath_5 : null)])
                return false;
            }
        }
        else if (prop == "nerdFontsVersion")
        {
            // handle may nerdFontsVersion property
            // .gui.nerdFontsVersion
            res = ((pval === null || (typeof pval === 'number' || pval instanceof Number) || (typeof pval === 'boolean' || pval instanceof Boolean) || (typeof pval === 'string' || pval instanceof String))) && _jm_cst_6.has(pval);
            if (! res)
            {
                rep !== null && rep.push(["value not in enum [.gui.nerdFontsVersion.'|']", (path ? lpath_5 : null)])
            }
            if (! res)
            {
                res = (typeof pval === 'string' || pval instanceof String);
                if (! res)
                {
                    rep !== null && rep.push(["unexpected type [.gui.nerdFontsVersion.'|']", (path ? lpath_5 : null)])
                }
                if (res)
                {
                    // .gui.nerdFontsVersion.'|'.0
                    res = true;
                    if (res)
                    {
                        if (rep !== null) rep.length = 0
                    }
                    else
                    {
                        rep !== null && rep.push(["unexpected string [.gui.nerdFontsVersion.'|'.0]", (path ? lpath_5 : null)])
                        rep !== null && rep.push(["no model matched [.gui.nerdFontsVersion.'|']", (path ? lpath_5 : null)])
                    }
                }
            }
            if (! res)
            {
                rep !== null && rep.push(["invalid optional prop value [.gui.nerdFontsVersion]", (path ? lpath_5 : null)])
                return false;
            }
        }
        else if (prop == "commandLogSize")
        {
            // handle may commandLogSize property
            // .gui.commandLogSize
            res = ((typeof pval === 'number' || pval instanceof Number) && Number.isInteger(pval)) && pval >= 0;
            if (! res)
            {
                rep !== null && rep.push(["not a 0 strict int [.gui.commandLogSize]", (path ? lpath_5 : null)])
                rep !== null && rep.push(["invalid optional prop value [.gui.commandLogSize]", (path ? lpath_5 : null)])
                return false;
            }
        }
        else if (prop == "splitDiff")
        {
            // handle may splitDiff property
            // .gui.splitDiff
            res = ((pval === null || (typeof pval === 'number' || pval instanceof Number) || (typeof pval === 'boolean' || pval instanceof Boolean) || (typeof pval === 'string' || pval instanceof String))) && _jm_cst_7.has(pval);
            if (! res)
            {
                rep !== null && rep.push(["value not in enum [.gui.splitDiff.'|']", (path ? lpath_5 : null)])
                rep !== null && rep.push(["invalid optional prop value [.gui.splitDiff]", (path ? lpath_5 : null)])
                return false;
            }
        }
        else if (prop == "skipRewordInEditorWarning")
        {
            // handle may skipRewordInEditorWarning property
            // .gui.skipRewordInEditorWarning
            res = (typeof pval === 'boolean' || pval instanceof Boolean);
            if (! res)
            {
                rep !== null && rep.push(["not a bool [.gui.skipRewordInEditorWarning]", (path ? lpath_5 : null)])
                rep !== null && rep.push(["invalid optional prop value [.gui.skipRewordInEditorWarning]", (path ? lpath_5 : null)])
                return false;
            }
        }
        else if (prop == "border")
        {
            // handle may border property
            // .gui.border
            res = ((pval === null || (typeof pval === 'number' || pval instanceof Number) || (typeof pval === 'boolean' || pval instanceof Boolean) || (typeof pval === 'string' || pval instanceof String))) && _jm_cst_8.has(pval);
            if (! res)
            {
                rep !== null && rep.push(["value not in enum [.gui.border.'|']", (path ? lpath_5 : null)])
                rep !== null && rep.push(["invalid optional prop value [.gui.border]", (path ? lpath_5 : null)])
                return false;
            }
        }
        else if (prop == "animateExplosion")
        {
            // handle may animateExplosion property
            // .gui.animateExplosion
            res = (typeof pval === 'boolean' || pval instanceof Boolean);
            if (! res)
            {
                rep !== null && rep.push(["not a bool [.gui.animateExplosion]", (path ? lpath_5 : null)])
                rep !== null && rep.push(["invalid optional prop value [.gui.animateExplosion]", (path ? lpath_5 : null)])
                return false;
            }
        }
        else if (prop == "authorColors")
        {
            // handle may authorColors property
            // .gui.authorColors
            res = _jm_obj_10(pval, (path ? lpath_5 : null), rep);
            if (! res)
            {
                rep !== null && rep.push(["unexpected element [.gui.authorColors]", (path ? lpath_5 : null)])
                rep !== null && rep.push(["invalid optional prop value [.gui.authorColors]", (path ? lpath_5 : null)])
                return false;
            }
        }
        else if (prop == "branchColors")
        {
            // handle may branchColors property
            // .gui.branchColors
            res = _jm_obj_11(pval, (path ? lpath_5 : null), rep);
            if (! res)
            {
                rep !== null && rep.push(["unexpected element [.gui.branchColors]", (path ? lpath_5 : null)])
                rep !== null && rep.push(["invalid optional prop value [.gui.branchColors]", (path ? lpath_5 : null)])
                return false;
            }
        }
        else
        {
            rep !== null && rep.push(["unexpected prop [.gui]", (path ? lpath_5 : null)])
            return false;
        }
    }
    return true;
}


// object .git.paging
function _jm_obj_13(val, path, rep)
{
    if (! (Object.prototype.toString.call(val) === '[object Object]'))
    {
        rep !== null && rep.push(["not an object [.git.paging]", path])
        return false;
    }
    let res;
    for (const [prop, pval] of Object.entries(val))
    {
        let lpath_11 = path ? path.concat([prop]) : null;
        if (prop == "colorArg")
        {
            // handle may colorArg property
            // .git.paging.colorArg
            res = ((pval === null || (typeof pval === 'number' || pval instanceof Number) || (typeof pval === 'boolean' || pval instanceof Boolean) || (typeof pval === 'string' || pval instanceof String))) && _jm_cst_9.has(pval);
            if (! res)
            {
                rep !== null && rep.push(["value not in enum [.git.paging.colorArg.'|']", (path ? lpath_11 : null)])
                rep !== null && rep.push(["invalid optional prop value [.git.paging.colorArg]", (path ? lpath_11 : null)])
                return false;
            }
        }
        else if (prop == "useConfig")
        {
            // handle may useConfig property
            // .git.paging.useConfig
            res = (typeof pval === 'boolean' || pval instanceof Boolean);
            if (! res)
            {
                rep !== null && rep.push(["not a bool [.git.paging.useConfig]", (path ? lpath_11 : null)])
                rep !== null && rep.push(["invalid optional prop value [.git.paging.useConfig]", (path ? lpath_11 : null)])
                return false;
            }
        }
        else if (prop == "pager")
        {
            // handle may pager property
            // .git.paging.pager
            // .git.paging.pager.'@'
            res = (typeof pval === 'string' || pval instanceof String);
            if (! res)
            {
                rep !== null && rep.push(["unexpected string [.git.paging.pager.'@']", (path ? lpath_11 : null)])
            }
            if (res)
            {
                let sval_1 = pval;
                res = sval_1 != "";
                if (! res)
                {
                    rep !== null && rep.push(["constraints failed [.git.paging.pager]", (path ? lpath_11 : null)])
                }
            }
            if (! res)
            {
                rep !== null && rep.push(["invalid optional prop value [.git.paging.pager]", (path ? lpath_11 : null)])
                return false;
            }
        }
        else
        {
            rep !== null && rep.push(["unexpected prop [.git.paging]", (path ? lpath_11 : null)])
            return false;
        }
    }
    return true;
}

// object .git.commit
function _jm_obj_14(val, path, rep)
{
    if (! (Object.prototype.toString.call(val) === '[object Object]'))
    {
        rep !== null && rep.push(["not an object [.git.commit]", path])
        return false;
    }
    let res;
    for (const [prop, pval] of Object.entries(val))
    {
        let lpath_12 = path ? path.concat([prop]) : null;
        if (prop == "signOff")
        {
            // handle may signOff property
            // .git.commit.signOff
            res = (typeof pval === 'boolean' || pval instanceof Boolean);
            if (! res)
            {
                rep !== null && rep.push(["not a bool [.git.commit.signOff]", (path ? lpath_12 : null)])
                rep !== null && rep.push(["invalid optional prop value [.git.commit.signOff]", (path ? lpath_12 : null)])
                return false;
            }
        }
        else
        {
            rep !== null && rep.push(["unexpected prop [.git.commit]", (path ? lpath_12 : null)])
            return false;
        }
    }
    return true;
}

// object .git.merging
function _jm_obj_15(val, path, rep)
{
    if (! (Object.prototype.toString.call(val) === '[object Object]'))
    {
        rep !== null && rep.push(["not an object [.git.merging]", path])
        return false;
    }
    let res;
    for (const [prop, pval] of Object.entries(val))
    {
        let lpath_13 = path ? path.concat([prop]) : null;
        if (prop == "manualCommit")
        {
            // handle may manualCommit property
            // .git.merging.manualCommit
            res = (typeof pval === 'boolean' || pval instanceof Boolean);
            if (! res)
            {
                rep !== null && rep.push(["not a bool [.git.merging.manualCommit]", (path ? lpath_13 : null)])
                rep !== null && rep.push(["invalid optional prop value [.git.merging.manualCommit]", (path ? lpath_13 : null)])
                return false;
            }
        }
        else if (prop == "args")
        {
            // handle may args property
            // .git.merging.args
            res = (typeof pval === 'string' || pval instanceof String);
            if (! res)
            {
                rep !== null && rep.push(["unexpected string [.git.merging.args]", (path ? lpath_13 : null)])
                rep !== null && rep.push(["invalid optional prop value [.git.merging.args]", (path ? lpath_13 : null)])
                return false;
            }
        }
        else
        {
            rep !== null && rep.push(["unexpected prop [.git.merging]", (path ? lpath_13 : null)])
            return false;
        }
    }
    return true;
}



// object .git.log
function _jm_obj_16(val, path, rep)
{
    if (! (Object.prototype.toString.call(val) === '[object Object]'))
    {
        rep !== null && rep.push(["not an object [.git.log]", path])
        return false;
    }
    let res;
    for (const [prop, pval] of Object.entries(val))
    {
        let lpath_14 = path ? path.concat([prop]) : null;
        if (prop == "order")
        {
            // handle may order property
            // .git.log.order
            res = ((pval === null || (typeof pval === 'number' || pval instanceof Number) || (typeof pval === 'boolean' || pval instanceof Boolean) || (typeof pval === 'string' || pval instanceof String))) && _jm_cst_10.has(pval);
            if (! res)
            {
                rep !== null && rep.push(["value not in enum [.git.log.order.'|']", (path ? lpath_14 : null)])
                rep !== null && rep.push(["invalid optional prop value [.git.log.order]", (path ? lpath_14 : null)])
                return false;
            }
        }
        else if (prop == "showGraph")
        {
            // handle may showGraph property
            // .git.log.showGraph
            res = ((pval === null || (typeof pval === 'number' || pval instanceof Number) || (typeof pval === 'boolean' || pval instanceof Boolean) || (typeof pval === 'string' || pval instanceof String))) && _jm_cst_11.has(pval);
            if (! res)
            {
                rep !== null && rep.push(["value not in enum [.git.log.showGraph.'|']", (path ? lpath_14 : null)])
                rep !== null && rep.push(["invalid optional prop value [.git.log.showGraph]", (path ? lpath_14 : null)])
                return false;
            }
        }
        else if (prop == "showWholeGraph")
        {
            // handle may showWholeGraph property
            // .git.log.showWholeGraph
            res = (typeof pval === 'boolean' || pval instanceof Boolean);
            if (! res)
            {
                rep !== null && rep.push(["not a bool [.git.log.showWholeGraph]", (path ? lpath_14 : null)])
                rep !== null && rep.push(["invalid optional prop value [.git.log.showWholeGraph]", (path ? lpath_14 : null)])
                return false;
            }
        }
        else
        {
            rep !== null && rep.push(["unexpected prop [.git.log]", (path ? lpath_14 : null)])
            return false;
        }
    }
    return true;
}

// object .git.commitPrefixes.'/./'
function _jm_obj_18(val, path, rep)
{
    // check close must only props
    if (! (Object.prototype.toString.call(val) === '[object Object]'))
    {
        rep !== null && rep.push(["not an object [.git.commitPrefixes.'/./']", path])
        return false;
    }
    if (Object.keys(val).length != 2)
    {
        rep !== null && rep.push(["bad property count [.git.commitPrefixes.'/./']", path])
        return false;
    }
    let lpath;
    let pval;
    let res;
    if (! val.hasOwnProperty("pattern"))
    {
        rep !== null && rep.push(["missing mandatory prop <pattern> [.git.commitPrefixes.'/./']", path])
        return false;
    }
    lpath = path ? path.concat(["pattern"]) : null;
    pval = val["pattern"];
    // .git.commitPrefixes.'/./'.pattern
    res = json_model_8(pval, (path ? lpath : null), rep);
    if (! res)
    {
        rep !== null && rep.push(["unexpected $neString [.git.commitPrefixes.'/./'.pattern]", (path ? lpath : null)])
        rep !== null && rep.push(["unexpected value for mandatory prop <pattern> [.git.commitPrefixes.'/./']", (path ? lpath : null)])
        return false;
    }
    if (! val.hasOwnProperty("replace"))
    {
        rep !== null && rep.push(["missing mandatory prop <replace> [.git.commitPrefixes.'/./']", path])
        return false;
    }
    lpath = path ? path.concat(["replace"]) : null;
    pval = val["replace"];
    // .git.commitPrefixes.'/./'.replace
    res = json_model_8(pval, (path ? lpath : null), rep);
    if (! res)
    {
        rep !== null && rep.push(["unexpected $neString [.git.commitPrefixes.'/./'.replace]", (path ? lpath : null)])
        rep !== null && rep.push(["unexpected value for mandatory prop <replace> [.git.commitPrefixes.'/./']", (path ? lpath : null)])
        return false;
    }
    return true;
}

// object .git.commitPrefixes
function _jm_obj_17(val, path, rep)
{
    if (! (Object.prototype.toString.call(val) === '[object Object]'))
    {
        rep !== null && rep.push(["not an object [.git.commitPrefixes]", path])
        return false;
    }
    let res;
    for (const [prop, pval] of Object.entries(val))
    {
        let lpath_15 = path ? path.concat([prop]) : null;
        if (_jm_re_1(prop, path, rep))
        {
            // handle 1 re props
            // .git.commitPrefixes.'/./'
            res = _jm_obj_18(pval, (path ? lpath_15 : null), rep);
            if (! res)
            {
                rep !== null && rep.push(["unexpected element [.git.commitPrefixes.'/./']", (path ? lpath_15 : null)])
                return false;
            }
        }
        else
        {
            rep !== null && rep.push(["unexpected prop [.git.commitPrefixes]", (path ? lpath_15 : null)])
            return false;
        }
    }
    return true;
}

// object .git
function _jm_obj_12(val, path, rep)
{
    if (! (Object.prototype.toString.call(val) === '[object Object]'))
    {
        rep !== null && rep.push(["not an object [.git]", path])
        return false;
    }
    let res;
    for (const [prop, pval] of Object.entries(val))
    {
        let lpath_10 = path ? path.concat([prop]) : null;
        if (prop == "paging")
        {
            // handle may paging property
            // .git.paging
            res = _jm_obj_13(pval, (path ? lpath_10 : null), rep);
            if (! res)
            {
                rep !== null && rep.push(["unexpected element [.git.paging]", (path ? lpath_10 : null)])
                rep !== null && rep.push(["invalid optional prop value [.git.paging]", (path ? lpath_10 : null)])
                return false;
            }
        }
        else if (prop == "commit")
        {
            // handle may commit property
            // .git.commit
            res = _jm_obj_14(pval, (path ? lpath_10 : null), rep);
            if (! res)
            {
                rep !== null && rep.push(["unexpected element [.git.commit]", (path ? lpath_10 : null)])
                rep !== null && rep.push(["invalid optional prop value [.git.commit]", (path ? lpath_10 : null)])
                return false;
            }
        }
        else if (prop == "merging")
        {
            // handle may merging property
            // .git.merging
            res = _jm_obj_15(pval, (path ? lpath_10 : null), rep);
            if (! res)
            {
                rep !== null && rep.push(["unexpected element [.git.merging]", (path ? lpath_10 : null)])
                rep !== null && rep.push(["invalid optional prop value [.git.merging]", (path ? lpath_10 : null)])
                return false;
            }
        }
        else if (prop == "log")
        {
            // handle may log property
            // .git.log
            res = _jm_obj_16(pval, (path ? lpath_10 : null), rep);
            if (! res)
            {
                rep !== null && rep.push(["unexpected element [.git.log]", (path ? lpath_10 : null)])
                rep !== null && rep.push(["invalid optional prop value [.git.log]", (path ? lpath_10 : null)])
                return false;
            }
        }
        else if (prop == "skipHookPrefix")
        {
            // handle may skipHookPrefix property
            // .git.skipHookPrefix
            res = (typeof pval === 'string' || pval instanceof String);
            if (! res)
            {
                rep !== null && rep.push(["unexpected string [.git.skipHookPrefix]", (path ? lpath_10 : null)])
                rep !== null && rep.push(["invalid optional prop value [.git.skipHookPrefix]", (path ? lpath_10 : null)])
                return false;
            }
        }
        else if (prop == "mainBranches")
        {
            // handle may mainBranches property
            // .git.mainBranches
            res = json_model_9(pval, (path ? lpath_10 : null), rep);
            if (! res)
            {
                rep !== null && rep.push(["unexpected $stringArray [.git.mainBranches]", (path ? lpath_10 : null)])
                rep !== null && rep.push(["invalid optional prop value [.git.mainBranches]", (path ? lpath_10 : null)])
                return false;
            }
        }
        else if (prop == "autoFetch")
        {
            // handle may autoFetch property
            // .git.autoFetch
            res = (typeof pval === 'boolean' || pval instanceof Boolean);
            if (! res)
            {
                rep !== null && rep.push(["not a bool [.git.autoFetch]", (path ? lpath_10 : null)])
                rep !== null && rep.push(["invalid optional prop value [.git.autoFetch]", (path ? lpath_10 : null)])
                return false;
            }
        }
        else if (prop == "autoRefresh")
        {
            // handle may autoRefresh property
            // .git.autoRefresh
            res = (typeof pval === 'boolean' || pval instanceof Boolean);
            if (! res)
            {
                rep !== null && rep.push(["not a bool [.git.autoRefresh]", (path ? lpath_10 : null)])
                rep !== null && rep.push(["invalid optional prop value [.git.autoRefresh]", (path ? lpath_10 : null)])
                return false;
            }
        }
        else if (prop == "fetchAll")
        {
            // handle may fetchAll property
            // .git.fetchAll
            res = (typeof pval === 'boolean' || pval instanceof Boolean);
            if (! res)
            {
                rep !== null && rep.push(["not a bool [.git.fetchAll]", (path ? lpath_10 : null)])
                rep !== null && rep.push(["invalid optional prop value [.git.fetchAll]", (path ? lpath_10 : null)])
                return false;
            }
        }
        else if (prop == "branchLogCmd")
        {
            // handle may branchLogCmd property
            // .git.branchLogCmd
            res = (typeof pval === 'string' || pval instanceof String);
            if (! res)
            {
                rep !== null && rep.push(["unexpected string [.git.branchLogCmd]", (path ? lpath_10 : null)])
                rep !== null && rep.push(["invalid optional prop value [.git.branchLogCmd]", (path ? lpath_10 : null)])
                return false;
            }
        }
        else if (prop == "allBranchesLogCmd")
        {
            // handle may allBranchesLogCmd property
            // .git.allBranchesLogCmd
            res = (typeof pval === 'string' || pval instanceof String);
            if (! res)
            {
                rep !== null && rep.push(["unexpected string [.git.allBranchesLogCmd]", (path ? lpath_10 : null)])
                rep !== null && rep.push(["invalid optional prop value [.git.allBranchesLogCmd]", (path ? lpath_10 : null)])
                return false;
            }
        }
        else if (prop == "overrideGpg")
        {
            // handle may overrideGpg property
            // .git.overrideGpg
            res = (typeof pval === 'boolean' || pval instanceof Boolean);
            if (! res)
            {
                rep !== null && rep.push(["not a bool [.git.overrideGpg]", (path ? lpath_10 : null)])
                rep !== null && rep.push(["invalid optional prop value [.git.overrideGpg]", (path ? lpath_10 : null)])
                return false;
            }
        }
        else if (prop == "disableForcePushing")
        {
            // handle may disableForcePushing property
            // .git.disableForcePushing
            res = (typeof pval === 'boolean' || pval instanceof Boolean);
            if (! res)
            {
                rep !== null && rep.push(["not a bool [.git.disableForcePushing]", (path ? lpath_10 : null)])
                rep !== null && rep.push(["invalid optional prop value [.git.disableForcePushing]", (path ? lpath_10 : null)])
                return false;
            }
        }
        else if (prop == "parseEmoji")
        {
            // handle may parseEmoji property
            // .git.parseEmoji
            res = (typeof pval === 'boolean' || pval instanceof Boolean);
            if (! res)
            {
                rep !== null && rep.push(["not a bool [.git.parseEmoji]", (path ? lpath_10 : null)])
                rep !== null && rep.push(["invalid optional prop value [.git.parseEmoji]", (path ? lpath_10 : null)])
                return false;
            }
        }
        else if (prop == "diffContextSize")
        {
            // handle may diffContextSize property
            // .git.diffContextSize
            res = ((typeof pval === 'number' || pval instanceof Number) && Number.isInteger(pval)) && pval >= 0;
            if (! res)
            {
                rep !== null && rep.push(["not a 0 strict int [.git.diffContextSize]", (path ? lpath_10 : null)])
                rep !== null && rep.push(["invalid optional prop value [.git.diffContextSize]", (path ? lpath_10 : null)])
                return false;
            }
        }
        else if (prop == "commitPrefixes")
        {
            // handle may commitPrefixes property
            // .git.commitPrefixes
            res = _jm_obj_17(pval, (path ? lpath_10 : null), rep);
            if (! res)
            {
                rep !== null && rep.push(["unexpected element [.git.commitPrefixes]", (path ? lpath_10 : null)])
                rep !== null && rep.push(["invalid optional prop value [.git.commitPrefixes]", (path ? lpath_10 : null)])
                return false;
            }
        }
        else
        {
            rep !== null && rep.push(["unexpected prop [.git]", (path ? lpath_10 : null)])
            return false;
        }
    }
    return true;
}


// object .os
function _jm_obj_19(val, path, rep)
{
    if (! (Object.prototype.toString.call(val) === '[object Object]'))
    {
        rep !== null && rep.push(["not an object [.os]", path])
        return false;
    }
    let res;
    for (const [prop, pval] of Object.entries(val))
    {
        let lpath_16 = path ? path.concat([prop]) : null;
        if (prop == "copyToClipboardCmd")
        {
            // handle may copyToClipboardCmd property
            // .os.copyToClipboardCmd
            res = (typeof pval === 'string' || pval instanceof String);
            if (! res)
            {
                rep !== null && rep.push(["unexpected string [.os.copyToClipboardCmd]", (path ? lpath_16 : null)])
                rep !== null && rep.push(["invalid optional prop value [.os.copyToClipboardCmd]", (path ? lpath_16 : null)])
                return false;
            }
        }
        else if (prop == "editPreset")
        {
            // handle may editPreset property
            // .os.editPreset
            res = ((pval === null || (typeof pval === 'number' || pval instanceof Number) || (typeof pval === 'boolean' || pval instanceof Boolean) || (typeof pval === 'string' || pval instanceof String))) && _jm_cst_12.has(pval);
            if (! res)
            {
                rep !== null && rep.push(["value not in enum [.os.editPreset.'|']", (path ? lpath_16 : null)])
            }
            if (! res)
            {
                res = (typeof pval === 'string' || pval instanceof String);
                if (! res)
                {
                    rep !== null && rep.push(["unexpected type [.os.editPreset.'|']", (path ? lpath_16 : null)])
                }
                if (res)
                {
                    // .os.editPreset.'|'.0
                    res = true;
                    if (res)
                    {
                        if (rep !== null) rep.length = 0
                    }
                    else
                    {
                        rep !== null && rep.push(["unexpected string [.os.editPreset.'|'.0]", (path ? lpath_16 : null)])
                        rep !== null && rep.push(["no model matched [.os.editPreset.'|']", (path ? lpath_16 : null)])
                    }
                }
            }
            if (! res)
            {
                rep !== null && rep.push(["invalid optional prop value [.os.editPreset]", (path ? lpath_16 : null)])
                return false;
            }
        }
        else if (prop == "edit")
        {
            // handle may edit property
            // .os.edit
            res = (typeof pval === 'string' || pval instanceof String);
            if (! res)
            {
                rep !== null && rep.push(["unexpected string [.os.edit]", (path ? lpath_16 : null)])
                rep !== null && rep.push(["invalid optional prop value [.os.edit]", (path ? lpath_16 : null)])
                return false;
            }
        }
        else if (prop == "editAtLine")
        {
            // handle may editAtLine property
            // .os.editAtLine
            res = (typeof pval === 'string' || pval instanceof String);
            if (! res)
            {
                rep !== null && rep.push(["unexpected string [.os.editAtLine]", (path ? lpath_16 : null)])
                rep !== null && rep.push(["invalid optional prop value [.os.editAtLine]", (path ? lpath_16 : null)])
                return false;
            }
        }
        else if (prop == "editAtLineAndWait")
        {
            // handle may editAtLineAndWait property
            // .os.editAtLineAndWait
            res = (typeof pval === 'string' || pval instanceof String);
            if (! res)
            {
                rep !== null && rep.push(["unexpected string [.os.editAtLineAndWait]", (path ? lpath_16 : null)])
                rep !== null && rep.push(["invalid optional prop value [.os.editAtLineAndWait]", (path ? lpath_16 : null)])
                return false;
            }
        }
        else if (prop == "open")
        {
            // handle may open property
            // .os.open
            res = (typeof pval === 'string' || pval instanceof String);
            if (! res)
            {
                rep !== null && rep.push(["unexpected string [.os.open]", (path ? lpath_16 : null)])
                rep !== null && rep.push(["invalid optional prop value [.os.open]", (path ? lpath_16 : null)])
                return false;
            }
        }
        else if (prop == "openLink")
        {
            // handle may openLink property
            // .os.openLink
            res = (typeof pval === 'string' || pval instanceof String);
            if (! res)
            {
                rep !== null && rep.push(["unexpected string [.os.openLink]", (path ? lpath_16 : null)])
                rep !== null && rep.push(["invalid optional prop value [.os.openLink]", (path ? lpath_16 : null)])
                return false;
            }
        }
        else
        {
            rep !== null && rep.push(["unexpected prop [.os]", (path ? lpath_16 : null)])
            return false;
        }
    }
    return true;
}

// object .refresher
function _jm_obj_20(val, path, rep)
{
    if (! (Object.prototype.toString.call(val) === '[object Object]'))
    {
        rep !== null && rep.push(["not an object [.refresher]", path])
        return false;
    }
    let res;
    for (const [prop, pval] of Object.entries(val))
    {
        let lpath_17 = path ? path.concat([prop]) : null;
        if (prop == "refreshInterval")
        {
            // handle may refreshInterval property
            // .refresher.refreshInterval
            res = ((typeof pval === 'number' || pval instanceof Number) && Number.isInteger(pval)) && pval >= 0;
            if (! res)
            {
                rep !== null && rep.push(["not a 0 strict int [.refresher.refreshInterval]", (path ? lpath_17 : null)])
                rep !== null && rep.push(["invalid optional prop value [.refresher.refreshInterval]", (path ? lpath_17 : null)])
                return false;
            }
        }
        else if (prop == "fetchInterval")
        {
            // handle may fetchInterval property
            // .refresher.fetchInterval
            res = ((typeof pval === 'number' || pval instanceof Number) && Number.isInteger(pval)) && pval >= 0;
            if (! res)
            {
                rep !== null && rep.push(["not a 0 strict int [.refresher.fetchInterval]", (path ? lpath_17 : null)])
                rep !== null && rep.push(["invalid optional prop value [.refresher.fetchInterval]", (path ? lpath_17 : null)])
                return false;
            }
        }
        else
        {
            rep !== null && rep.push(["unexpected prop [.refresher]", (path ? lpath_17 : null)])
            return false;
        }
    }
    return true;
}


// object .update
function _jm_obj_21(val, path, rep)
{
    if (! (Object.prototype.toString.call(val) === '[object Object]'))
    {
        rep !== null && rep.push(["not an object [.update]", path])
        return false;
    }
    let res;
    for (const [prop, pval] of Object.entries(val))
    {
        let lpath_18 = path ? path.concat([prop]) : null;
        if (prop == "method")
        {
            // handle may method property
            // .update.method
            res = ((pval === null || (typeof pval === 'number' || pval instanceof Number) || (typeof pval === 'boolean' || pval instanceof Boolean) || (typeof pval === 'string' || pval instanceof String))) && _jm_cst_13.has(pval);
            if (! res)
            {
                rep !== null && rep.push(["value not in enum [.update.method.'|']", (path ? lpath_18 : null)])
                rep !== null && rep.push(["invalid optional prop value [.update.method]", (path ? lpath_18 : null)])
                return false;
            }
        }
        else if (prop == "days")
        {
            // handle may days property
            // .update.days
            res = ((typeof pval === 'number' || pval instanceof Number) && Number.isInteger(pval)) && pval >= 0;
            if (! res)
            {
                rep !== null && rep.push(["not a 0 strict int [.update.days]", (path ? lpath_18 : null)])
                rep !== null && rep.push(["invalid optional prop value [.update.days]", (path ? lpath_18 : null)])
                return false;
            }
        }
        else
        {
            rep !== null && rep.push(["unexpected prop [.update]", (path ? lpath_18 : null)])
            return false;
        }
    }
    return true;
}


// check _jm_obj_23_map_jumpToBlock (.keybinding.universal.jumpToBlock)
function _jm_f_0(val, path, rep)
{
    // .keybinding.universal.jumpToBlock
    let res = Array.isArray(val);
    if (! res)
    {
        rep !== null && rep.push(["not array or unexpected array [.keybinding.universal.jumpToBlock]", path])
    }
    return res;
}

// check _jm_obj_23_map_optionMenu (.keybinding.universal.optionMenu)
function _jm_f_1(val, path, rep)
{
    // .keybinding.universal.optionMenu
    let res = val === null;
    if (! res)
    {
        rep !== null && rep.push(["not null [.keybinding.universal.optionMenu]", path])
    }
    return res;
}


// object .keybinding.universal
function _jm_obj_23(val, path, rep)
{
    if (! (Object.prototype.toString.call(val) === '[object Object]'))
    {
        rep !== null && rep.push(["not an object [.keybinding.universal]", path])
        return false;
    }
    let pfun;
    for (const [prop, pval] of Object.entries(val))
    {
        let lpath_20 = path ? path.concat([prop]) : null;
        if ((pfun = _jm_obj_23_map.get(prop)))
        {
            // handle 59 may props
            if (pfun !== undefined && ! pfun(pval, (path ? lpath_20 : null), rep))
            {
                rep !== null && rep.push(["invalid optional prop value [.keybinding.universal]", (path ? lpath_20 : null)])
                return false;
            }
        }
        else
        {
            rep !== null && rep.push(["unexpected prop [.keybinding.universal]", (path ? lpath_20 : null)])
            return false;
        }
    }
    return true;
}

// object .keybinding.status
function _jm_obj_24(val, path, rep)
{
    if (! (Object.prototype.toString.call(val) === '[object Object]'))
    {
        rep !== null && rep.push(["not an object [.keybinding.status]", path])
        return false;
    }
    let res;
    for (const [prop, pval] of Object.entries(val))
    {
        let lpath_21 = path ? path.concat([prop]) : null;
        if (prop == "checkForUpdate")
        {
            // handle may checkForUpdate property
            // .keybinding.status.checkForUpdate
            res = json_model_4(pval, (path ? lpath_21 : null), rep);
            if (! res)
            {
                rep !== null && rep.push(["unexpected $keybinding [.keybinding.status.checkForUpdate]", (path ? lpath_21 : null)])
                rep !== null && rep.push(["invalid optional prop value [.keybinding.status.checkForUpdate]", (path ? lpath_21 : null)])
                return false;
            }
        }
        else if (prop == "recentRepos")
        {
            // handle may recentRepos property
            // .keybinding.status.recentRepos
            res = json_model_4(pval, (path ? lpath_21 : null), rep);
            if (! res)
            {
                rep !== null && rep.push(["unexpected $keybinding [.keybinding.status.recentRepos]", (path ? lpath_21 : null)])
                rep !== null && rep.push(["invalid optional prop value [.keybinding.status.recentRepos]", (path ? lpath_21 : null)])
                return false;
            }
        }
        else
        {
            rep !== null && rep.push(["unexpected prop [.keybinding.status]", (path ? lpath_21 : null)])
            return false;
        }
    }
    return true;
}

// object .keybinding.files
function _jm_obj_25(val, path, rep)
{
    if (! (Object.prototype.toString.call(val) === '[object Object]'))
    {
        rep !== null && rep.push(["not an object [.keybinding.files]", path])
        return false;
    }
    let res;
    for (const [prop, pval] of Object.entries(val))
    {
        let lpath_22 = path ? path.concat([prop]) : null;
        if (prop == "commitChanges")
        {
            // handle may commitChanges property
            // .keybinding.files.commitChanges
            res = json_model_4(pval, (path ? lpath_22 : null), rep);
            if (! res)
            {
                rep !== null && rep.push(["unexpected $keybinding [.keybinding.files.commitChanges]", (path ? lpath_22 : null)])
                rep !== null && rep.push(["invalid optional prop value [.keybinding.files.commitChanges]", (path ? lpath_22 : null)])
                return false;
            }
        }
        else if (prop == "commitChangesWithoutHook")
        {
            // handle may commitChangesWithoutHook property
            // .keybinding.files.commitChangesWithoutHook
            res = json_model_4(pval, (path ? lpath_22 : null), rep);
            if (! res)
            {
                rep !== null && rep.push(["unexpected $keybinding [.keybinding.files.commitChangesWithoutHook]", (path ? lpath_22 : null)])
                rep !== null && rep.push(["invalid optional prop value [.keybinding.files.commitChangesWithoutHook]", (path ? lpath_22 : null)])
                return false;
            }
        }
        else if (prop == "amendLastCommit")
        {
            // handle may amendLastCommit property
            // .keybinding.files.amendLastCommit
            res = json_model_4(pval, (path ? lpath_22 : null), rep);
            if (! res)
            {
                rep !== null && rep.push(["unexpected $keybinding [.keybinding.files.amendLastCommit]", (path ? lpath_22 : null)])
                rep !== null && rep.push(["invalid optional prop value [.keybinding.files.amendLastCommit]", (path ? lpath_22 : null)])
                return false;
            }
        }
        else if (prop == "commitChangesWithEditor")
        {
            // handle may commitChangesWithEditor property
            // .keybinding.files.commitChangesWithEditor
            res = json_model_4(pval, (path ? lpath_22 : null), rep);
            if (! res)
            {
                rep !== null && rep.push(["unexpected $keybinding [.keybinding.files.commitChangesWithEditor]", (path ? lpath_22 : null)])
                rep !== null && rep.push(["invalid optional prop value [.keybinding.files.commitChangesWithEditor]", (path ? lpath_22 : null)])
                return false;
            }
        }
        else if (prop == "ignoreFile")
        {
            // handle may ignoreFile property
            // .keybinding.files.ignoreFile
            res = json_model_4(pval, (path ? lpath_22 : null), rep);
            if (! res)
            {
                rep !== null && rep.push(["unexpected $keybinding [.keybinding.files.ignoreFile]", (path ? lpath_22 : null)])
                rep !== null && rep.push(["invalid optional prop value [.keybinding.files.ignoreFile]", (path ? lpath_22 : null)])
                return false;
            }
        }
        else if (prop == "refreshFiles")
        {
            // handle may refreshFiles property
            // .keybinding.files.refreshFiles
            res = json_model_4(pval, (path ? lpath_22 : null), rep);
            if (! res)
            {
                rep !== null && rep.push(["unexpected $keybinding [.keybinding.files.refreshFiles]", (path ? lpath_22 : null)])
                rep !== null && rep.push(["invalid optional prop value [.keybinding.files.refreshFiles]", (path ? lpath_22 : null)])
                return false;
            }
        }
        else if (prop == "stashAllChanges")
        {
            // handle may stashAllChanges property
            // .keybinding.files.stashAllChanges
            res = json_model_4(pval, (path ? lpath_22 : null), rep);
            if (! res)
            {
                rep !== null && rep.push(["unexpected $keybinding [.keybinding.files.stashAllChanges]", (path ? lpath_22 : null)])
                rep !== null && rep.push(["invalid optional prop value [.keybinding.files.stashAllChanges]", (path ? lpath_22 : null)])
                return false;
            }
        }
        else if (prop == "viewStashOptions")
        {
            // handle may viewStashOptions property
            // .keybinding.files.viewStashOptions
            res = json_model_4(pval, (path ? lpath_22 : null), rep);
            if (! res)
            {
                rep !== null && rep.push(["unexpected $keybinding [.keybinding.files.viewStashOptions]", (path ? lpath_22 : null)])
                rep !== null && rep.push(["invalid optional prop value [.keybinding.files.viewStashOptions]", (path ? lpath_22 : null)])
                return false;
            }
        }
        else if (prop == "toggleStagedAll")
        {
            // handle may toggleStagedAll property
            // .keybinding.files.toggleStagedAll
            res = json_model_4(pval, (path ? lpath_22 : null), rep);
            if (! res)
            {
                rep !== null && rep.push(["unexpected $keybinding [.keybinding.files.toggleStagedAll]", (path ? lpath_22 : null)])
                rep !== null && rep.push(["invalid optional prop value [.keybinding.files.toggleStagedAll]", (path ? lpath_22 : null)])
                return false;
            }
        }
        else if (prop == "viewResetOptions")
        {
            // handle may viewResetOptions property
            // .keybinding.files.viewResetOptions
            res = json_model_4(pval, (path ? lpath_22 : null), rep);
            if (! res)
            {
                rep !== null && rep.push(["unexpected $keybinding [.keybinding.files.viewResetOptions]", (path ? lpath_22 : null)])
                rep !== null && rep.push(["invalid optional prop value [.keybinding.files.viewResetOptions]", (path ? lpath_22 : null)])
                return false;
            }
        }
        else if (prop == "fetch")
        {
            // handle may fetch property
            // .keybinding.files.fetch
            res = json_model_4(pval, (path ? lpath_22 : null), rep);
            if (! res)
            {
                rep !== null && rep.push(["unexpected $keybinding [.keybinding.files.fetch]", (path ? lpath_22 : null)])
                rep !== null && rep.push(["invalid optional prop value [.keybinding.files.fetch]", (path ? lpath_22 : null)])
                return false;
            }
        }
        else if (prop == "toggleTreeView")
        {
            // handle may toggleTreeView property
            // .keybinding.files.toggleTreeView
            res = json_model_4(pval, (path ? lpath_22 : null), rep);
            if (! res)
            {
                rep !== null && rep.push(["unexpected $keybinding [.keybinding.files.toggleTreeView]", (path ? lpath_22 : null)])
                rep !== null && rep.push(["invalid optional prop value [.keybinding.files.toggleTreeView]", (path ? lpath_22 : null)])
                return false;
            }
        }
        else if (prop == "openMergeTool")
        {
            // handle may openMergeTool property
            // .keybinding.files.openMergeTool
            res = json_model_4(pval, (path ? lpath_22 : null), rep);
            if (! res)
            {
                rep !== null && rep.push(["unexpected $keybinding [.keybinding.files.openMergeTool]", (path ? lpath_22 : null)])
                rep !== null && rep.push(["invalid optional prop value [.keybinding.files.openMergeTool]", (path ? lpath_22 : null)])
                return false;
            }
        }
        else if (prop == "openStatusFilter")
        {
            // handle may openStatusFilter property
            // .keybinding.files.openStatusFilter
            res = json_model_4(pval, (path ? lpath_22 : null), rep);
            if (! res)
            {
                rep !== null && rep.push(["unexpected $keybinding [.keybinding.files.openStatusFilter]", (path ? lpath_22 : null)])
                rep !== null && rep.push(["invalid optional prop value [.keybinding.files.openStatusFilter]", (path ? lpath_22 : null)])
                return false;
            }
        }
        else
        {
            rep !== null && rep.push(["unexpected prop [.keybinding.files]", (path ? lpath_22 : null)])
            return false;
        }
    }
    return true;
}

// object .keybinding.branches
function _jm_obj_26(val, path, rep)
{
    if (! (Object.prototype.toString.call(val) === '[object Object]'))
    {
        rep !== null && rep.push(["not an object [.keybinding.branches]", path])
        return false;
    }
    let res;
    for (const [prop, pval] of Object.entries(val))
    {
        let lpath_23 = path ? path.concat([prop]) : null;
        if (prop == "createPullRequest")
        {
            // handle may createPullRequest property
            // .keybinding.branches.createPullRequest
            res = json_model_4(pval, (path ? lpath_23 : null), rep);
            if (! res)
            {
                rep !== null && rep.push(["unexpected $keybinding [.keybinding.branches.createPullRequest]", (path ? lpath_23 : null)])
                rep !== null && rep.push(["invalid optional prop value [.keybinding.branches.createPullRequest]", (path ? lpath_23 : null)])
                return false;
            }
        }
        else if (prop == "viewPullRequestOptions")
        {
            // handle may viewPullRequestOptions property
            // .keybinding.branches.viewPullRequestOptions
            res = json_model_4(pval, (path ? lpath_23 : null), rep);
            if (! res)
            {
                rep !== null && rep.push(["unexpected $keybinding [.keybinding.branches.viewPullRequestOptions]", (path ? lpath_23 : null)])
                rep !== null && rep.push(["invalid optional prop value [.keybinding.branches.viewPullRequestOptions]", (path ? lpath_23 : null)])
                return false;
            }
        }
        else if (prop == "checkoutBranchByName")
        {
            // handle may checkoutBranchByName property
            // .keybinding.branches.checkoutBranchByName
            res = json_model_4(pval, (path ? lpath_23 : null), rep);
            if (! res)
            {
                rep !== null && rep.push(["unexpected $keybinding [.keybinding.branches.checkoutBranchByName]", (path ? lpath_23 : null)])
                rep !== null && rep.push(["invalid optional prop value [.keybinding.branches.checkoutBranchByName]", (path ? lpath_23 : null)])
                return false;
            }
        }
        else if (prop == "forceCheckoutBranch")
        {
            // handle may forceCheckoutBranch property
            // .keybinding.branches.forceCheckoutBranch
            res = json_model_4(pval, (path ? lpath_23 : null), rep);
            if (! res)
            {
                rep !== null && rep.push(["unexpected $keybinding [.keybinding.branches.forceCheckoutBranch]", (path ? lpath_23 : null)])
                rep !== null && rep.push(["invalid optional prop value [.keybinding.branches.forceCheckoutBranch]", (path ? lpath_23 : null)])
                return false;
            }
        }
        else if (prop == "rebaseBranch")
        {
            // handle may rebaseBranch property
            // .keybinding.branches.rebaseBranch
            res = json_model_4(pval, (path ? lpath_23 : null), rep);
            if (! res)
            {
                rep !== null && rep.push(["unexpected $keybinding [.keybinding.branches.rebaseBranch]", (path ? lpath_23 : null)])
                rep !== null && rep.push(["invalid optional prop value [.keybinding.branches.rebaseBranch]", (path ? lpath_23 : null)])
                return false;
            }
        }
        else if (prop == "renameBranch")
        {
            // handle may renameBranch property
            // .keybinding.branches.renameBranch
            res = json_model_4(pval, (path ? lpath_23 : null), rep);
            if (! res)
            {
                rep !== null && rep.push(["unexpected $keybinding [.keybinding.branches.renameBranch]", (path ? lpath_23 : null)])
                rep !== null && rep.push(["invalid optional prop value [.keybinding.branches.renameBranch]", (path ? lpath_23 : null)])
                return false;
            }
        }
        else if (prop == "mergeIntoCurrentBranch")
        {
            // handle may mergeIntoCurrentBranch property
            // .keybinding.branches.mergeIntoCurrentBranch
            res = json_model_4(pval, (path ? lpath_23 : null), rep);
            if (! res)
            {
                rep !== null && rep.push(["unexpected $keybinding [.keybinding.branches.mergeIntoCurrentBranch]", (path ? lpath_23 : null)])
                rep !== null && rep.push(["invalid optional prop value [.keybinding.branches.mergeIntoCurrentBranch]", (path ? lpath_23 : null)])
                return false;
            }
        }
        else if (prop == "viewGitFlowOptions")
        {
            // handle may viewGitFlowOptions property
            // .keybinding.branches.viewGitFlowOptions
            res = json_model_4(pval, (path ? lpath_23 : null), rep);
            if (! res)
            {
                rep !== null && rep.push(["unexpected $keybinding [.keybinding.branches.viewGitFlowOptions]", (path ? lpath_23 : null)])
                rep !== null && rep.push(["invalid optional prop value [.keybinding.branches.viewGitFlowOptions]", (path ? lpath_23 : null)])
                return false;
            }
        }
        else if (prop == "fastForward")
        {
            // handle may fastForward property
            // .keybinding.branches.fastForward
            res = json_model_4(pval, (path ? lpath_23 : null), rep);
            if (! res)
            {
                rep !== null && rep.push(["unexpected $keybinding [.keybinding.branches.fastForward]", (path ? lpath_23 : null)])
                rep !== null && rep.push(["invalid optional prop value [.keybinding.branches.fastForward]", (path ? lpath_23 : null)])
                return false;
            }
        }
        else if (prop == "createTag")
        {
            // handle may createTag property
            // .keybinding.branches.createTag
            res = json_model_4(pval, (path ? lpath_23 : null), rep);
            if (! res)
            {
                rep !== null && rep.push(["unexpected $keybinding [.keybinding.branches.createTag]", (path ? lpath_23 : null)])
                rep !== null && rep.push(["invalid optional prop value [.keybinding.branches.createTag]", (path ? lpath_23 : null)])
                return false;
            }
        }
        else if (prop == "pushTag")
        {
            // handle may pushTag property
            // .keybinding.branches.pushTag
            res = json_model_4(pval, (path ? lpath_23 : null), rep);
            if (! res)
            {
                rep !== null && rep.push(["unexpected $keybinding [.keybinding.branches.pushTag]", (path ? lpath_23 : null)])
                rep !== null && rep.push(["invalid optional prop value [.keybinding.branches.pushTag]", (path ? lpath_23 : null)])
                return false;
            }
        }
        else if (prop == "setUpstream")
        {
            // handle may setUpstream property
            // .keybinding.branches.setUpstream
            res = json_model_4(pval, (path ? lpath_23 : null), rep);
            if (! res)
            {
                rep !== null && rep.push(["unexpected $keybinding [.keybinding.branches.setUpstream]", (path ? lpath_23 : null)])
                rep !== null && rep.push(["invalid optional prop value [.keybinding.branches.setUpstream]", (path ? lpath_23 : null)])
                return false;
            }
        }
        else if (prop == "fetchRemote")
        {
            // handle may fetchRemote property
            // .keybinding.branches.fetchRemote
            res = json_model_4(pval, (path ? lpath_23 : null), rep);
            if (! res)
            {
                rep !== null && rep.push(["unexpected $keybinding [.keybinding.branches.fetchRemote]", (path ? lpath_23 : null)])
                rep !== null && rep.push(["invalid optional prop value [.keybinding.branches.fetchRemote]", (path ? lpath_23 : null)])
                return false;
            }
        }
        else
        {
            rep !== null && rep.push(["unexpected prop [.keybinding.branches]", (path ? lpath_23 : null)])
            return false;
        }
    }
    return true;
}

// object .keybinding.commits
function _jm_obj_27(val, path, rep)
{
    if (! (Object.prototype.toString.call(val) === '[object Object]'))
    {
        rep !== null && rep.push(["not an object [.keybinding.commits]", path])
        return false;
    }
    let res;
    for (const [prop, pval] of Object.entries(val))
    {
        let lpath_24 = path ? path.concat([prop]) : null;
        if (prop == "squashDown")
        {
            // handle may squashDown property
            // .keybinding.commits.squashDown
            res = json_model_4(pval, (path ? lpath_24 : null), rep);
            if (! res)
            {
                rep !== null && rep.push(["unexpected $keybinding [.keybinding.commits.squashDown]", (path ? lpath_24 : null)])
                rep !== null && rep.push(["invalid optional prop value [.keybinding.commits.squashDown]", (path ? lpath_24 : null)])
                return false;
            }
        }
        else if (prop == "renameCommit")
        {
            // handle may renameCommit property
            // .keybinding.commits.renameCommit
            res = json_model_4(pval, (path ? lpath_24 : null), rep);
            if (! res)
            {
                rep !== null && rep.push(["unexpected $keybinding [.keybinding.commits.renameCommit]", (path ? lpath_24 : null)])
                rep !== null && rep.push(["invalid optional prop value [.keybinding.commits.renameCommit]", (path ? lpath_24 : null)])
                return false;
            }
        }
        else if (prop == "renameCommitWithEditor")
        {
            // handle may renameCommitWithEditor property
            // .keybinding.commits.renameCommitWithEditor
            res = json_model_4(pval, (path ? lpath_24 : null), rep);
            if (! res)
            {
                rep !== null && rep.push(["unexpected $keybinding [.keybinding.commits.renameCommitWithEditor]", (path ? lpath_24 : null)])
                rep !== null && rep.push(["invalid optional prop value [.keybinding.commits.renameCommitWithEditor]", (path ? lpath_24 : null)])
                return false;
            }
        }
        else if (prop == "viewResetOptions")
        {
            // handle may viewResetOptions property
            // .keybinding.commits.viewResetOptions
            res = json_model_4(pval, (path ? lpath_24 : null), rep);
            if (! res)
            {
                rep !== null && rep.push(["unexpected $keybinding [.keybinding.commits.viewResetOptions]", (path ? lpath_24 : null)])
                rep !== null && rep.push(["invalid optional prop value [.keybinding.commits.viewResetOptions]", (path ? lpath_24 : null)])
                return false;
            }
        }
        else if (prop == "markCommitAsFixup")
        {
            // handle may markCommitAsFixup property
            // .keybinding.commits.markCommitAsFixup
            res = json_model_4(pval, (path ? lpath_24 : null), rep);
            if (! res)
            {
                rep !== null && rep.push(["unexpected $keybinding [.keybinding.commits.markCommitAsFixup]", (path ? lpath_24 : null)])
                rep !== null && rep.push(["invalid optional prop value [.keybinding.commits.markCommitAsFixup]", (path ? lpath_24 : null)])
                return false;
            }
        }
        else if (prop == "createFixupCommit")
        {
            // handle may createFixupCommit property
            // .keybinding.commits.createFixupCommit
            res = json_model_4(pval, (path ? lpath_24 : null), rep);
            if (! res)
            {
                rep !== null && rep.push(["unexpected $keybinding [.keybinding.commits.createFixupCommit]", (path ? lpath_24 : null)])
                rep !== null && rep.push(["invalid optional prop value [.keybinding.commits.createFixupCommit]", (path ? lpath_24 : null)])
                return false;
            }
        }
        else if (prop == "squashAboveCommits")
        {
            // handle may squashAboveCommits property
            // .keybinding.commits.squashAboveCommits
            res = json_model_4(pval, (path ? lpath_24 : null), rep);
            if (! res)
            {
                rep !== null && rep.push(["unexpected $keybinding [.keybinding.commits.squashAboveCommits]", (path ? lpath_24 : null)])
                rep !== null && rep.push(["invalid optional prop value [.keybinding.commits.squashAboveCommits]", (path ? lpath_24 : null)])
                return false;
            }
        }
        else if (prop == "moveDownCommit")
        {
            // handle may moveDownCommit property
            // .keybinding.commits.moveDownCommit
            res = json_model_4(pval, (path ? lpath_24 : null), rep);
            if (! res)
            {
                rep !== null && rep.push(["unexpected $keybinding [.keybinding.commits.moveDownCommit]", (path ? lpath_24 : null)])
                rep !== null && rep.push(["invalid optional prop value [.keybinding.commits.moveDownCommit]", (path ? lpath_24 : null)])
                return false;
            }
        }
        else if (prop == "moveUpCommit")
        {
            // handle may moveUpCommit property
            // .keybinding.commits.moveUpCommit
            res = json_model_4(pval, (path ? lpath_24 : null), rep);
            if (! res)
            {
                rep !== null && rep.push(["unexpected $keybinding [.keybinding.commits.moveUpCommit]", (path ? lpath_24 : null)])
                rep !== null && rep.push(["invalid optional prop value [.keybinding.commits.moveUpCommit]", (path ? lpath_24 : null)])
                return false;
            }
        }
        else if (prop == "amendToCommit")
        {
            // handle may amendToCommit property
            // .keybinding.commits.amendToCommit
            res = json_model_4(pval, (path ? lpath_24 : null), rep);
            if (! res)
            {
                rep !== null && rep.push(["unexpected $keybinding [.keybinding.commits.amendToCommit]", (path ? lpath_24 : null)])
                rep !== null && rep.push(["invalid optional prop value [.keybinding.commits.amendToCommit]", (path ? lpath_24 : null)])
                return false;
            }
        }
        else if (prop == "pickCommit")
        {
            // handle may pickCommit property
            // .keybinding.commits.pickCommit
            res = json_model_4(pval, (path ? lpath_24 : null), rep);
            if (! res)
            {
                rep !== null && rep.push(["unexpected $keybinding [.keybinding.commits.pickCommit]", (path ? lpath_24 : null)])
                rep !== null && rep.push(["invalid optional prop value [.keybinding.commits.pickCommit]", (path ? lpath_24 : null)])
                return false;
            }
        }
        else if (prop == "revertCommit")
        {
            // handle may revertCommit property
            // .keybinding.commits.revertCommit
            res = json_model_4(pval, (path ? lpath_24 : null), rep);
            if (! res)
            {
                rep !== null && rep.push(["unexpected $keybinding [.keybinding.commits.revertCommit]", (path ? lpath_24 : null)])
                rep !== null && rep.push(["invalid optional prop value [.keybinding.commits.revertCommit]", (path ? lpath_24 : null)])
                return false;
            }
        }
        else if (prop == "cherryPickCopy")
        {
            // handle may cherryPickCopy property
            // .keybinding.commits.cherryPickCopy
            res = json_model_4(pval, (path ? lpath_24 : null), rep);
            if (! res)
            {
                rep !== null && rep.push(["unexpected $keybinding [.keybinding.commits.cherryPickCopy]", (path ? lpath_24 : null)])
                rep !== null && rep.push(["invalid optional prop value [.keybinding.commits.cherryPickCopy]", (path ? lpath_24 : null)])
                return false;
            }
        }
        else if (prop == "cherryPickCopyRange")
        {
            // handle may cherryPickCopyRange property
            // .keybinding.commits.cherryPickCopyRange
            res = json_model_4(pval, (path ? lpath_24 : null), rep);
            if (! res)
            {
                rep !== null && rep.push(["unexpected $keybinding [.keybinding.commits.cherryPickCopyRange]", (path ? lpath_24 : null)])
                rep !== null && rep.push(["invalid optional prop value [.keybinding.commits.cherryPickCopyRange]", (path ? lpath_24 : null)])
                return false;
            }
        }
        else if (prop == "pasteCommits")
        {
            // handle may pasteCommits property
            // .keybinding.commits.pasteCommits
            res = json_model_4(pval, (path ? lpath_24 : null), rep);
            if (! res)
            {
                rep !== null && rep.push(["unexpected $keybinding [.keybinding.commits.pasteCommits]", (path ? lpath_24 : null)])
                rep !== null && rep.push(["invalid optional prop value [.keybinding.commits.pasteCommits]", (path ? lpath_24 : null)])
                return false;
            }
        }
        else if (prop == "tagCommit")
        {
            // handle may tagCommit property
            // .keybinding.commits.tagCommit
            res = json_model_4(pval, (path ? lpath_24 : null), rep);
            if (! res)
            {
                rep !== null && rep.push(["unexpected $keybinding [.keybinding.commits.tagCommit]", (path ? lpath_24 : null)])
                rep !== null && rep.push(["invalid optional prop value [.keybinding.commits.tagCommit]", (path ? lpath_24 : null)])
                return false;
            }
        }
        else if (prop == "checkoutCommit")
        {
            // handle may checkoutCommit property
            // .keybinding.commits.checkoutCommit
            res = json_model_4(pval, (path ? lpath_24 : null), rep);
            if (! res)
            {
                rep !== null && rep.push(["unexpected $keybinding [.keybinding.commits.checkoutCommit]", (path ? lpath_24 : null)])
                rep !== null && rep.push(["invalid optional prop value [.keybinding.commits.checkoutCommit]", (path ? lpath_24 : null)])
                return false;
            }
        }
        else if (prop == "resetCherryPick")
        {
            // handle may resetCherryPick property
            // .keybinding.commits.resetCherryPick
            res = json_model_4(pval, (path ? lpath_24 : null), rep);
            if (! res)
            {
                rep !== null && rep.push(["unexpected $keybinding [.keybinding.commits.resetCherryPick]", (path ? lpath_24 : null)])
                rep !== null && rep.push(["invalid optional prop value [.keybinding.commits.resetCherryPick]", (path ? lpath_24 : null)])
                return false;
            }
        }
        else if (prop == "copyCommitMessageToClipboard")
        {
            // handle may copyCommitMessageToClipboard property
            // .keybinding.commits.copyCommitMessageToClipboard
            res = json_model_4(pval, (path ? lpath_24 : null), rep);
            if (! res)
            {
                rep !== null && rep.push(["unexpected $keybinding [.keybinding.commits.copyCommitMessageToClipboard]", (path ? lpath_24 : null)])
                rep !== null && rep.push(["invalid optional prop value [.keybinding.commits.copyCommitMessageToClipboard]", (path ? lpath_24 : null)])
                return false;
            }
        }
        else if (prop == "openLogMenu")
        {
            // handle may openLogMenu property
            // .keybinding.commits.openLogMenu
            res = json_model_4(pval, (path ? lpath_24 : null), rep);
            if (! res)
            {
                rep !== null && rep.push(["unexpected $keybinding [.keybinding.commits.openLogMenu]", (path ? lpath_24 : null)])
                rep !== null && rep.push(["invalid optional prop value [.keybinding.commits.openLogMenu]", (path ? lpath_24 : null)])
                return false;
            }
        }
        else if (prop == "viewBisectOptions")
        {
            // handle may viewBisectOptions property
            // .keybinding.commits.viewBisectOptions
            res = json_model_4(pval, (path ? lpath_24 : null), rep);
            if (! res)
            {
                rep !== null && rep.push(["unexpected $keybinding [.keybinding.commits.viewBisectOptions]", (path ? lpath_24 : null)])
                rep !== null && rep.push(["invalid optional prop value [.keybinding.commits.viewBisectOptions]", (path ? lpath_24 : null)])
                return false;
            }
        }
        else
        {
            rep !== null && rep.push(["unexpected prop [.keybinding.commits]", (path ? lpath_24 : null)])
            return false;
        }
    }
    return true;
}

// object .keybinding.stash
function _jm_obj_28(val, path, rep)
{
    if (! (Object.prototype.toString.call(val) === '[object Object]'))
    {
        rep !== null && rep.push(["not an object [.keybinding.stash]", path])
        return false;
    }
    let res;
    for (const [prop, pval] of Object.entries(val))
    {
        let lpath_25 = path ? path.concat([prop]) : null;
        if (prop == "popStash")
        {
            // handle may popStash property
            // .keybinding.stash.popStash
            res = json_model_4(pval, (path ? lpath_25 : null), rep);
            if (! res)
            {
                rep !== null && rep.push(["unexpected $keybinding [.keybinding.stash.popStash]", (path ? lpath_25 : null)])
                rep !== null && rep.push(["invalid optional prop value [.keybinding.stash.popStash]", (path ? lpath_25 : null)])
                return false;
            }
        }
        else if (prop == "renameStash")
        {
            // handle may renameStash property
            // .keybinding.stash.renameStash
            res = json_model_4(pval, (path ? lpath_25 : null), rep);
            if (! res)
            {
                rep !== null && rep.push(["unexpected $keybinding [.keybinding.stash.renameStash]", (path ? lpath_25 : null)])
                rep !== null && rep.push(["invalid optional prop value [.keybinding.stash.renameStash]", (path ? lpath_25 : null)])
                return false;
            }
        }
        else
        {
            rep !== null && rep.push(["unexpected prop [.keybinding.stash]", (path ? lpath_25 : null)])
            return false;
        }
    }
    return true;
}

// object .keybinding.commitFiles
function _jm_obj_29(val, path, rep)
{
    if (! (Object.prototype.toString.call(val) === '[object Object]'))
    {
        rep !== null && rep.push(["not an object [.keybinding.commitFiles]", path])
        return false;
    }
    let res;
    for (const [prop, pval] of Object.entries(val))
    {
        let lpath_26 = path ? path.concat([prop]) : null;
        if (prop == "checkoutCommitFile")
        {
            // handle may checkoutCommitFile property
            // .keybinding.commitFiles.checkoutCommitFile
            res = json_model_4(pval, (path ? lpath_26 : null), rep);
            if (! res)
            {
                rep !== null && rep.push(["unexpected $keybinding [.keybinding.commitFiles.checkoutCommitFile]", (path ? lpath_26 : null)])
                rep !== null && rep.push(["invalid optional prop value [.keybinding.commitFiles.checkoutCommitFile]", (path ? lpath_26 : null)])
                return false;
            }
        }
        else
        {
            rep !== null && rep.push(["unexpected prop [.keybinding.commitFiles]", (path ? lpath_26 : null)])
            return false;
        }
    }
    return true;
}

// object .keybinding.main
function _jm_obj_30(val, path, rep)
{
    if (! (Object.prototype.toString.call(val) === '[object Object]'))
    {
        rep !== null && rep.push(["not an object [.keybinding.main]", path])
        return false;
    }
    let res;
    for (const [prop, pval] of Object.entries(val))
    {
        let lpath_27 = path ? path.concat([prop]) : null;
        if (prop == "toggleDragSelect")
        {
            // handle may toggleDragSelect property
            // .keybinding.main.toggleDragSelect
            res = json_model_4(pval, (path ? lpath_27 : null), rep);
            if (! res)
            {
                rep !== null && rep.push(["unexpected $keybinding [.keybinding.main.toggleDragSelect]", (path ? lpath_27 : null)])
                rep !== null && rep.push(["invalid optional prop value [.keybinding.main.toggleDragSelect]", (path ? lpath_27 : null)])
                return false;
            }
        }
        else if (prop == "toggleDragSelect-alt")
        {
            // handle may toggleDragSelect-alt property
            // .keybinding.main.'toggleDragSelect-alt'
            res = json_model_4(pval, (path ? lpath_27 : null), rep);
            if (! res)
            {
                rep !== null && rep.push(["unexpected $keybinding [.keybinding.main.'toggleDragSelect-alt']", (path ? lpath_27 : null)])
                rep !== null && rep.push(["invalid optional prop value [.keybinding.main.'toggleDragSelect-alt']", (path ? lpath_27 : null)])
                return false;
            }
        }
        else if (prop == "toggleSelectHunk")
        {
            // handle may toggleSelectHunk property
            // .keybinding.main.toggleSelectHunk
            res = json_model_4(pval, (path ? lpath_27 : null), rep);
            if (! res)
            {
                rep !== null && rep.push(["unexpected $keybinding [.keybinding.main.toggleSelectHunk]", (path ? lpath_27 : null)])
                rep !== null && rep.push(["invalid optional prop value [.keybinding.main.toggleSelectHunk]", (path ? lpath_27 : null)])
                return false;
            }
        }
        else if (prop == "pickBothHunks")
        {
            // handle may pickBothHunks property
            // .keybinding.main.pickBothHunks
            res = json_model_4(pval, (path ? lpath_27 : null), rep);
            if (! res)
            {
                rep !== null && rep.push(["unexpected $keybinding [.keybinding.main.pickBothHunks]", (path ? lpath_27 : null)])
                rep !== null && rep.push(["invalid optional prop value [.keybinding.main.pickBothHunks]", (path ? lpath_27 : null)])
                return false;
            }
        }
        else
        {
            rep !== null && rep.push(["unexpected prop [.keybinding.main]", (path ? lpath_27 : null)])
            return false;
        }
    }
    return true;
}

// object .keybinding.submodules
function _jm_obj_31(val, path, rep)
{
    if (! (Object.prototype.toString.call(val) === '[object Object]'))
    {
        rep !== null && rep.push(["not an object [.keybinding.submodules]", path])
        return false;
    }
    let res;
    for (const [prop, pval] of Object.entries(val))
    {
        let lpath_28 = path ? path.concat([prop]) : null;
        if (prop == "init")
        {
            // handle may init property
            // .keybinding.submodules.init
            res = json_model_4(pval, (path ? lpath_28 : null), rep);
            if (! res)
            {
                rep !== null && rep.push(["unexpected $keybinding [.keybinding.submodules.init]", (path ? lpath_28 : null)])
                rep !== null && rep.push(["invalid optional prop value [.keybinding.submodules.init]", (path ? lpath_28 : null)])
                return false;
            }
        }
        else if (prop == "update")
        {
            // handle may update property
            // .keybinding.submodules.update
            res = json_model_4(pval, (path ? lpath_28 : null), rep);
            if (! res)
            {
                rep !== null && rep.push(["unexpected $keybinding [.keybinding.submodules.update]", (path ? lpath_28 : null)])
                rep !== null && rep.push(["invalid optional prop value [.keybinding.submodules.update]", (path ? lpath_28 : null)])
                return false;
            }
        }
        else if (prop == "bulkMenu")
        {
            // handle may bulkMenu property
            // .keybinding.submodules.bulkMenu
            res = json_model_4(pval, (path ? lpath_28 : null), rep);
            if (! res)
            {
                rep !== null && rep.push(["unexpected $keybinding [.keybinding.submodules.bulkMenu]", (path ? lpath_28 : null)])
                rep !== null && rep.push(["invalid optional prop value [.keybinding.submodules.bulkMenu]", (path ? lpath_28 : null)])
                return false;
            }
        }
        else
        {
            rep !== null && rep.push(["unexpected prop [.keybinding.submodules]", (path ? lpath_28 : null)])
            return false;
        }
    }
    return true;
}

// object .keybinding
function _jm_obj_22(val, path, rep)
{
    if (! (Object.prototype.toString.call(val) === '[object Object]'))
    {
        rep !== null && rep.push(["not an object [.keybinding]", path])
        return false;
    }
    let res;
    for (const [prop, pval] of Object.entries(val))
    {
        let lpath_19 = path ? path.concat([prop]) : null;
        if (prop == "universal")
        {
            // handle may universal property
            // .keybinding.universal
            res = _jm_obj_23(pval, (path ? lpath_19 : null), rep);
            if (! res)
            {
                rep !== null && rep.push(["unexpected element [.keybinding.universal]", (path ? lpath_19 : null)])
                rep !== null && rep.push(["invalid optional prop value [.keybinding.universal]", (path ? lpath_19 : null)])
                return false;
            }
        }
        else if (prop == "status")
        {
            // handle may status property
            // .keybinding.status
            res = _jm_obj_24(pval, (path ? lpath_19 : null), rep);
            if (! res)
            {
                rep !== null && rep.push(["unexpected element [.keybinding.status]", (path ? lpath_19 : null)])
                rep !== null && rep.push(["invalid optional prop value [.keybinding.status]", (path ? lpath_19 : null)])
                return false;
            }
        }
        else if (prop == "files")
        {
            // handle may files property
            // .keybinding.files
            res = _jm_obj_25(pval, (path ? lpath_19 : null), rep);
            if (! res)
            {
                rep !== null && rep.push(["unexpected element [.keybinding.files]", (path ? lpath_19 : null)])
                rep !== null && rep.push(["invalid optional prop value [.keybinding.files]", (path ? lpath_19 : null)])
                return false;
            }
        }
        else if (prop == "branches")
        {
            // handle may branches property
            // .keybinding.branches
            res = _jm_obj_26(pval, (path ? lpath_19 : null), rep);
            if (! res)
            {
                rep !== null && rep.push(["unexpected element [.keybinding.branches]", (path ? lpath_19 : null)])
                rep !== null && rep.push(["invalid optional prop value [.keybinding.branches]", (path ? lpath_19 : null)])
                return false;
            }
        }
        else if (prop == "commits")
        {
            // handle may commits property
            // .keybinding.commits
            res = _jm_obj_27(pval, (path ? lpath_19 : null), rep);
            if (! res)
            {
                rep !== null && rep.push(["unexpected element [.keybinding.commits]", (path ? lpath_19 : null)])
                rep !== null && rep.push(["invalid optional prop value [.keybinding.commits]", (path ? lpath_19 : null)])
                return false;
            }
        }
        else if (prop == "stash")
        {
            // handle may stash property
            // .keybinding.stash
            res = _jm_obj_28(pval, (path ? lpath_19 : null), rep);
            if (! res)
            {
                rep !== null && rep.push(["unexpected element [.keybinding.stash]", (path ? lpath_19 : null)])
                rep !== null && rep.push(["invalid optional prop value [.keybinding.stash]", (path ? lpath_19 : null)])
                return false;
            }
        }
        else if (prop == "commitFiles")
        {
            // handle may commitFiles property
            // .keybinding.commitFiles
            res = _jm_obj_29(pval, (path ? lpath_19 : null), rep);
            if (! res)
            {
                rep !== null && rep.push(["unexpected element [.keybinding.commitFiles]", (path ? lpath_19 : null)])
                rep !== null && rep.push(["invalid optional prop value [.keybinding.commitFiles]", (path ? lpath_19 : null)])
                return false;
            }
        }
        else if (prop == "main")
        {
            // handle may main property
            // .keybinding.main
            res = _jm_obj_30(pval, (path ? lpath_19 : null), rep);
            if (! res)
            {
                rep !== null && rep.push(["unexpected element [.keybinding.main]", (path ? lpath_19 : null)])
                rep !== null && rep.push(["invalid optional prop value [.keybinding.main]", (path ? lpath_19 : null)])
                return false;
            }
        }
        else if (prop == "submodules")
        {
            // handle may submodules property
            // .keybinding.submodules
            res = _jm_obj_31(pval, (path ? lpath_19 : null), rep);
            if (! res)
            {
                rep !== null && rep.push(["unexpected element [.keybinding.submodules]", (path ? lpath_19 : null)])
                rep !== null && rep.push(["invalid optional prop value [.keybinding.submodules]", (path ? lpath_19 : null)])
                return false;
            }
        }
        else
        {
            rep !== null && rep.push(["unexpected prop [.keybinding]", (path ? lpath_19 : null)])
            return false;
        }
    }
    return true;
}

const _jm_re_2 = (s) => _jm_re_2_re.exec(s) !== null

// object .services
function _jm_obj_32(val, path, rep)
{
    if (! (Object.prototype.toString.call(val) === '[object Object]'))
    {
        rep !== null && rep.push(["not an object [.services]", path])
        return false;
    }
    let res;
    for (const [prop, pval] of Object.entries(val))
    {
        let lpath_29 = path ? path.concat([prop]) : null;
        if (_jm_re_1(prop, path, rep))
        {
            // handle 1 re props
            // .services.'/./'
            // "/^[^:]+:[^:]+$/"
            res = ((typeof pval === 'string' || pval instanceof String)) && _jm_re_2(pval, (path ? lpath_29 : null), rep);
            if (! res)
            {
                rep !== null && rep.push(["unexpected /^[^:]+:[^:]+$/ [.services.'/./']", (path ? lpath_29 : null)])
                return false;
            }
        }
        else
        {
            rep !== null && rep.push(["unexpected prop [.services]", (path ? lpath_29 : null)])
            return false;
        }
    }
    return true;
}


// object .customCommands.'@'.0.after
function _jm_obj_34(val, path, rep)
{
    if (! (Object.prototype.toString.call(val) === '[object Object]'))
    {
        rep !== null && rep.push(["not an object [.customCommands.'@'.0.after]", path])
        return false;
    }
    let res;
    for (const [prop, pval] of Object.entries(val))
    {
        let lpath_31 = path ? path.concat([prop]) : null;
        if (prop == "checkForConflicts")
        {
            // handle may checkForConflicts property
            // .customCommands.'@'.0.after.checkForConflicts
            res = (typeof pval === 'boolean' || pval instanceof Boolean);
            if (! res)
            {
                rep !== null && rep.push(["not a bool [.customCommands.'@'.0.after.checkForConflicts]", (path ? lpath_31 : null)])
                rep !== null && rep.push(["invalid optional prop value [.customCommands.'@'.0.after.checkForConflicts]", (path ? lpath_31 : null)])
                return false;
            }
        }
        else
        {
            rep !== null && rep.push(["unexpected prop [.customCommands.'@'.0.after]", (path ? lpath_31 : null)])
            return false;
        }
    }
    return true;
}

// object .customCommands.'@'.0
function _jm_obj_33(val, path, rep)
{
    if (! (Object.prototype.toString.call(val) === '[object Object]'))
    {
        rep !== null && rep.push(["not an object [.customCommands.'@'.0]", path])
        return false;
    }
    let res;
    let must_count = 0;
    for (const [prop, pval] of Object.entries(val))
    {
        let lpath_30 = path ? path.concat([prop]) : null;
        if (prop == "key")
        {
            // handle must key property
            must_count += 1;
            // .customCommands.'@'.0.key
            res = json_model_4(pval, (path ? lpath_30 : null), rep);
            if (! res)
            {
                rep !== null && rep.push(["unexpected $keybinding [.customCommands.'@'.0.key]", (path ? lpath_30 : null)])
                rep !== null && rep.push(["invalid mandatory prop value [.customCommands.'@'.0.key]", (path ? lpath_30 : null)])
                return false;
            }
        }
        else if (prop == "command")
        {
            // handle must command property
            must_count += 1;
            // .customCommands.'@'.0.command
            res = (typeof pval === 'string' || pval instanceof String);
            if (! res)
            {
                rep !== null && rep.push(["unexpected string [.customCommands.'@'.0.command]", (path ? lpath_30 : null)])
                rep !== null && rep.push(["invalid mandatory prop value [.customCommands.'@'.0.command]", (path ? lpath_30 : null)])
                return false;
            }
        }
        else if (prop == "context")
        {
            // handle must context property
            must_count += 1;
            // .customCommands.'@'.0.context
            res = ((pval === null || (typeof pval === 'number' || pval instanceof Number) || (typeof pval === 'boolean' || pval instanceof Boolean) || (typeof pval === 'string' || pval instanceof String))) && _jm_cst_15.has(pval);
            if (! res)
            {
                rep !== null && rep.push(["value not in enum [.customCommands.'@'.0.context.'|']", (path ? lpath_30 : null)])
                rep !== null && rep.push(["invalid mandatory prop value [.customCommands.'@'.0.context]", (path ? lpath_30 : null)])
                return false;
            }
        }
        else if (prop == "subprocess")
        {
            // handle may subprocess property
            // .customCommands.'@'.0.subprocess
            res = (typeof pval === 'boolean' || pval instanceof Boolean);
            if (! res)
            {
                rep !== null && rep.push(["not a bool [.customCommands.'@'.0.subprocess]", (path ? lpath_30 : null)])
                rep !== null && rep.push(["invalid optional prop value [.customCommands.'@'.0.subprocess]", (path ? lpath_30 : null)])
                return false;
            }
        }
        else if (prop == "prompts")
        {
            // handle may prompts property
            // .customCommands.'@'.0.prompts
            res = Array.isArray(pval);
            if (res)
            {
                for (let arr_4_idx = 0; arr_4_idx < pval.length; arr_4_idx++)
                {
                    let arr_4_item = pval[arr_4_idx]
                    let arr_4_lpath = (path ? lpath_30 : null) ? (path ? lpath_30 : null).concat([arr_4_idx]) : null;
                    // .customCommands.'@'.0.prompts.0
                    res = json_model_10(arr_4_item, ((path ? lpath_30 : null) ? arr_4_lpath : null), rep);
                    if (! res)
                    {
                        rep !== null && rep.push(["unexpected $Prompts [.customCommands.'@'.0.prompts.0]", ((path ? lpath_30 : null) ? arr_4_lpath : null)])
                        break;
                    }
                }
            }
            if (! res)
            {
                rep !== null && rep.push(["not array or unexpected array [.customCommands.'@'.0.prompts]", (path ? lpath_30 : null)])
                rep !== null && rep.push(["invalid optional prop value [.customCommands.'@'.0.prompts]", (path ? lpath_30 : null)])
                return false;
            }
        }
        else if (prop == "loadingText")
        {
            // handle may loadingText property
            // .customCommands.'@'.0.loadingText
            res = (typeof pval === 'string' || pval instanceof String);
            if (! res)
            {
                rep !== null && rep.push(["unexpected string [.customCommands.'@'.0.loadingText]", (path ? lpath_30 : null)])
                rep !== null && rep.push(["invalid optional prop value [.customCommands.'@'.0.loadingText]", (path ? lpath_30 : null)])
                return false;
            }
        }
        else if (prop == "description")
        {
            // handle may description property
            // .customCommands.'@'.0.description
            res = (typeof pval === 'string' || pval instanceof String);
            if (! res)
            {
                rep !== null && rep.push(["unexpected string [.customCommands.'@'.0.description]", (path ? lpath_30 : null)])
                rep !== null && rep.push(["invalid optional prop value [.customCommands.'@'.0.description]", (path ? lpath_30 : null)])
                return false;
            }
        }
        else if (prop == "stream")
        {
            // handle may stream property
            // .customCommands.'@'.0.stream
            res = (typeof pval === 'boolean' || pval instanceof Boolean);
            if (! res)
            {
                rep !== null && rep.push(["not a bool [.customCommands.'@'.0.stream]", (path ? lpath_30 : null)])
                rep !== null && rep.push(["invalid optional prop value [.customCommands.'@'.0.stream]", (path ? lpath_30 : null)])
                return false;
            }
        }
        else if (prop == "showOutput")
        {
            // handle may showOutput property
            // .customCommands.'@'.0.showOutput
            res = (typeof pval === 'boolean' || pval instanceof Boolean);
            if (! res)
            {
                rep !== null && rep.push(["not a bool [.customCommands.'@'.0.showOutput]", (path ? lpath_30 : null)])
                rep !== null && rep.push(["invalid optional prop value [.customCommands.'@'.0.showOutput]", (path ? lpath_30 : null)])
                return false;
            }
        }
        else if (prop == "after")
        {
            // handle may after property
            // .customCommands.'@'.0.after
            res = _jm_obj_34(pval, (path ? lpath_30 : null), rep);
            if (! res)
            {
                rep !== null && rep.push(["unexpected element [.customCommands.'@'.0.after]", (path ? lpath_30 : null)])
                rep !== null && rep.push(["invalid optional prop value [.customCommands.'@'.0.after]", (path ? lpath_30 : null)])
                return false;
            }
        }
        else
        {
            rep !== null && rep.push(["unexpected prop [.customCommands.'@'.0]", (path ? lpath_30 : null)])
            return false;
        }
    }
    if (must_count != 3)
    {
        if (rep !== null)
        {
            if (! val.hasOwnProperty("command"))
            {
                rep !== null && rep.push(["missing mandatory prop <command> [.customCommands.'@'.0]", path])
            }
            if (! val.hasOwnProperty("context"))
            {
                rep !== null && rep.push(["missing mandatory prop <context> [.customCommands.'@'.0]", path])
            }
            if (! val.hasOwnProperty("key"))
            {
                rep !== null && rep.push(["missing mandatory prop <key> [.customCommands.'@'.0]", path])
            }
        }
        return false;
    }
    return true;
}

// check $ (.)
function json_model_1(val, path, rep)
{
    // JSON Model for Lazy Git
    // .
    if (! (Object.prototype.toString.call(val) === '[object Object]'))
    {
        rep !== null && rep.push(["not an object [.]", path])
        return false;
    }
    let res;
    for (const [prop, pval] of Object.entries(val))
    {
        let lpath_4 = path ? path.concat([prop]) : null;
        if (prop == "gui")
        {
            // handle may gui property
            // .gui
            res = _jm_obj_7(pval, (path ? lpath_4 : null), rep);
            if (! res)
            {
                rep !== null && rep.push(["unexpected element [.gui]", (path ? lpath_4 : null)])
                rep !== null && rep.push(["invalid optional prop value [.gui]", (path ? lpath_4 : null)])
                return false;
            }
        }
        else if (prop == "git")
        {
            // handle may git property
            // .git
            res = _jm_obj_12(pval, (path ? lpath_4 : null), rep);
            if (! res)
            {
                rep !== null && rep.push(["unexpected element [.git]", (path ? lpath_4 : null)])
                rep !== null && rep.push(["invalid optional prop value [.git]", (path ? lpath_4 : null)])
                return false;
            }
        }
        else if (prop == "os")
        {
            // handle may os property
            // .os
            res = _jm_obj_19(pval, (path ? lpath_4 : null), rep);
            if (! res)
            {
                rep !== null && rep.push(["unexpected element [.os]", (path ? lpath_4 : null)])
                rep !== null && rep.push(["invalid optional prop value [.os]", (path ? lpath_4 : null)])
                return false;
            }
        }
        else if (prop == "refresher")
        {
            // handle may refresher property
            // .refresher
            res = _jm_obj_20(pval, (path ? lpath_4 : null), rep);
            if (! res)
            {
                rep !== null && rep.push(["unexpected element [.refresher]", (path ? lpath_4 : null)])
                rep !== null && rep.push(["invalid optional prop value [.refresher]", (path ? lpath_4 : null)])
                return false;
            }
        }
        else if (prop == "update")
        {
            // handle may update property
            // .update
            res = _jm_obj_21(pval, (path ? lpath_4 : null), rep);
            if (! res)
            {
                rep !== null && rep.push(["unexpected element [.update]", (path ? lpath_4 : null)])
                rep !== null && rep.push(["invalid optional prop value [.update]", (path ? lpath_4 : null)])
                return false;
            }
        }
        else if (prop == "confirmOnQuit")
        {
            // handle may confirmOnQuit property
            // .confirmOnQuit
            res = (typeof pval === 'boolean' || pval instanceof Boolean);
            if (! res)
            {
                rep !== null && rep.push(["not a bool [.confirmOnQuit]", (path ? lpath_4 : null)])
                rep !== null && rep.push(["invalid optional prop value [.confirmOnQuit]", (path ? lpath_4 : null)])
                return false;
            }
        }
        else if (prop == "quitOnTopLevelReturn")
        {
            // handle may quitOnTopLevelReturn property
            // .quitOnTopLevelReturn
            res = (typeof pval === 'boolean' || pval instanceof Boolean);
            if (! res)
            {
                rep !== null && rep.push(["not a bool [.quitOnTopLevelReturn]", (path ? lpath_4 : null)])
                rep !== null && rep.push(["invalid optional prop value [.quitOnTopLevelReturn]", (path ? lpath_4 : null)])
                return false;
            }
        }
        else if (prop == "disableStartupPopups")
        {
            // handle may disableStartupPopups property
            // .disableStartupPopups
            res = (typeof pval === 'boolean' || pval instanceof Boolean);
            if (! res)
            {
                rep !== null && rep.push(["not a bool [.disableStartupPopups]", (path ? lpath_4 : null)])
                rep !== null && rep.push(["invalid optional prop value [.disableStartupPopups]", (path ? lpath_4 : null)])
                return false;
            }
        }
        else if (prop == "notARepository")
        {
            // handle may notARepository property
            // .notARepository
            res = ((pval === null || (typeof pval === 'number' || pval instanceof Number) || (typeof pval === 'boolean' || pval instanceof Boolean) || (typeof pval === 'string' || pval instanceof String))) && _jm_cst_14.has(pval);
            if (! res)
            {
                rep !== null && rep.push(["value not in enum [.notARepository.'|']", (path ? lpath_4 : null)])
                rep !== null && rep.push(["invalid optional prop value [.notARepository]", (path ? lpath_4 : null)])
                return false;
            }
        }
        else if (prop == "promptToReturnFromSubprocess")
        {
            // handle may promptToReturnFromSubprocess property
            // .promptToReturnFromSubprocess
            res = (typeof pval === 'boolean' || pval instanceof Boolean);
            if (! res)
            {
                rep !== null && rep.push(["not a bool [.promptToReturnFromSubprocess]", (path ? lpath_4 : null)])
                rep !== null && rep.push(["invalid optional prop value [.promptToReturnFromSubprocess]", (path ? lpath_4 : null)])
                return false;
            }
        }
        else if (prop == "keybinding")
        {
            // handle may keybinding property
            // .keybinding
            res = _jm_obj_22(pval, (path ? lpath_4 : null), rep);
            if (! res)
            {
                rep !== null && rep.push(["unexpected element [.keybinding]", (path ? lpath_4 : null)])
                rep !== null && rep.push(["invalid optional prop value [.keybinding]", (path ? lpath_4 : null)])
                return false;
            }
        }
        else if (prop == "services")
        {
            // handle may services property
            // .services
            res = _jm_obj_32(pval, (path ? lpath_4 : null), rep);
            if (! res)
            {
                rep !== null && rep.push(["unexpected element [.services]", (path ? lpath_4 : null)])
                rep !== null && rep.push(["invalid optional prop value [.services]", (path ? lpath_4 : null)])
                return false;
            }
        }
        else if (prop == "customCommands")
        {
            // handle may customCommands property
            // .customCommands
            // .customCommands.'@'
            res = Array.isArray(pval);
            if (res)
            {
                for (let arr_3_idx = 0; arr_3_idx < pval.length; arr_3_idx++)
                {
                    let arr_3_item = pval[arr_3_idx]
                    let arr_3_lpath = (path ? lpath_4 : null) ? (path ? lpath_4 : null).concat([arr_3_idx]) : null;
                    // .customCommands.'@'.0
                    res = _jm_obj_33(arr_3_item, ((path ? lpath_4 : null) ? arr_3_lpath : null), rep);
                    if (! res)
                    {
                        rep !== null && rep.push(["unexpected element [.customCommands.'@'.0]", ((path ? lpath_4 : null) ? arr_3_lpath : null)])
                        break;
                    }
                }
            }
            if (! res)
            {
                rep !== null && rep.push(["not array or unexpected array [.customCommands.'@']", (path ? lpath_4 : null)])
            }
            if (res)
            {
                res = runtime.jm_array_is_unique(pval, (path ? lpath_4 : null), rep);
                if (! res)
                {
                    rep !== null && rep.push(["constraints failed [.customCommands]", (path ? lpath_4 : null)])
                }
            }
            if (! res)
            {
                rep !== null && rep.push(["invalid optional prop value [.customCommands]", (path ? lpath_4 : null)])
                return false;
            }
        }
        else
        {
            rep !== null && rep.push(["unexpected prop [.]", (path ? lpath_4 : null)])
            return false;
        }
    }
    return true;
}


var initialized = false

// differed module initializations
export function check_model_init()
{
    if (! initialized)
    {
        initialized = true;
        runtime.jm_set_rx(RegExp)
        _jm_cst_0.add("black")
        _jm_cst_0.add("red")
        _jm_cst_0.add("green")
        _jm_cst_0.add("yellow")
        _jm_cst_0.add("blue")
        _jm_cst_0.add("magenta")
        _jm_cst_0.add("cyan")
        _jm_cst_0.add("white")
        _jm_cst_0.add("bold")
        _jm_cst_0.add("default")
        _jm_cst_0.add("reverse")
        _jm_cst_0.add("underline")
        _jm_cst_0.add("strikethrough")
        _jm_cst_1.add("input")
        _jm_cst_1.add("confirm")
        _jm_cst_1.add("menu")
        _jm_cst_1.add("menuFromCommand")
        _jm_cst_2.add("authors")
        _jm_cst_2.add("branches")
        _jm_cst_2.add("files")
        _jm_cst_2.add("refs")
        _jm_cst_2.add("remotes")
        _jm_cst_2.add("remoteBranches")
        _jm_cst_2.add("tags")
        _jm_map_0.set("input", _jm_obj_0)
        _jm_map_0.set("confirm", _jm_obj_3)
        _jm_map_0.set("menu", _jm_obj_4)
        _jm_map_0.set("menuFromCommand", _jm_obj_6)
        _jm_cst_3.add("normal")
        _jm_cst_3.add("half")
        _jm_cst_3.add("full")
        _jm_cst_4.add("horizontal")
        _jm_cst_4.add("flexible")
        _jm_cst_4.add("vertical")
        _jm_cst_5.add("auto")
        _jm_cst_5.add("en")
        _jm_cst_5.add("zh-CN")
        _jm_cst_5.add("zh-TW")
        _jm_cst_5.add("pl")
        _jm_cst_5.add("nl")
        _jm_cst_5.add("ja")
        _jm_cst_5.add("ko")
        _jm_cst_5.add("ru")
        _jm_cst_6.add("2")
        _jm_cst_6.add("3")
        _jm_cst_7.add("auto")
        _jm_cst_7.add("always")
        _jm_cst_8.add("single")
        _jm_cst_8.add("double")
        _jm_cst_8.add("rounded")
        _jm_cst_8.add("hidden")
        _jm_cst_9.add("always")
        _jm_cst_9.add("never")
        _jm_cst_10.add("date-order")
        _jm_cst_10.add("author-date-order")
        _jm_cst_10.add("topo-order")
        _jm_cst_10.add("default")
        _jm_cst_11.add("always")
        _jm_cst_11.add("never")
        _jm_cst_11.add("when-maximised")
        _jm_cst_12.add("vim")
        _jm_cst_12.add("nvim")
        _jm_cst_12.add("emacs")
        _jm_cst_12.add("nano")
        _jm_cst_12.add("vscode")
        _jm_cst_12.add("sublime")
        _jm_cst_12.add("bbedit")
        _jm_cst_12.add("kakoune")
        _jm_cst_12.add("helix")
        _jm_cst_12.add("xcode")
        _jm_cst_13.add("prompt")
        _jm_cst_13.add("background")
        _jm_cst_13.add("never")
        _jm_cst_14.add("prompt")
        _jm_cst_14.add("create")
        _jm_cst_14.add("skip")
        _jm_cst_14.add("quit")
        _jm_obj_23_map.set("confirm", json_model_4)
        _jm_obj_23_map.set("copyToClipboard", json_model_4)
        _jm_obj_23_map.set("createPatchOptionsMenu", json_model_4)
        _jm_obj_23_map.set("createRebaseOptionsMenu", json_model_4)
        _jm_obj_23_map.set("decreaseContextInDiffView", json_model_4)
        _jm_obj_23_map.set("diffingMenu", json_model_4)
        _jm_obj_23_map.set("diffingMenu-alt", json_model_4)
        _jm_obj_23_map.set("edit", json_model_4)
        _jm_obj_23_map.set("executeCustomCommand", json_model_4)
        _jm_obj_23_map.set("extrasMenu", json_model_4)
        _jm_obj_23_map.set("filteringMenu", json_model_4)
        _jm_obj_23_map.set("goInto", json_model_4)
        _jm_obj_23_map.set("gotoBottom", json_model_4)
        _jm_obj_23_map.set("gotoTop", json_model_4)
        _jm_obj_23_map.set("increaseContextInDiffView", json_model_4)
        _jm_obj_23_map.set("jumpToBlock", _jm_f_0)
        _jm_obj_23_map.set("new", json_model_4)
        _jm_obj_23_map.set("nextBlock", json_model_4)
        _jm_obj_23_map.set("nextBlock-alt", json_model_4)
        _jm_obj_23_map.set("nextItem", json_model_4)
        _jm_obj_23_map.set("nextItem-alt", json_model_4)
        _jm_obj_23_map.set("nextMatch", json_model_4)
        _jm_obj_23_map.set("nextPage", json_model_4)
        _jm_obj_23_map.set("nextScreenMode", json_model_4)
        _jm_obj_23_map.set("nextTab", json_model_4)
        _jm_obj_23_map.set("openFile", json_model_4)
        _jm_obj_23_map.set("openRecentRepos", json_model_4)
        _jm_obj_23_map.set("optionMenu", _jm_f_1)
        _jm_obj_23_map.set("optionMenu-alt1", json_model_4)
        _jm_obj_23_map.set("prevBlock", json_model_4)
        _jm_obj_23_map.set("prevBlock-alt", json_model_4)
        _jm_obj_23_map.set("prevItem", json_model_4)
        _jm_obj_23_map.set("prevItem-alt", json_model_4)
        _jm_obj_23_map.set("prevMatch", json_model_4)
        _jm_obj_23_map.set("prevPage", json_model_4)
        _jm_obj_23_map.set("prevScreenMode", json_model_4)
        _jm_obj_23_map.set("prevTab", json_model_4)
        _jm_obj_23_map.set("pullFiles", json_model_4)
        _jm_obj_23_map.set("pushFiles", json_model_4)
        _jm_obj_23_map.set("quit", json_model_4)
        _jm_obj_23_map.set("quit-alt1", json_model_4)
        _jm_obj_23_map.set("quitWithoutChangingDirectory", json_model_4)
        _jm_obj_23_map.set("redo", json_model_4)
        _jm_obj_23_map.set("refresh", json_model_4)
        _jm_obj_23_map.set("remove", json_model_4)
        _jm_obj_23_map.set("return", json_model_4)
        _jm_obj_23_map.set("scrollDownMain", json_model_4)
        _jm_obj_23_map.set("scrollDownMain-alt1", json_model_4)
        _jm_obj_23_map.set("scrollDownMain-alt2", json_model_4)
        _jm_obj_23_map.set("scrollLeft", json_model_4)
        _jm_obj_23_map.set("scrollRight", json_model_4)
        _jm_obj_23_map.set("scrollUpMain", json_model_4)
        _jm_obj_23_map.set("scrollUpMain-alt1", json_model_4)
        _jm_obj_23_map.set("scrollUpMain-alt2", json_model_4)
        _jm_obj_23_map.set("select", json_model_4)
        _jm_obj_23_map.set("submitEditorText", json_model_4)
        _jm_obj_23_map.set("togglePanel", json_model_4)
        _jm_obj_23_map.set("toggleWhitespaceInDiffView", json_model_4)
        _jm_obj_23_map.set("undo", json_model_4)
        _jm_cst_15.add("status")
        _jm_cst_15.add("files")
        _jm_cst_15.add("worktrees")
        _jm_cst_15.add("localBranches")
        _jm_cst_15.add("remotes")
        _jm_cst_15.add("remoteBranches")
        _jm_cst_15.add("tags")
        _jm_cst_15.add("commits")
        _jm_cst_15.add("reflogCommits")
        _jm_cst_15.add("subCommits")
        _jm_cst_15.add("commitFiles")
        _jm_cst_15.add("stash")
        _jm_cst_15.add("global")
        check_model_map.set("", json_model_1)
        check_model_map.set("color", json_model_2)
        check_model_map.set("colorArray", json_model_3)
        check_model_map.set("keybinding", json_model_4)
        check_model_map.set("custom-commands-prompts-type-property", json_model_5)
        check_model_map.set("custom-commands-prompts-title-property", json_model_6)
        check_model_map.set("custom-commands-prompts-key-property", json_model_7)
        check_model_map.set("neString", json_model_8)
        check_model_map.set("stringArray", json_model_9)
        check_model_map.set("Prompts", json_model_10)
    }
}

// differed module cleanup
export function check_model_free()
{
    if (initialized)
    {
        initialized = false;
    }
}

export function check_model(val, name, rep)
{
    let checker = check_model_map.get(name)
    if (checker === undefined)
        throw `no checker for "${name}"`
    let path = rep !== null ? [] : null

    return checker(val, path, rep)
}

// possibly run as main based on a guess
import main from "json_model_runtime/main.js"

if (import.meta.url.endsWith(process.argv[1]))
    main(check_model_init, check_model, check_model_free)
