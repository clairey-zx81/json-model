#! /bin/env node
// we may need require to load re2
import { createRequire } from 'node:module';
const require = createRequire(import.meta.url);
//
// Generated by JSON Model Compiler version 2
// see https://github.com/clairey-zx81/json-model
//
import * as runtime from "json_model_runtime"
const JSON_MODEL_VERSION = "2";

var check_model_map = new Map()

// check $Vv (.'$Vv')
function json_model_2(val, path, rep)
{
    let res;
    // .'$Vv'
    // .'$Vv'.'|'.0
    res = (typeof val === 'number' || val instanceof Number) && Number.isInteger(val);
    if (! res)
    {
        rep !== null && rep.push(["not a -1 strict int [.'$Vv'.'|'.0]", path])
    }
    if (! res)
    {
        // .'$Vv'.'|'.1
        res = (typeof val === 'string' || val instanceof String);
        if (! res)
        {
            rep !== null && rep.push(["unexpected string [.'$Vv'.'|'.1]", path])
        }
    }
    if (res)
    {
        if (rep !== null) rep.length = 0
    }
    else
    {
        rep !== null && rep.push(["no model matched [.'$Vv'.'|']", path])
    }
    return res;
}

// check $Xx (.'$Xx')
function json_model_3(val, path, rep)
{
    // .'$Xx'
    // check close must only props
    if (! (Object.prototype.toString.call(val) === '[object Object]'))
    {
        rep !== null && rep.push(["not an object [.'$Xx']", path])
        return false;
    }
    if (Object.keys(val).length != 1)
    {
        rep !== null && rep.push(["bad property count [.'$Xx']", path])
        return false;
    }
    let lpath;
    let pval;
    let res;
    if (! val.hasOwnProperty("X"))
    {
        rep !== null && rep.push(["missing mandatory prop <X> [.'$Xx']", path])
        return false;
    }
    lpath = path ? path.concat(["X"]) : null;
    pval = val["X"];
    // .'$Xx'.X
    res = (typeof pval === 'string' || pval instanceof String);
    if (! res)
    {
        rep !== null && rep.push(["unexpected string [.'$Xx'.X]", (path ? lpath : null)])
        rep !== null && rep.push(["unexpected value for mandatory prop <X> [.'$Xx']", (path ? lpath : null)])
        return false;
    }
    return true;
}

// check $Yy (.'$Yy')
function json_model_4(val, path, rep)
{
    // .'$Yy'
    // check close must only props
    if (! (Object.prototype.toString.call(val) === '[object Object]'))
    {
        rep !== null && rep.push(["not an object [.'$Yy']", path])
        return false;
    }
    if (Object.keys(val).length != 1)
    {
        rep !== null && rep.push(["bad property count [.'$Yy']", path])
        return false;
    }
    let lpath;
    let pval;
    let res;
    if (! val.hasOwnProperty("Y"))
    {
        rep !== null && rep.push(["missing mandatory prop <Y> [.'$Yy']", path])
        return false;
    }
    lpath = path ? path.concat(["Y"]) : null;
    pval = val["Y"];
    // .'$Yy'.Y
    res = (typeof pval === 'string' || pval instanceof String);
    if (! res)
    {
        rep !== null && rep.push(["unexpected string [.'$Yy'.Y]", (path ? lpath : null)])
        rep !== null && rep.push(["unexpected value for mandatory prop <Y> [.'$Yy']", (path ? lpath : null)])
        return false;
    }
    return true;
}

// object .'$Ee'.'|'.1
function _jm_obj_0(val, path, rep)
{
    if (! (Object.prototype.toString.call(val) === '[object Object]'))
    {
        rep !== null && rep.push(["not an object [.'$Ee'.'|'.1]", path])
        return false;
    }
    let res;
    let must_count = 0;
    for (const [prop, pval] of Object.entries(val))
    {
        let lpath_0 = path ? path.concat([prop]) : null;
        if (prop == "Y")
        {
            // handle must Y property
            must_count += 1;
            // .'$Ee'.'|'.1.Y
            res = (typeof pval === 'string' || pval instanceof String);
            if (! res)
            {
                rep !== null && rep.push(["unexpected string [.'$Ee'.'|'.1.Y]", (path ? lpath_0 : null)])
                rep !== null && rep.push(["invalid mandatory prop value [.'$Ee'.'|'.1.Y]", (path ? lpath_0 : null)])
                return false;
            }
        }
        else if (prop == "Z")
        {
            // handle may Z property
            // .'$Ee'.'|'.1.Z
            res = (typeof pval === 'string' || pval instanceof String);
            if (! res)
            {
                rep !== null && rep.push(["unexpected string [.'$Ee'.'|'.1.Z]", (path ? lpath_0 : null)])
                rep !== null && rep.push(["invalid optional prop value [.'$Ee'.'|'.1.Z]", (path ? lpath_0 : null)])
                return false;
            }
        }
        else
        {
            rep !== null && rep.push(["unexpected prop [.'$Ee'.'|'.1]", (path ? lpath_0 : null)])
            return false;
        }
    }
    if (must_count != 1)
    {
        if (rep !== null)
        {
            if (! val.hasOwnProperty("Y"))
            {
                rep !== null && rep.push(["missing mandatory prop <Y> [.'$Ee'.'|'.1]", path])
            }
        }
        return false;
    }
    return true;
}

// object .'$Ee'.'|'.0
function _jm_obj_1(val, path, rep)
{
    if (! (Object.prototype.toString.call(val) === '[object Object]'))
    {
        rep !== null && rep.push(["not an object [.'$Ee'.'|'.0]", path])
        return false;
    }
    let res;
    let must_count = 0;
    for (const [prop, pval] of Object.entries(val))
    {
        let lpath_1 = path ? path.concat([prop]) : null;
        if (prop == "X")
        {
            // handle must X property
            must_count += 1;
            // .'$Ee'.'|'.0.X
            res = (typeof pval === 'string' || pval instanceof String);
            if (! res)
            {
                rep !== null && rep.push(["unexpected string [.'$Ee'.'|'.0.X]", (path ? lpath_1 : null)])
                rep !== null && rep.push(["invalid mandatory prop value [.'$Ee'.'|'.0.X]", (path ? lpath_1 : null)])
                return false;
            }
        }
        else if (prop == "Z")
        {
            // handle may Z property
            // .'$Ee'.'|'.0.Z
            res = (typeof pval === 'string' || pval instanceof String);
            if (! res)
            {
                rep !== null && rep.push(["unexpected string [.'$Ee'.'|'.0.Z]", (path ? lpath_1 : null)])
                rep !== null && rep.push(["invalid optional prop value [.'$Ee'.'|'.0.Z]", (path ? lpath_1 : null)])
                return false;
            }
        }
        else
        {
            rep !== null && rep.push(["unexpected prop [.'$Ee'.'|'.0]", (path ? lpath_1 : null)])
            return false;
        }
    }
    if (must_count != 1)
    {
        if (rep !== null)
        {
            if (! val.hasOwnProperty("X"))
            {
                rep !== null && rep.push(["missing mandatory prop <X> [.'$Ee'.'|'.0]", path])
            }
        }
        return false;
    }
    return true;
}

// check $Ee (.'$Ee')
function json_model_5(val, path, rep)
{
    let res;
    // .'$Ee'
    res = Object.prototype.toString.call(val) === '[object Object]';
    if (! res)
    {
        rep !== null && rep.push(["unexpected type [.'$Ee'.'|']", path])
    }
    if (res)
    {
        // .'$Ee'.'|'.0
        res = _jm_obj_1(val, path, rep);
        if (! res)
        {
            rep !== null && rep.push(["unexpected element [.'$Ee'.'|'.0]", path])
        }
        if (! res)
        {
            // .'$Ee'.'|'.1
            res = _jm_obj_0(val, path, rep);
            if (! res)
            {
                rep !== null && rep.push(["unexpected element [.'$Ee'.'|'.1]", path])
            }
        }
        if (res)
        {
            if (rep !== null) rep.length = 0
        }
        else
        {
            rep !== null && rep.push(["no model matched [.'$Ee'.'|']", path])
        }
    }
    return res;
}

// check $Mm (.'$Mm')
function json_model_6(val, path, rep)
{
    let res;
    // .'$Mm'
    // .'$Mm'.'|'.0
    res = json_model_2(val, path, rep);
    if (! res)
    {
        rep !== null && rep.push(["unexpected $Vv [.'$Mm'.'|'.0]", path])
    }
    if (! res)
    {
        // .'$Mm'.'|'.1
        res = json_model_5(val, path, rep);
        if (! res)
        {
            rep !== null && rep.push(["unexpected $Ee [.'$Mm'.'|'.1]", path])
        }
    }
    if (res)
    {
        if (rep !== null) rep.length = 0
    }
    else
    {
        rep !== null && rep.push(["no model matched [.'$Mm'.'|']", path])
    }
    return res;
}

// check $ (.)
function json_model_1(val, path, rep)
{
    let res;
    // .
    res = json_model_6(val, path, rep);
    if (! res)
    {
        rep !== null && rep.push(["unexpected $Mm [.]", path])
    }
    return res;
}


var initialized = false

// differed module initializations
export function check_model_init()
{
    if (! initialized)
    {
        initialized = true;
        runtime.jm_set_rx(RegExp)
        check_model_map.set("", json_model_6)
        check_model_map.set("Vv", json_model_2)
        check_model_map.set("Xx", json_model_3)
        check_model_map.set("Yy", json_model_4)
        check_model_map.set("Ee", json_model_5)
        check_model_map.set("Mm", json_model_6)
    }
}

// differed module cleanup
export function check_model_free()
{
    if (initialized)
    {
        initialized = false;
    }
}

export function check_model(val, name, rep)
{
    let checker = check_model_map.get(name)
    if (checker === undefined)
        throw `no checker for "${name}"`
    let path = rep !== null ? [] : null

    return checker(val, path, rep)
}

// possibly run as main based on a guess
import main from "json_model_runtime/main.js"

if (import.meta.url.endsWith(process.argv[1]))
    main(check_model_init, check_model, check_model_free)
