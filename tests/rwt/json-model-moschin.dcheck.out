json-model-moschin.0.true.json: FAIL [('$Scalar.|[0]', '$', 'expecting null'), ('$Scalar.|[1]', '$', 'expecting boolean true'), ('$Scalar.|[2]', '$', 'expecting integer 0'), ('$Scalar.|[3]', '$', 'expecting integer 1'), ('$Scalar.|[4]', '$', 'expecting integer -1'), ('$Scalar.|[5]', '$', 'expecting number 0.0'), ('$Scalar.|[6]', '$', 'expecting number 1.0'), ('$Scalar.|[7]', '$', 'expecting number -1.0'), ('$Scalar.|[8]', '$', 'expecting a string'), ('$Scalar.|', '$', 'no any matched'), ('$RootModel.|[0]', '$', '$Scalar failed'), ('$Array', '$', 'expecting an array'), ('$RootModel.|[1]', '$', '$Array failed'), ('$Scalar.|[0]', '$.@', 'expecting null'), ('$Scalar.|[1]', '$.@', 'expecting boolean true'), ('$Scalar.|[2]', '$.@', 'expecting integer 0'), ('$Root.|[0]', '$..mo', 'unexpected property .mo'), ('$Root.|[1]', '$.@', 'unexpected property @'), ('$Root.|[2]', '$.@', 'unexpected property @'), ('$Root.|[3]', '$.@', 'unexpected property @'), ('$Root.|[4]', '$.@', 'unexpected property @'), ('<NONE>', '$', '$NONE'), ('$Root.|[5].^[@|&^+/*]$', '$', '$NONE failed'), ('$Root.|', '$', 'no any matched'), ('$RootModel.|[2]', '$', '$Root failed'), ('$RootModel.|', '$', 'no any matched'), ('.Model', '$', '$RootModel failed'), ('', '$', '$Model failed')]
