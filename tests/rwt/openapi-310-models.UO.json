[
  {
    "#": "JsonModel 1 with defs",
    "$": {
      "openapi": {
        "#": "JsonModel 369 with defs",
        "$": "Symbol 369",
        "@": "$OpenAPI",
        "~": "https://json-model.org/models/json-model"
      },
      "#": "Symbol 1",
      "": "https://json-model.org/models/openapi-310-models"
    },
    "@": "$openapi",
    "~": "https://json-model.org/models/json-model"
  },
  {
    "#": "JsonModel 369 with defs",
    "$": {
      "OpenAPI": {
        "openapi": "",
        "info": "$Info",
        "?jsonSchemaDialect": "",
        "?servers": [
          "$Server"
        ],
        "?paths": "$Paths",
        "?webhooks": {
          "": {
            "|": [
              "$PathItem",
              "$Reference"
            ]
          }
        },
        "?component": "$Components",
        "?security": "$SecurityRequirement",
        "?tags": [
          "$Tag"
        ],
        "?externalDocs": "$ExternalDocumentation",
        "/^x\\-.*$/": "$ANY",
        "#": "JsonModel 370"
      },
      "Info": {
        "title": "",
        "?summary": "",
        "?description": "",
        "?termsOfService": "",
        "?contact": "$Contact",
        "?license": "$License",
        "version": "",
        "/^x\\-.*$/": "$ANY",
        "#": "JsonModel 371"
      },
      "Contact": {
        "?name": "",
        "?url": "$URL",
        "?email": "",
        "/^x\\-.*$/": "$ANY",
        "#": "JsonModel 372"
      },
      "License": {
        "|": [
          {
            "name": "",
            "identifier": "",
            "/^x\\-.*$/": "$ANY"
          },
          {
            "name": "",
            "url": "$URL",
            "/^x\\-.*$/": "$ANY"
          }
        ],
        "#": "JsonModel 373"
      },
      "Server": {
        "url": "$URL",
        "?description": "",
        "?variables": {
          "": "$ServerVariable"
        },
        "/^x\\-.*$/": "$ANY",
        "#": "JsonModel 374"
      },
      "ServerVariable": {
        "?enum": [
          ""
        ],
        "default": "",
        "?description": "",
        "/^x\\-.*$/": "$ANY",
        "#": "JsonModel 375"
      },
      "Components": {
        "?schemas": {
          "": "$Schema"
        },
        "?responses": {
          "": {
            "|": [
              "$Response",
              "$Reference"
            ]
          }
        },
        "?parameters": {
          "": {
            "|": [
              "$Parameter",
              "$Reference"
            ]
          }
        },
        "?examples": {
          "": {
            "|": [
              "$Example",
              "$Reference"
            ]
          }
        },
        "?requestBodies": {
          "": {
            "|": [
              "$RequestBody",
              "$Reference"
            ]
          }
        },
        "?headers": {
          "": {
            "|": [
              "$Header",
              "$Reference"
            ]
          }
        },
        "?securitySchemes": {
          "": {
            "|": [
              "$SecurityScheme",
              "$Reference"
            ]
          }
        },
        "?links": {
          "": {
            "|": [
              "$Link",
              "$Reference"
            ]
          }
        },
        "?callbacks": {
          "": {
            "|": [
              "$Callback",
              "$Reference"
            ]
          }
        },
        "?pathItems": {
          "": {
            "|": [
              "$PathItem",
              "$Reference"
            ]
          }
        },
        "/^x\\-.*$/": "$ANY",
        "#": "JsonModel 376"
      },
      "Paths": {
        "/^//": "$PathItem",
        "/^x\\-.*$/": "$ANY",
        "#": "JsonModel 377"
      },
      "PathItem": {
        "?$ref": "",
        "?summary": "",
        "?description": "",
        "?get": "$Operation",
        "?put": "$Operation",
        "?post": "$Operation",
        "?options": "$Operation",
        "?head": "$Operation",
        "?patch": "$Operation",
        "?trace": "$Operation",
        "?servers": "$Operation",
        "?parameters": {
          "": {
            "|": [
              "$Parameter",
              "$Reference"
            ]
          }
        },
        "/^x\\-.*$/": "$ANY",
        "#": "JsonModel 378"
      },
      "Operation": {
        "?tags": [
          ""
        ],
        "?summary": "",
        "?description": "",
        "?externalDocs": "$ExternalDocumentation",
        "?operationId": "",
        "?parameters": {
          "": {
            "|": [
              "$Parameter",
              "$Reference"
            ]
          }
        },
        "?requestBody": {
          "": {
            "|": [
              "$RequestBody",
              "$Reference"
            ]
          }
        },
        "?responses": "$Responses",
        "?callbacks": {
          "": {
            "|": [
              "$Callback",
              "$Reference"
            ]
          }
        },
        "?deprecated": true,
        "?security": [
          "$SecurityRequirement"
        ],
        "?servers": [
          "$Server"
        ],
        "/^x\\-.*$/": "$ANY",
        "#": "JsonModel 379"
      },
      "ExternalDocumentation": {
        "?description": "",
        "url": "$URL",
        "/^x\\-.*$/": "$ANY",
        "#": "JsonModel 380"
      },
      "parameterShare": {
        "?description": "",
        "?required": true,
        "?deprecated": true,
        "?allowEmptyValue": true,
        "?style": {
          "|": [
            "matrix",
            "label",
            "form",
            "simple",
            "spaceDelimited",
            "pipeDelimited",
            "deepObject"
          ]
        },
        "?explode": true,
        "?allowReserved": true,
        "?schema": "$Schema",
        "?example": "$ANY",
        "?examples": {
          "": {
            "|": [
              "$Example",
              "$Reference"
            ]
          }
        },
        "?content": {
          "": "$MediaType"
        },
        "/^x\\-.*$/": "$ANY",
        "#": "JsonModel 381"
      },
      "Parameter": {
        "name": "",
        "in": {
          "|": [
            "query",
            "header",
            "path",
            "cookie"
          ]
        },
        "?description": "",
        "?required": true,
        "?deprecated": true,
        "?allowEmptyValue": true,
        "?style": {
          "|": [
            "matrix",
            "label",
            "form",
            "simple",
            "spaceDelimited",
            "pipeDelimited",
            "deepObject"
          ]
        },
        "?explode": true,
        "?allowReserved": true,
        "?schema": "$Schema",
        "?example": "$ANY",
        "?examples": {
          "": {
            "|": [
              "$Example",
              "$Reference"
            ]
          }
        },
        "?content": {
          "": "$MediaType"
        },
        "/^x\\-.*$/": "$ANY",
        "#": "JsonModel 382"
      },
      "RequestBody": {
        "?description": "",
        "?content": {
          "": "$MediaType"
        },
        "?required": true,
        "/^x\\-.*$/": "$ANY",
        "#": "JsonModel 383"
      },
      "MediaType": {
        "?schema": "$Schema",
        "?example": "$ANY",
        "?examples": {
          "": {
            "|": [
              "$Example",
              "$Reference"
            ]
          }
        },
        "?encoding": {
          "": "$Encoding"
        },
        "/^x\\-.*$/": "$ANY",
        "#": "JsonModel 384"
      },
      "Encoding": {
        "?contentType": "",
        "?headers": {
          "": {
            "|": [
              "$Header",
              "$Reference"
            ]
          }
        },
        "?style": "",
        "?explode": true,
        "?allowReserved": true,
        "/^x\\-.*$/": "$ANY",
        "#": "JsonModel 385"
      },
      "Responses": {
        "/^[1-5](\\d\\d|XX)$/": {
          "|": [
            "$Response",
            "$Reference"
          ]
        },
        "?default": {
          "|": [
            "$Response",
            "$Reference"
          ]
        },
        "/^x\\-.*$/": "$ANY",
        "#": "JsonModel 386"
      },
      "Response": {
        "?description": "",
        "?headers": {
          "": {
            "|": [
              "$Header",
              "$Reference"
            ]
          }
        },
        "?content": {
          "": "$MediaType"
        },
        "?links": {
          "": {
            "|": [
              "$Link",
              "$Reference"
            ]
          }
        },
        "/^x\\-.*$/": "$ANY",
        "#": "JsonModel 387"
      },
      "Callback": {
        "$Expression": {
          "|": [
            "$PathItem",
            "$Reference"
          ]
        },
        "/^x\\-.*$/": "$ANY",
        "#": "JsonModel 388"
      },
      "Example": {
        "?summary": "",
        "?description": "",
        "?value": "$ANY",
        "?externalValue": "",
        "/^x\\-.*$/": "$ANY",
        "#": "JsonModel 389"
      },
      "Expression": "/\\{.*\\}/",
      "Link": {
        "|": [
          {
            "operationRef": "",
            "?parameters": {
              "": "$ANY"
            },
            "?requestBody": "$ANY",
            "?description": "",
            "?server": "$Server",
            "/^x\\-.*$/": "$ANY"
          },
          {
            "operationId": "",
            "?parameters": {
              "": "$ANY"
            },
            "?requestBody": "$ANY",
            "?description": "",
            "?server": "$Server",
            "/^x\\-.*$/": "$ANY"
          }
        ],
        "#": "JsonModel 391"
      },
      "Header": "$parameterShare",
      "Tag": {
        "name": "",
        "?description": "",
        "?externalDocs": "$ExternalDocumentation",
        "/^x\\-.*$/": "$ANY",
        "#": "JsonModel 393"
      },
      "Reference": {
        "_$ref": "",
        "?summary": "",
        "?description": "",
        "#": "JsonModel 394"
      },
      "schema": {
        "@": "$Schema",
        "#": "JsonModel 404 (JSON_MODEL_LOOSE_INT JSON_MODEL_LOOSE_FLOAT)",
        "$": {
          "": "https://json-model.org/models/json-schema-draft-2020-12",
          "URI-REFERENCE": "",
          "URI": "$URL",
          "core": {
            "?$id": "$URI-REFERENCE",
            "?$schema": "_https://json-schema.org/draft/2020-12/schema",
            "?$ref": "$URI-REFERENCE",
            "?$anchor": "$URI-REFERENCE",
            "?$dynamicRef": "$URI-REFERENCE",
            "?$dynamicAnchor": "$URI-REFERENCE",
            "?$vocabulary": {
              "$URI": true
            },
            "?$comment": "",
            "?$defs": {
              "": "$Schema"
            }
          },
          "meta": {
            "?title": "",
            "?description": "",
            "?default": "$ANY",
            "?deprecated": true,
            "?readOnly": true,
            "?writeOnly": true,
            "?examples": [
              "$ANY"
            ]
          },
          "content": {
            "?contentEncoding": "",
            "?contentMediaType": "",
            "?contentSchema": "$Schema"
          },
          "unevaluated": {
            "?unevaluatedItems": "$Schema",
            "?unevaluatedProperties": "$Schema"
          },
          "format": {
            "?format": ""
          },
          "simpleTypes": {
            "|": [
              "array",
              "boolean",
              "integer",
              "null",
              "number",
              "object",
              "string"
            ]
          },
          "simpleTypesArray": {
            "@": [
              "$simpleTypes"
            ],
            ">=": 1,
            "!": true
          },
          "stringArray": {
            "@": [
              ""
            ],
            "!": true
          },
          "nonNegativeInteger": 0,
          "validation": {
            "?type": {
              "|": [
                "$simpleTypes",
                "$simpleTypesArray"
              ]
            },
            "?const": "$ANY",
            "?enum": [
              "$ANY"
            ],
            "?multipleOf": 1.0,
            "?maximum": -1.0,
            "?exclusiveMaximum": -1.0,
            "?minimum": -1.0,
            "?exclusiveMinimum": -1.0,
            "?maxLength": "$nonNegativeInteger",
            "?minLength": "$nonNegativeInteger",
            "?pattern": "$REGEX",
            "?maxItems": "$nonNegativeInteger",
            "?minItems": "$nonNegativeInteger",
            "?uniqueItems": true,
            "?maxContains": "$nonNegativeInteger",
            "?minContains": "$nonNegativeInteger",
            "?maxProperties": "$nonNegativeInteger",
            "?minProperties": "$nonNegativeInteger",
            "?required": "$stringArray",
            "?dependentRequired": {
              "": "$stringArray"
            }
          },
          "schemaArray": {
            "@": [
              "$Schema"
            ],
            ">=": 1
          },
          "applicator": {
            "?prefixItems": "$schemaArray",
            "?items": "$Schema",
            "?contains": "$Schema",
            "?additionalProperties": "$Schema",
            "?properties": {
              "": "$Schema"
            },
            "?patternProperties": {
              "$REGEX": "$Schema"
            },
            "?dependentSchemas": {
              "": "$Schema"
            },
            "?propertyNames": "$Schema",
            "?if": "$Schema",
            "?then": "$Schema",
            "?else": "$Schema",
            "?not": "$Schema",
            "?allOf": "$schemaArray",
            "?anyOf": "$schemaArray",
            "?oneOf": "$schemaArray"
          },
          "ObjectSchema": {
            "+": [
              "$core",
              "$applicator",
              "$unevaluated",
              "$validation",
              "$meta",
              "$format",
              "$content"
            ]
          },
          "Schema": {
            "|": [
              true,
              "$ObjectSchema"
            ]
          }
        },
        "~": "https://json-model.org/models/json-model"
      },
      "Schema": {
        "?$id": "$openapi#schema#URI-REFERENCE",
        "?$schema": "_https://json-schema.org/draft/2020-12/schema",
        "?$ref": "$openapi#schema#URI-REFERENCE",
        "?$anchor": "$openapi#schema#URI-REFERENCE",
        "?$dynamicRef": "$openapi#schema#URI-REFERENCE",
        "?$dynamicAnchor": "$openapi#schema#URI-REFERENCE",
        "?$vocabulary": {
          "$URL": true
        },
        "?$comment": "",
        "?$defs": {
          "": "$openapi#schema#Schema"
        },
        "?prefixItems": "$openapi#schema#schemaArray",
        "?items": "$openapi#schema#Schema",
        "?contains": "$openapi#schema#Schema",
        "?additionalProperties": "$openapi#schema#Schema",
        "?properties": {
          "": "$openapi#schema#Schema"
        },
        "?patternProperties": {
          "$REGEX": "$openapi#schema#Schema"
        },
        "?dependentSchemas": {
          "": "$openapi#schema#Schema"
        },
        "?propertyNames": "$openapi#schema#Schema",
        "?if": "$openapi#schema#Schema",
        "?then": "$openapi#schema#Schema",
        "?else": "$openapi#schema#Schema",
        "?not": "$openapi#schema#Schema",
        "?allOf": "$openapi#schema#schemaArray",
        "?anyOf": "$openapi#schema#schemaArray",
        "?oneOf": "$openapi#schema#schemaArray",
        "?unevaluatedItems": "$openapi#schema#Schema",
        "?unevaluatedProperties": "$openapi#schema#Schema",
        "?type": {
          "|": [
            "$openapi#schema#simpleTypes",
            "$openapi#schema#simpleTypesArray"
          ]
        },
        "?const": "$ANY",
        "?enum": [
          "$ANY"
        ],
        "?multipleOf": 1.0,
        "?maximum": -1.0,
        "?exclusiveMaximum": -1.0,
        "?minimum": -1.0,
        "?exclusiveMinimum": -1.0,
        "?maxLength": "$openapi#schema#nonNegativeInteger",
        "?minLength": "$openapi#schema#nonNegativeInteger",
        "?pattern": "$REGEX",
        "?maxItems": "$openapi#schema#nonNegativeInteger",
        "?minItems": "$openapi#schema#nonNegativeInteger",
        "?uniqueItems": true,
        "?maxContains": "$openapi#schema#nonNegativeInteger",
        "?minContains": "$openapi#schema#nonNegativeInteger",
        "?maxProperties": "$openapi#schema#nonNegativeInteger",
        "?minProperties": "$openapi#schema#nonNegativeInteger",
        "?required": "$openapi#schema#stringArray",
        "?dependentRequired": {
          "": "$openapi#schema#stringArray"
        },
        "?title": "",
        "?description": "",
        "?default": "$ANY",
        "?deprecated": true,
        "?readOnly": true,
        "?writeOnly": true,
        "?examples": [
          "$ANY"
        ],
        "?format": "",
        "?contentEncoding": "",
        "?contentMediaType": "",
        "?contentSchema": "$openapi#schema#Schema",
        "?discriminator": "$Discriminator",
        "?externalDocs": "$ExternalDocumentation",
        "?xml": "$XML",
        "#": "JsonModel 396"
      },
      "Discriminator": {
        "propertyName": "",
        "?mapping": {
          "": ""
        },
        "/^x\\-.*$/": "$ANY",
        "#": "JsonModel 397"
      },
      "XML": {
        "?name": "",
        "?namespace": "",
        "?prefix": "",
        "?attribute": true,
        "?wrapped": true,
        "/^x\\-.*$/": "$ANY",
        "#": "JsonModel 398"
      },
      "SecurityScheme": {
        "type": "",
        "?description": "",
        "name": "",
        "in": "",
        "scheme": "",
        "?bearerFormat": "",
        "flows": "$OAuthFlows",
        "openIdConnectUrl": "",
        "/^x\\-.*$/": "$ANY",
        "#": "JsonModel 399"
      },
      "OAuthFlows": {
        "?implicit": "$OAuthFlow",
        "?password": "$OAuthFlow",
        "?clientCredentials": "$OAuthFlow",
        "?authorizationCode": "$OAuthFlow",
        "/^x\\-.*$/": "$ANY",
        "#": "JsonModel 400"
      },
      "OAuthFlow": {
        "authorizationUrl": "",
        "tokenUrl": "",
        "?refreshUrl": "",
        "scopes": {
          "": ""
        },
        "/^x\\-.*$/": "$ANY",
        "#": "JsonModel 401"
      },
      "SecurityRequirement": {
        "": [
          ""
        ],
        "#": "JsonModel 402"
      },
      "Extension": {
        "/^x\\-.*$/": "$ANY",
        "#": "JsonModel 403"
      },
      "#": "Symbol 369",
      "": "https://json-model.org/models/openapi-310"
    },
    "@": "$OpenAPI",
    "~": "https://json-model.org/models/json-model"
  },
  {
    "openapi": "",
    "info": "$Info",
    "?jsonSchemaDialect": "",
    "?servers": [
      "$Server"
    ],
    "?paths": "$Paths",
    "?webhooks": {
      "": {
        "|": [
          "$PathItem",
          "$Reference"
        ]
      }
    },
    "?component": "$Components",
    "?security": "$SecurityRequirement",
    "?tags": [
      "$Tag"
    ],
    "?externalDocs": "$ExternalDocumentation",
    "/^x\\-.*$/": "$ANY",
    "#": "JsonModel 370"
  },
  {
    "title": "",
    "?summary": "",
    "?description": "",
    "?termsOfService": "",
    "?contact": "$Contact",
    "?license": "$License",
    "version": "",
    "/^x\\-.*$/": "$ANY",
    "#": "JsonModel 371"
  },
  {
    "?name": "",
    "?url": "$URL",
    "?email": "",
    "/^x\\-.*$/": "$ANY",
    "#": "JsonModel 372"
  },
  {
    "|": [
      {
        "name": "",
        "identifier": "",
        "/^x\\-.*$/": "$ANY"
      },
      {
        "name": "",
        "url": "$URL",
        "/^x\\-.*$/": "$ANY"
      }
    ],
    "#": "JsonModel 373"
  },
  {
    "url": "$URL",
    "?description": "",
    "?variables": {
      "": "$ServerVariable"
    },
    "/^x\\-.*$/": "$ANY",
    "#": "JsonModel 374"
  },
  {
    "?enum": [
      ""
    ],
    "default": "",
    "?description": "",
    "/^x\\-.*$/": "$ANY",
    "#": "JsonModel 375"
  },
  {
    "?schemas": {
      "": "$Schema"
    },
    "?responses": {
      "": {
        "|": [
          "$Response",
          "$Reference"
        ]
      }
    },
    "?parameters": {
      "": {
        "|": [
          "$Parameter",
          "$Reference"
        ]
      }
    },
    "?examples": {
      "": {
        "|": [
          "$Example",
          "$Reference"
        ]
      }
    },
    "?requestBodies": {
      "": {
        "|": [
          "$RequestBody",
          "$Reference"
        ]
      }
    },
    "?headers": {
      "": {
        "|": [
          "$Header",
          "$Reference"
        ]
      }
    },
    "?securitySchemes": {
      "": {
        "|": [
          "$SecurityScheme",
          "$Reference"
        ]
      }
    },
    "?links": {
      "": {
        "|": [
          "$Link",
          "$Reference"
        ]
      }
    },
    "?callbacks": {
      "": {
        "|": [
          "$Callback",
          "$Reference"
        ]
      }
    },
    "?pathItems": {
      "": {
        "|": [
          "$PathItem",
          "$Reference"
        ]
      }
    },
    "/^x\\-.*$/": "$ANY",
    "#": "JsonModel 376"
  },
  {
    "/^//": "$PathItem",
    "/^x\\-.*$/": "$ANY",
    "#": "JsonModel 377"
  },
  {
    "?$ref": "",
    "?summary": "",
    "?description": "",
    "?get": "$Operation",
    "?put": "$Operation",
    "?post": "$Operation",
    "?options": "$Operation",
    "?head": "$Operation",
    "?patch": "$Operation",
    "?trace": "$Operation",
    "?servers": "$Operation",
    "?parameters": {
      "": {
        "|": [
          "$Parameter",
          "$Reference"
        ]
      }
    },
    "/^x\\-.*$/": "$ANY",
    "#": "JsonModel 378"
  },
  {
    "?tags": [
      ""
    ],
    "?summary": "",
    "?description": "",
    "?externalDocs": "$ExternalDocumentation",
    "?operationId": "",
    "?parameters": {
      "": {
        "|": [
          "$Parameter",
          "$Reference"
        ]
      }
    },
    "?requestBody": {
      "": {
        "|": [
          "$RequestBody",
          "$Reference"
        ]
      }
    },
    "?responses": "$Responses",
    "?callbacks": {
      "": {
        "|": [
          "$Callback",
          "$Reference"
        ]
      }
    },
    "?deprecated": true,
    "?security": [
      "$SecurityRequirement"
    ],
    "?servers": [
      "$Server"
    ],
    "/^x\\-.*$/": "$ANY",
    "#": "JsonModel 379"
  },
  {
    "?description": "",
    "url": "$URL",
    "/^x\\-.*$/": "$ANY",
    "#": "JsonModel 380"
  },
  {
    "?description": "",
    "?required": true,
    "?deprecated": true,
    "?allowEmptyValue": true,
    "?style": {
      "|": [
        "matrix",
        "label",
        "form",
        "simple",
        "spaceDelimited",
        "pipeDelimited",
        "deepObject"
      ]
    },
    "?explode": true,
    "?allowReserved": true,
    "?schema": "$Schema",
    "?example": "$ANY",
    "?examples": {
      "": {
        "|": [
          "$Example",
          "$Reference"
        ]
      }
    },
    "?content": {
      "": "$MediaType"
    },
    "/^x\\-.*$/": "$ANY",
    "#": "JsonModel 381"
  },
  {
    "name": "",
    "in": {
      "|": [
        "query",
        "header",
        "path",
        "cookie"
      ]
    },
    "?description": "",
    "?required": true,
    "?deprecated": true,
    "?allowEmptyValue": true,
    "?style": {
      "|": [
        "matrix",
        "label",
        "form",
        "simple",
        "spaceDelimited",
        "pipeDelimited",
        "deepObject"
      ]
    },
    "?explode": true,
    "?allowReserved": true,
    "?schema": "$Schema",
    "?example": "$ANY",
    "?examples": {
      "": {
        "|": [
          "$Example",
          "$Reference"
        ]
      }
    },
    "?content": {
      "": "$MediaType"
    },
    "/^x\\-.*$/": "$ANY",
    "#": "JsonModel 382"
  },
  {
    "?description": "",
    "?content": {
      "": "$MediaType"
    },
    "?required": true,
    "/^x\\-.*$/": "$ANY",
    "#": "JsonModel 383"
  },
  {
    "?schema": "$Schema",
    "?example": "$ANY",
    "?examples": {
      "": {
        "|": [
          "$Example",
          "$Reference"
        ]
      }
    },
    "?encoding": {
      "": "$Encoding"
    },
    "/^x\\-.*$/": "$ANY",
    "#": "JsonModel 384"
  },
  {
    "?contentType": "",
    "?headers": {
      "": {
        "|": [
          "$Header",
          "$Reference"
        ]
      }
    },
    "?style": "",
    "?explode": true,
    "?allowReserved": true,
    "/^x\\-.*$/": "$ANY",
    "#": "JsonModel 385"
  },
  {
    "/^[1-5](\\d\\d|XX)$/": {
      "|": [
        "$Response",
        "$Reference"
      ]
    },
    "?default": {
      "|": [
        "$Response",
        "$Reference"
      ]
    },
    "/^x\\-.*$/": "$ANY",
    "#": "JsonModel 386"
  },
  {
    "?description": "",
    "?headers": {
      "": {
        "|": [
          "$Header",
          "$Reference"
        ]
      }
    },
    "?content": {
      "": "$MediaType"
    },
    "?links": {
      "": {
        "|": [
          "$Link",
          "$Reference"
        ]
      }
    },
    "/^x\\-.*$/": "$ANY",
    "#": "JsonModel 387"
  },
  {
    "$Expression": {
      "|": [
        "$PathItem",
        "$Reference"
      ]
    },
    "/^x\\-.*$/": "$ANY",
    "#": "JsonModel 388"
  },
  {
    "?summary": "",
    "?description": "",
    "?value": "$ANY",
    "?externalValue": "",
    "/^x\\-.*$/": "$ANY",
    "#": "JsonModel 389"
  },
  "/\\{.*\\}/",
  {
    "|": [
      {
        "operationRef": "",
        "?parameters": {
          "": "$ANY"
        },
        "?requestBody": "$ANY",
        "?description": "",
        "?server": "$Server",
        "/^x\\-.*$/": "$ANY"
      },
      {
        "operationId": "",
        "?parameters": {
          "": "$ANY"
        },
        "?requestBody": "$ANY",
        "?description": "",
        "?server": "$Server",
        "/^x\\-.*$/": "$ANY"
      }
    ],
    "#": "JsonModel 391"
  },
  "$parameterShare",
  {
    "name": "",
    "?description": "",
    "?externalDocs": "$ExternalDocumentation",
    "/^x\\-.*$/": "$ANY",
    "#": "JsonModel 393"
  },
  {
    "_$ref": "",
    "?summary": "",
    "?description": "",
    "#": "JsonModel 394"
  },
  {
    "?$id": "$openapi#schema#URI-REFERENCE",
    "?$schema": "_https://json-schema.org/draft/2020-12/schema",
    "?$ref": "$openapi#schema#URI-REFERENCE",
    "?$anchor": "$openapi#schema#URI-REFERENCE",
    "?$dynamicRef": "$openapi#schema#URI-REFERENCE",
    "?$dynamicAnchor": "$openapi#schema#URI-REFERENCE",
    "?$vocabulary": {
      "$URL": true
    },
    "?$comment": "",
    "?$defs": {
      "": "$openapi#schema#Schema"
    },
    "?prefixItems": "$openapi#schema#schemaArray",
    "?items": "$openapi#schema#Schema",
    "?contains": "$openapi#schema#Schema",
    "?additionalProperties": "$openapi#schema#Schema",
    "?properties": {
      "": "$openapi#schema#Schema"
    },
    "?patternProperties": {
      "$REGEX": "$openapi#schema#Schema"
    },
    "?dependentSchemas": {
      "": "$openapi#schema#Schema"
    },
    "?propertyNames": "$openapi#schema#Schema",
    "?if": "$openapi#schema#Schema",
    "?then": "$openapi#schema#Schema",
    "?else": "$openapi#schema#Schema",
    "?not": "$openapi#schema#Schema",
    "?allOf": "$openapi#schema#schemaArray",
    "?anyOf": "$openapi#schema#schemaArray",
    "?oneOf": "$openapi#schema#schemaArray",
    "?unevaluatedItems": "$openapi#schema#Schema",
    "?unevaluatedProperties": "$openapi#schema#Schema",
    "?type": {
      "|": [
        "$openapi#schema#simpleTypes",
        "$openapi#schema#simpleTypesArray"
      ]
    },
    "?const": "$ANY",
    "?enum": [
      "$ANY"
    ],
    "?multipleOf": 1.0,
    "?maximum": -1.0,
    "?exclusiveMaximum": -1.0,
    "?minimum": -1.0,
    "?exclusiveMinimum": -1.0,
    "?maxLength": "$openapi#schema#nonNegativeInteger",
    "?minLength": "$openapi#schema#nonNegativeInteger",
    "?pattern": "$REGEX",
    "?maxItems": "$openapi#schema#nonNegativeInteger",
    "?minItems": "$openapi#schema#nonNegativeInteger",
    "?uniqueItems": true,
    "?maxContains": "$openapi#schema#nonNegativeInteger",
    "?minContains": "$openapi#schema#nonNegativeInteger",
    "?maxProperties": "$openapi#schema#nonNegativeInteger",
    "?minProperties": "$openapi#schema#nonNegativeInteger",
    "?required": "$openapi#schema#stringArray",
    "?dependentRequired": {
      "": "$openapi#schema#stringArray"
    },
    "?title": "",
    "?description": "",
    "?default": "$ANY",
    "?deprecated": true,
    "?readOnly": true,
    "?writeOnly": true,
    "?examples": [
      "$ANY"
    ],
    "?format": "",
    "?contentEncoding": "",
    "?contentMediaType": "",
    "?contentSchema": "$openapi#schema#Schema",
    "?discriminator": "$Discriminator",
    "?externalDocs": "$ExternalDocumentation",
    "?xml": "$XML",
    "#": "JsonModel 396"
  },
  {
    "propertyName": "",
    "?mapping": {
      "": ""
    },
    "/^x\\-.*$/": "$ANY",
    "#": "JsonModel 397"
  },
  {
    "?name": "",
    "?namespace": "",
    "?prefix": "",
    "?attribute": true,
    "?wrapped": true,
    "/^x\\-.*$/": "$ANY",
    "#": "JsonModel 398"
  },
  {
    "type": "",
    "?description": "",
    "name": "",
    "in": "",
    "scheme": "",
    "?bearerFormat": "",
    "flows": "$OAuthFlows",
    "openIdConnectUrl": "",
    "/^x\\-.*$/": "$ANY",
    "#": "JsonModel 399"
  },
  {
    "?implicit": "$OAuthFlow",
    "?password": "$OAuthFlow",
    "?clientCredentials": "$OAuthFlow",
    "?authorizationCode": "$OAuthFlow",
    "/^x\\-.*$/": "$ANY",
    "#": "JsonModel 400"
  },
  {
    "authorizationUrl": "",
    "tokenUrl": "",
    "?refreshUrl": "",
    "scopes": {
      "": ""
    },
    "/^x\\-.*$/": "$ANY",
    "#": "JsonModel 401"
  },
  {
    "": [
      ""
    ],
    "#": "JsonModel 402"
  },
  {
    "/^x\\-.*$/": "$ANY",
    "#": "JsonModel 403"
  },
  {
    "@": "$Schema",
    "#": "JsonModel 404 (JSON_MODEL_LOOSE_INT JSON_MODEL_LOOSE_FLOAT)",
    "$": {
      "URI-REFERENCE": "",
      "URI": "$URL",
      "core": {
        "?$id": "$URI-REFERENCE",
        "?$schema": "_https://json-schema.org/draft/2020-12/schema",
        "?$ref": "$URI-REFERENCE",
        "?$anchor": "$URI-REFERENCE",
        "?$dynamicRef": "$URI-REFERENCE",
        "?$dynamicAnchor": "$URI-REFERENCE",
        "?$vocabulary": {
          "$URL": true
        },
        "?$comment": "",
        "?$defs": {
          "": "$Schema"
        },
        "#": "JsonModel 407 (JSON_MODEL_LOOSE_INT JSON_MODEL_LOOSE_FLOAT)"
      },
      "meta": {
        "?title": "",
        "?description": "",
        "?default": "$ANY",
        "?deprecated": true,
        "?readOnly": true,
        "?writeOnly": true,
        "?examples": [
          "$ANY"
        ],
        "#": "JsonModel 408 (JSON_MODEL_LOOSE_INT JSON_MODEL_LOOSE_FLOAT)"
      },
      "content": {
        "?contentEncoding": "",
        "?contentMediaType": "",
        "?contentSchema": "$Schema",
        "#": "JsonModel 409 (JSON_MODEL_LOOSE_INT JSON_MODEL_LOOSE_FLOAT)"
      },
      "unevaluated": {
        "?unevaluatedItems": "$Schema",
        "?unevaluatedProperties": "$Schema",
        "#": "JsonModel 410 (JSON_MODEL_LOOSE_INT JSON_MODEL_LOOSE_FLOAT)"
      },
      "format": {
        "?format": "",
        "#": "JsonModel 411 (JSON_MODEL_LOOSE_INT JSON_MODEL_LOOSE_FLOAT)"
      },
      "simpleTypes": {
        "|": [
          "array",
          "boolean",
          "integer",
          "null",
          "number",
          "object",
          "string"
        ],
        "#": "JsonModel 412 (JSON_MODEL_LOOSE_INT JSON_MODEL_LOOSE_FLOAT)"
      },
      "simpleTypesArray": {
        "@": [
          "$simpleTypes"
        ],
        ">=": 1,
        "!": true,
        "#": "JsonModel 413 (JSON_MODEL_LOOSE_INT JSON_MODEL_LOOSE_FLOAT)"
      },
      "stringArray": {
        "@": [
          ""
        ],
        "!": true,
        "#": "JsonModel 414 (JSON_MODEL_LOOSE_INT JSON_MODEL_LOOSE_FLOAT)"
      },
      "nonNegativeInteger": 0,
      "validation": {
        "?type": {
          "|": [
            "$simpleTypes",
            "$simpleTypesArray"
          ]
        },
        "?const": "$ANY",
        "?enum": [
          "$ANY"
        ],
        "?multipleOf": 1.0,
        "?maximum": -1.0,
        "?exclusiveMaximum": -1.0,
        "?minimum": -1.0,
        "?exclusiveMinimum": -1.0,
        "?maxLength": "$nonNegativeInteger",
        "?minLength": "$nonNegativeInteger",
        "?pattern": "$REGEX",
        "?maxItems": "$nonNegativeInteger",
        "?minItems": "$nonNegativeInteger",
        "?uniqueItems": true,
        "?maxContains": "$nonNegativeInteger",
        "?minContains": "$nonNegativeInteger",
        "?maxProperties": "$nonNegativeInteger",
        "?minProperties": "$nonNegativeInteger",
        "?required": "$stringArray",
        "?dependentRequired": {
          "": "$stringArray"
        },
        "#": "JsonModel 416 (JSON_MODEL_LOOSE_INT JSON_MODEL_LOOSE_FLOAT)"
      },
      "schemaArray": {
        "@": [
          "$Schema"
        ],
        ">=": 1,
        "#": "JsonModel 417 (JSON_MODEL_LOOSE_INT JSON_MODEL_LOOSE_FLOAT)"
      },
      "applicator": {
        "?prefixItems": "$schemaArray",
        "?items": "$Schema",
        "?contains": "$Schema",
        "?additionalProperties": "$Schema",
        "?properties": {
          "": "$Schema"
        },
        "?patternProperties": {
          "$REGEX": "$Schema"
        },
        "?dependentSchemas": {
          "": "$Schema"
        },
        "?propertyNames": "$Schema",
        "?if": "$Schema",
        "?then": "$Schema",
        "?else": "$Schema",
        "?not": "$Schema",
        "?allOf": "$schemaArray",
        "?anyOf": "$schemaArray",
        "?oneOf": "$schemaArray",
        "#": "JsonModel 418 (JSON_MODEL_LOOSE_INT JSON_MODEL_LOOSE_FLOAT)"
      },
      "ObjectSchema": {
        "?$id": "$URI-REFERENCE",
        "?$schema": "_https://json-schema.org/draft/2020-12/schema",
        "?$ref": "$URI-REFERENCE",
        "?$anchor": "$URI-REFERENCE",
        "?$dynamicRef": "$URI-REFERENCE",
        "?$dynamicAnchor": "$URI-REFERENCE",
        "?$vocabulary": {
          "$URL": true
        },
        "?$comment": "",
        "?$defs": {
          "": "$Schema"
        },
        "?prefixItems": "$schemaArray",
        "?items": "$Schema",
        "?contains": "$Schema",
        "?additionalProperties": "$Schema",
        "?properties": {
          "": "$Schema"
        },
        "?patternProperties": {
          "$REGEX": "$Schema"
        },
        "?dependentSchemas": {
          "": "$Schema"
        },
        "?propertyNames": "$Schema",
        "?if": "$Schema",
        "?then": "$Schema",
        "?else": "$Schema",
        "?not": "$Schema",
        "?allOf": "$schemaArray",
        "?anyOf": "$schemaArray",
        "?oneOf": "$schemaArray",
        "?unevaluatedItems": "$Schema",
        "?unevaluatedProperties": "$Schema",
        "?type": {
          "|": [
            "$simpleTypes",
            "$simpleTypesArray"
          ]
        },
        "?const": "$ANY",
        "?enum": [
          "$ANY"
        ],
        "?multipleOf": 1.0,
        "?maximum": -1.0,
        "?exclusiveMaximum": -1.0,
        "?minimum": -1.0,
        "?exclusiveMinimum": -1.0,
        "?maxLength": "$nonNegativeInteger",
        "?minLength": "$nonNegativeInteger",
        "?pattern": "$REGEX",
        "?maxItems": "$nonNegativeInteger",
        "?minItems": "$nonNegativeInteger",
        "?uniqueItems": true,
        "?maxContains": "$nonNegativeInteger",
        "?minContains": "$nonNegativeInteger",
        "?maxProperties": "$nonNegativeInteger",
        "?minProperties": "$nonNegativeInteger",
        "?required": "$stringArray",
        "?dependentRequired": {
          "": "$stringArray"
        },
        "?title": "",
        "?description": "",
        "?default": "$ANY",
        "?deprecated": true,
        "?readOnly": true,
        "?writeOnly": true,
        "?examples": [
          "$ANY"
        ],
        "?format": "",
        "?contentEncoding": "",
        "?contentMediaType": "",
        "?contentSchema": "$Schema",
        "#": "JsonModel 419 (JSON_MODEL_LOOSE_INT JSON_MODEL_LOOSE_FLOAT)"
      },
      "Schema": {
        "|": [
          true,
          "$ObjectSchema"
        ],
        "#": "JsonModel 420 (JSON_MODEL_LOOSE_INT JSON_MODEL_LOOSE_FLOAT)"
      },
      "#": "Symbol 404",
      "": "https://json-model.org/models/json-schema-draft-2020-12"
    },
    "~": "https://json-model.org/models/json-model"
  },
  "",
  "$URL",
  {
    "?$id": "$URI-REFERENCE",
    "?$schema": "_https://json-schema.org/draft/2020-12/schema",
    "?$ref": "$URI-REFERENCE",
    "?$anchor": "$URI-REFERENCE",
    "?$dynamicRef": "$URI-REFERENCE",
    "?$dynamicAnchor": "$URI-REFERENCE",
    "?$vocabulary": {
      "$URL": true
    },
    "?$comment": "",
    "?$defs": {
      "": "$Schema"
    },
    "#": "JsonModel 407 (JSON_MODEL_LOOSE_INT JSON_MODEL_LOOSE_FLOAT)"
  },
  {
    "?title": "",
    "?description": "",
    "?default": "$ANY",
    "?deprecated": true,
    "?readOnly": true,
    "?writeOnly": true,
    "?examples": [
      "$ANY"
    ],
    "#": "JsonModel 408 (JSON_MODEL_LOOSE_INT JSON_MODEL_LOOSE_FLOAT)"
  },
  {
    "?contentEncoding": "",
    "?contentMediaType": "",
    "?contentSchema": "$Schema",
    "#": "JsonModel 409 (JSON_MODEL_LOOSE_INT JSON_MODEL_LOOSE_FLOAT)"
  },
  {
    "?unevaluatedItems": "$Schema",
    "?unevaluatedProperties": "$Schema",
    "#": "JsonModel 410 (JSON_MODEL_LOOSE_INT JSON_MODEL_LOOSE_FLOAT)"
  },
  {
    "?format": "",
    "#": "JsonModel 411 (JSON_MODEL_LOOSE_INT JSON_MODEL_LOOSE_FLOAT)"
  },
  {
    "|": [
      "array",
      "boolean",
      "integer",
      "null",
      "number",
      "object",
      "string"
    ],
    "#": "JsonModel 412 (JSON_MODEL_LOOSE_INT JSON_MODEL_LOOSE_FLOAT)"
  },
  {
    "@": [
      "$simpleTypes"
    ],
    ">=": 1,
    "!": true,
    "#": "JsonModel 413 (JSON_MODEL_LOOSE_INT JSON_MODEL_LOOSE_FLOAT)"
  },
  {
    "@": [
      ""
    ],
    "!": true,
    "#": "JsonModel 414 (JSON_MODEL_LOOSE_INT JSON_MODEL_LOOSE_FLOAT)"
  },
  0,
  {
    "?type": {
      "|": [
        "$simpleTypes",
        "$simpleTypesArray"
      ]
    },
    "?const": "$ANY",
    "?enum": [
      "$ANY"
    ],
    "?multipleOf": 1.0,
    "?maximum": -1.0,
    "?exclusiveMaximum": -1.0,
    "?minimum": -1.0,
    "?exclusiveMinimum": -1.0,
    "?maxLength": "$nonNegativeInteger",
    "?minLength": "$nonNegativeInteger",
    "?pattern": "$REGEX",
    "?maxItems": "$nonNegativeInteger",
    "?minItems": "$nonNegativeInteger",
    "?uniqueItems": true,
    "?maxContains": "$nonNegativeInteger",
    "?minContains": "$nonNegativeInteger",
    "?maxProperties": "$nonNegativeInteger",
    "?minProperties": "$nonNegativeInteger",
    "?required": "$stringArray",
    "?dependentRequired": {
      "": "$stringArray"
    },
    "#": "JsonModel 416 (JSON_MODEL_LOOSE_INT JSON_MODEL_LOOSE_FLOAT)"
  },
  {
    "@": [
      "$Schema"
    ],
    ">=": 1,
    "#": "JsonModel 417 (JSON_MODEL_LOOSE_INT JSON_MODEL_LOOSE_FLOAT)"
  },
  {
    "?prefixItems": "$schemaArray",
    "?items": "$Schema",
    "?contains": "$Schema",
    "?additionalProperties": "$Schema",
    "?properties": {
      "": "$Schema"
    },
    "?patternProperties": {
      "$REGEX": "$Schema"
    },
    "?dependentSchemas": {
      "": "$Schema"
    },
    "?propertyNames": "$Schema",
    "?if": "$Schema",
    "?then": "$Schema",
    "?else": "$Schema",
    "?not": "$Schema",
    "?allOf": "$schemaArray",
    "?anyOf": "$schemaArray",
    "?oneOf": "$schemaArray",
    "#": "JsonModel 418 (JSON_MODEL_LOOSE_INT JSON_MODEL_LOOSE_FLOAT)"
  },
  {
    "?$id": "$URI-REFERENCE",
    "?$schema": "_https://json-schema.org/draft/2020-12/schema",
    "?$ref": "$URI-REFERENCE",
    "?$anchor": "$URI-REFERENCE",
    "?$dynamicRef": "$URI-REFERENCE",
    "?$dynamicAnchor": "$URI-REFERENCE",
    "?$vocabulary": {
      "$URL": true
    },
    "?$comment": "",
    "?$defs": {
      "": "$Schema"
    },
    "?prefixItems": "$schemaArray",
    "?items": "$Schema",
    "?contains": "$Schema",
    "?additionalProperties": "$Schema",
    "?properties": {
      "": "$Schema"
    },
    "?patternProperties": {
      "$REGEX": "$Schema"
    },
    "?dependentSchemas": {
      "": "$Schema"
    },
    "?propertyNames": "$Schema",
    "?if": "$Schema",
    "?then": "$Schema",
    "?else": "$Schema",
    "?not": "$Schema",
    "?allOf": "$schemaArray",
    "?anyOf": "$schemaArray",
    "?oneOf": "$schemaArray",
    "?unevaluatedItems": "$Schema",
    "?unevaluatedProperties": "$Schema",
    "?type": {
      "|": [
        "$simpleTypes",
        "$simpleTypesArray"
      ]
    },
    "?const": "$ANY",
    "?enum": [
      "$ANY"
    ],
    "?multipleOf": 1.0,
    "?maximum": -1.0,
    "?exclusiveMaximum": -1.0,
    "?minimum": -1.0,
    "?exclusiveMinimum": -1.0,
    "?maxLength": "$nonNegativeInteger",
    "?minLength": "$nonNegativeInteger",
    "?pattern": "$REGEX",
    "?maxItems": "$nonNegativeInteger",
    "?minItems": "$nonNegativeInteger",
    "?uniqueItems": true,
    "?maxContains": "$nonNegativeInteger",
    "?minContains": "$nonNegativeInteger",
    "?maxProperties": "$nonNegativeInteger",
    "?minProperties": "$nonNegativeInteger",
    "?required": "$stringArray",
    "?dependentRequired": {
      "": "$stringArray"
    },
    "?title": "",
    "?description": "",
    "?default": "$ANY",
    "?deprecated": true,
    "?readOnly": true,
    "?writeOnly": true,
    "?examples": [
      "$ANY"
    ],
    "?format": "",
    "?contentEncoding": "",
    "?contentMediaType": "",
    "?contentSchema": "$Schema",
    "#": "JsonModel 419 (JSON_MODEL_LOOSE_INT JSON_MODEL_LOOSE_FLOAT)"
  },
  {
    "|": [
      true,
      "$ObjectSchema"
    ],
    "#": "JsonModel 420 (JSON_MODEL_LOOSE_INT JSON_MODEL_LOOSE_FLOAT)"
  }
]
