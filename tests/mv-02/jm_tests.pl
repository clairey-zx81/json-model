#! /usr/bin/perl
#
# Generated by JSON Model Compiler version 2.0b1
# see https://github.com/clairey-zx81/json-model
#
use strict;
use warnings;
use re::engine::RE2;
use JSON::JsonModel;
use constant JMC_VERSION => '2';


my %check_model_map;

# check $ (.)
sub json_model_1($$$)
{
    my ($val, $path, $rep) = @_;
    my $res;
    # .
    $res = jm_is_array($val);
    if ($res)
    {
        for my $arr_0_idx (0 .. $#$val)
        {
            my $arr_0_item = $$val[$arr_0_idx];
            # .0
            # .0.'|'.0
            $res = jm_is_string($arr_0_item);
            if (! $res)
            {
                # .0.'|'.1
                $res = jm_is_array($arr_0_item) && scalar @$arr_0_item == 2;
                if ($res)
                {
                    # .0.'|'.1.0
                    $res = jm_is_boolean($$arr_0_item[0]);
                    if ($res)
                    {
                        # .0.'|'.1.1
                        $res = 1;
                    }
                }
                if (! $res)
                {
                    # .0.'|'.2
                    $res = jm_is_array($arr_0_item) && scalar @$arr_0_item == 3;
                    if ($res)
                    {
                        # .0.'|'.2.0
                        $res = jm_is_boolean($$arr_0_item[0]);
                        if ($res)
                        {
                            # .0.'|'.2.1
                            $res = jm_is_string($$arr_0_item[1]);
                            if ($res)
                            {
                                # .0.'|'.2.2
                                $res = 1;
                            }
                        }
                    }
                }
            }
            if (! $res)
            {
                last;
            }
        }
    }
    return $res;
}


# initialization of global variables

our $initialized = 0;

sub check_model_init()
{
    if (!$initialized)
    {
        $initialized = 1;
        %check_model_map = (
            '' => \&json_model_1,
        );
    }
}

sub check_model_free()
{
    if ($initialized)
    {
        $initialized = 0;
        %check_model_map = ();
    }
}

sub check_model($$$)
{
    my ($json, $name, $rep) = @_;
    die "unexpected model name \"$name\"" unless exists $check_model_map{$name};
    my $path = defined $rep ? [] : undef;
    return $check_model_map{$name}($json, $path, $rep);
}

#
# SCRIPT EXECUTION
#
check_model_init();
jm_main(\&check_model, \%check_model_map, JMC_VERSION);
check_model_free();
