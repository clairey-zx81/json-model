#! /bin/env node
// we may need require to load re2
import { createRequire } from 'node:module';
const require = createRequire(import.meta.url);
//
// Generated by JSON Model Compiler version 2.0b0
// see https://github.com/clairey-zx81/json-model
//
import * as runtime from "json_model_runtime"
const JSON_MODEL_VERSION = "2.0b0";

let _jm_map_0 = new Map()
var check_model_map = new Map()

// check $position (.'$position')
function json_model_2(val, path, rep)
{
    let res;
    // .'$position'
    // .'$position'.'@'
    res = Array.isArray(val);
    if (res)
    {
        for (let arr_0_idx = 0; arr_0_idx < val.length; arr_0_idx++)
        {
            let arr_0_item = val[arr_0_idx]
            let arr_0_lpath = path ? path.concat([arr_0_idx]) : null;
            // .'$position'.'@'.0
            res = (typeof arr_0_item === 'number' || arr_0_item instanceof Number);
            if (! res)
            {
                rep !== null && rep.push(["not a -1.0 loose float [.'$position'.'@'.0]", (path ? arr_0_lpath : null)])
            }
            if (! res)
            {
                break;
            }
        }
    }
    if (! res)
    {
        rep !== null && rep.push(["not array or unexpected array [.'$position'.'@']", path])
    }
    if (res)
    {
        let ival_0 = val.length;
        res = ival_0 <= 3 && ival_0 >= 2;
    }
    if (! res)
    {
        rep !== null && rep.push(["constraints failed [.'$position']", path])
    }
    return res;
}

// check $coord_array (.'$coord_array')
function json_model_3(val, path, rep)
{
    let res;
    // .'$coord_array'
    // .'$coord_array'.'@'
    res = Array.isArray(val);
    if (res)
    {
        for (let arr_1_idx = 0; arr_1_idx < val.length; arr_1_idx++)
        {
            let arr_1_item = val[arr_1_idx]
            let arr_1_lpath = path ? path.concat([arr_1_idx]) : null;
            // .'$coord_array'.'@'.0
            res = json_model_2(arr_1_item, (path ? arr_1_lpath : null), rep);
            if (! res)
            {
                rep !== null && rep.push(["unexpected $position [.'$coord_array'.'@'.0]", (path ? arr_1_lpath : null)])
            }
            if (! res)
            {
                break;
            }
        }
    }
    if (! res)
    {
        rep !== null && rep.push(["not array or unexpected array [.'$coord_array'.'@']", path])
    }
    if (res)
    {
        let ival_1 = val.length;
        res = ival_1 >= 2;
    }
    if (! res)
    {
        rep !== null && rep.push(["constraints failed [.'$coord_array']", path])
    }
    return res;
}

// check $linear_ring (.'$linear_ring')
function json_model_4(val, path, rep)
{
    let res;
    // .'$linear_ring'
    // .'$linear_ring'.'@'
    res = Array.isArray(val);
    if (res)
    {
        for (let arr_2_idx = 0; arr_2_idx < val.length; arr_2_idx++)
        {
            let arr_2_item = val[arr_2_idx]
            let arr_2_lpath = path ? path.concat([arr_2_idx]) : null;
            // .'$linear_ring'.'@'.0
            res = json_model_2(arr_2_item, (path ? arr_2_lpath : null), rep);
            if (! res)
            {
                rep !== null && rep.push(["unexpected $position [.'$linear_ring'.'@'.0]", (path ? arr_2_lpath : null)])
            }
            if (! res)
            {
                break;
            }
        }
    }
    if (! res)
    {
        rep !== null && rep.push(["not array or unexpected array [.'$linear_ring'.'@']", path])
    }
    if (res)
    {
        let ival_2 = val.length;
        res = ival_2 >= 4;
    }
    if (! res)
    {
        rep !== null && rep.push(["constraints failed [.'$linear_ring']", path])
    }
    return res;
}

// object .'$Point'
function _jm_obj_0(val, path, rep)
{
    if (! (Object.prototype.toString.call(val) === '[object Object]'))
    {
        rep !== null && rep.push(["not an object [.'$Point']", path])
        return false;
    }
    let res;
    let must_count = 0;
    for(const [prop, pval] of Object.entries(val))
    {
        let lpath_0 = path ? path.concat([prop]) : null;
        if (prop == "type")
        {
            // handle must type property
            must_count += 1;
            // .'$Point'.type
            res = ((typeof pval === 'string' || pval instanceof String)) && pval == "Point";
            if (! res)
            {
                rep !== null && rep.push(["unexpected Point [.'$Point'.type]", (path ? lpath_0 : null)])
            }
            if (! res)
            {
                rep !== null && rep.push(["invalid mandatory prop value [.'$Point'.type]", (path ? lpath_0 : null)])
                return false;
            }
        }
        else if (prop == "coordinates")
        {
            // handle must coordinates property
            must_count += 1;
            // .'$Point'.coordinates
            res = json_model_2(pval, (path ? lpath_0 : null), rep);
            if (! res)
            {
                rep !== null && rep.push(["unexpected $position [.'$Point'.coordinates]", (path ? lpath_0 : null)])
            }
            if (! res)
            {
                rep !== null && rep.push(["invalid mandatory prop value [.'$Point'.coordinates]", (path ? lpath_0 : null)])
                return false;
            }
        }
        else if (prop == "bbox")
        {
            // handle may bbox property
            // .'$Point'.bbox
            res = Array.isArray(pval);
            if (res)
            {
                for (let arr_3_idx = 0; arr_3_idx < pval.length; arr_3_idx++)
                {
                    let arr_3_item = pval[arr_3_idx]
                    let arr_3_lpath = (path ? lpath_0 : null) ? (path ? lpath_0 : null).concat([arr_3_idx]) : null;
                    // .'$Point'.bbox.0
                    res = (typeof arr_3_item === 'number' || arr_3_item instanceof Number);
                    if (! res)
                    {
                        rep !== null && rep.push(["not a -1.0 loose float [.'$Point'.bbox.0]", ((path ? lpath_0 : null) ? arr_3_lpath : null)])
                    }
                    if (! res)
                    {
                        break;
                    }
                }
            }
            if (! res)
            {
                rep !== null && rep.push(["not array or unexpected array [.'$Point'.bbox]", (path ? lpath_0 : null)])
            }
            if (! res)
            {
                rep !== null && rep.push(["invalid optional prop value [.'$Point'.bbox]", (path ? lpath_0 : null)])
                return false;
            }
        }
        else
        {
            rep !== null && rep.push(["unexpected prop [.'$Point']", (path ? lpath_0 : null)])
            return false;
        }
    }
    if (must_count != 2)
    {
        if (rep !== null)
        {
            if (! val.hasOwnProperty("coordinates"))
            {
                rep !== null && rep.push(["missing mandatory prop <coordinates> [.'$Point']", path])
            }
            if (! val.hasOwnProperty("type"))
            {
                rep !== null && rep.push(["missing mandatory prop <type> [.'$Point']", path])
            }
        }
        return false;
    }
    return true;
}

// check $Point (.'$Point')
function json_model_5(val, path, rep)
{
    let res;
    // .'$Point'
    res = _jm_obj_0(val, path, rep);
    if (! res)
    {
        rep !== null && rep.push(["unexpected object [.'$Point']", path])
    }
    return res;
}

// object .'$MultiPoint'
function _jm_obj_1(val, path, rep)
{
    if (! (Object.prototype.toString.call(val) === '[object Object]'))
    {
        rep !== null && rep.push(["not an object [.'$MultiPoint']", path])
        return false;
    }
    let res;
    let must_count = 0;
    for(const [prop, pval] of Object.entries(val))
    {
        let lpath_1 = path ? path.concat([prop]) : null;
        if (prop == "type")
        {
            // handle must type property
            must_count += 1;
            // .'$MultiPoint'.type
            res = ((typeof pval === 'string' || pval instanceof String)) && pval == "MultiPoint";
            if (! res)
            {
                rep !== null && rep.push(["unexpected MultiPoint [.'$MultiPoint'.type]", (path ? lpath_1 : null)])
            }
            if (! res)
            {
                rep !== null && rep.push(["invalid mandatory prop value [.'$MultiPoint'.type]", (path ? lpath_1 : null)])
                return false;
            }
        }
        else if (prop == "coordinates")
        {
            // handle must coordinates property
            must_count += 1;
            // .'$MultiPoint'.coordinates
            res = Array.isArray(pval);
            if (res)
            {
                for (let arr_4_idx = 0; arr_4_idx < pval.length; arr_4_idx++)
                {
                    let arr_4_item = pval[arr_4_idx]
                    let arr_4_lpath = (path ? lpath_1 : null) ? (path ? lpath_1 : null).concat([arr_4_idx]) : null;
                    // .'$MultiPoint'.coordinates.0
                    res = json_model_2(arr_4_item, ((path ? lpath_1 : null) ? arr_4_lpath : null), rep);
                    if (! res)
                    {
                        rep !== null && rep.push(["unexpected $position [.'$MultiPoint'.coordinates.0]", ((path ? lpath_1 : null) ? arr_4_lpath : null)])
                    }
                    if (! res)
                    {
                        break;
                    }
                }
            }
            if (! res)
            {
                rep !== null && rep.push(["not array or unexpected array [.'$MultiPoint'.coordinates]", (path ? lpath_1 : null)])
            }
            if (! res)
            {
                rep !== null && rep.push(["invalid mandatory prop value [.'$MultiPoint'.coordinates]", (path ? lpath_1 : null)])
                return false;
            }
        }
        else if (prop == "bbox")
        {
            // handle may bbox property
            // .'$MultiPoint'.bbox
            res = Array.isArray(pval);
            if (res)
            {
                for (let arr_5_idx = 0; arr_5_idx < pval.length; arr_5_idx++)
                {
                    let arr_5_item = pval[arr_5_idx]
                    let arr_5_lpath = (path ? lpath_1 : null) ? (path ? lpath_1 : null).concat([arr_5_idx]) : null;
                    // .'$MultiPoint'.bbox.0
                    res = (typeof arr_5_item === 'number' || arr_5_item instanceof Number);
                    if (! res)
                    {
                        rep !== null && rep.push(["not a -1.0 loose float [.'$MultiPoint'.bbox.0]", ((path ? lpath_1 : null) ? arr_5_lpath : null)])
                    }
                    if (! res)
                    {
                        break;
                    }
                }
            }
            if (! res)
            {
                rep !== null && rep.push(["not array or unexpected array [.'$MultiPoint'.bbox]", (path ? lpath_1 : null)])
            }
            if (! res)
            {
                rep !== null && rep.push(["invalid optional prop value [.'$MultiPoint'.bbox]", (path ? lpath_1 : null)])
                return false;
            }
        }
        else
        {
            rep !== null && rep.push(["unexpected prop [.'$MultiPoint']", (path ? lpath_1 : null)])
            return false;
        }
    }
    if (must_count != 2)
    {
        if (rep !== null)
        {
            if (! val.hasOwnProperty("coordinates"))
            {
                rep !== null && rep.push(["missing mandatory prop <coordinates> [.'$MultiPoint']", path])
            }
            if (! val.hasOwnProperty("type"))
            {
                rep !== null && rep.push(["missing mandatory prop <type> [.'$MultiPoint']", path])
            }
        }
        return false;
    }
    return true;
}

// check $MultiPoint (.'$MultiPoint')
function json_model_6(val, path, rep)
{
    let res;
    // .'$MultiPoint'
    res = _jm_obj_1(val, path, rep);
    if (! res)
    {
        rep !== null && rep.push(["unexpected object [.'$MultiPoint']", path])
    }
    return res;
}

// object .'$LineString'
function _jm_obj_2(val, path, rep)
{
    if (! (Object.prototype.toString.call(val) === '[object Object]'))
    {
        rep !== null && rep.push(["not an object [.'$LineString']", path])
        return false;
    }
    let res;
    let must_count = 0;
    for(const [prop, pval] of Object.entries(val))
    {
        let lpath_2 = path ? path.concat([prop]) : null;
        if (prop == "type")
        {
            // handle must type property
            must_count += 1;
            // .'$LineString'.type
            res = ((typeof pval === 'string' || pval instanceof String)) && pval == "LineString";
            if (! res)
            {
                rep !== null && rep.push(["unexpected LineString [.'$LineString'.type]", (path ? lpath_2 : null)])
            }
            if (! res)
            {
                rep !== null && rep.push(["invalid mandatory prop value [.'$LineString'.type]", (path ? lpath_2 : null)])
                return false;
            }
        }
        else if (prop == "coordinates")
        {
            // handle must coordinates property
            must_count += 1;
            // .'$LineString'.coordinates
            res = json_model_3(pval, (path ? lpath_2 : null), rep);
            if (! res)
            {
                rep !== null && rep.push(["unexpected $coord_array [.'$LineString'.coordinates]", (path ? lpath_2 : null)])
            }
            if (! res)
            {
                rep !== null && rep.push(["invalid mandatory prop value [.'$LineString'.coordinates]", (path ? lpath_2 : null)])
                return false;
            }
        }
        else if (prop == "bbox")
        {
            // handle may bbox property
            // .'$LineString'.bbox
            res = Array.isArray(pval);
            if (res)
            {
                for (let arr_6_idx = 0; arr_6_idx < pval.length; arr_6_idx++)
                {
                    let arr_6_item = pval[arr_6_idx]
                    let arr_6_lpath = (path ? lpath_2 : null) ? (path ? lpath_2 : null).concat([arr_6_idx]) : null;
                    // .'$LineString'.bbox.0
                    res = (typeof arr_6_item === 'number' || arr_6_item instanceof Number);
                    if (! res)
                    {
                        rep !== null && rep.push(["not a -1.0 loose float [.'$LineString'.bbox.0]", ((path ? lpath_2 : null) ? arr_6_lpath : null)])
                    }
                    if (! res)
                    {
                        break;
                    }
                }
            }
            if (! res)
            {
                rep !== null && rep.push(["not array or unexpected array [.'$LineString'.bbox]", (path ? lpath_2 : null)])
            }
            if (! res)
            {
                rep !== null && rep.push(["invalid optional prop value [.'$LineString'.bbox]", (path ? lpath_2 : null)])
                return false;
            }
        }
        else
        {
            rep !== null && rep.push(["unexpected prop [.'$LineString']", (path ? lpath_2 : null)])
            return false;
        }
    }
    if (must_count != 2)
    {
        if (rep !== null)
        {
            if (! val.hasOwnProperty("coordinates"))
            {
                rep !== null && rep.push(["missing mandatory prop <coordinates> [.'$LineString']", path])
            }
            if (! val.hasOwnProperty("type"))
            {
                rep !== null && rep.push(["missing mandatory prop <type> [.'$LineString']", path])
            }
        }
        return false;
    }
    return true;
}

// check $LineString (.'$LineString')
function json_model_7(val, path, rep)
{
    let res;
    // .'$LineString'
    res = _jm_obj_2(val, path, rep);
    if (! res)
    {
        rep !== null && rep.push(["unexpected object [.'$LineString']", path])
    }
    return res;
}

// object .'$MultiLineString'
function _jm_obj_3(val, path, rep)
{
    if (! (Object.prototype.toString.call(val) === '[object Object]'))
    {
        rep !== null && rep.push(["not an object [.'$MultiLineString']", path])
        return false;
    }
    let res;
    let must_count = 0;
    for(const [prop, pval] of Object.entries(val))
    {
        let lpath_3 = path ? path.concat([prop]) : null;
        if (prop == "type")
        {
            // handle must type property
            must_count += 1;
            // .'$MultiLineString'.type
            res = ((typeof pval === 'string' || pval instanceof String)) && pval == "MultiLineString";
            if (! res)
            {
                rep !== null && rep.push(["unexpected MultiLineString [.'$MultiLineString'.type]", (path ? lpath_3 : null)])
            }
            if (! res)
            {
                rep !== null && rep.push(["invalid mandatory prop value [.'$MultiLineString'.type]", (path ? lpath_3 : null)])
                return false;
            }
        }
        else if (prop == "coordinates")
        {
            // handle must coordinates property
            must_count += 1;
            // .'$MultiLineString'.coordinates
            res = Array.isArray(pval);
            if (res)
            {
                for (let arr_7_idx = 0; arr_7_idx < pval.length; arr_7_idx++)
                {
                    let arr_7_item = pval[arr_7_idx]
                    let arr_7_lpath = (path ? lpath_3 : null) ? (path ? lpath_3 : null).concat([arr_7_idx]) : null;
                    // .'$MultiLineString'.coordinates.0
                    res = json_model_3(arr_7_item, ((path ? lpath_3 : null) ? arr_7_lpath : null), rep);
                    if (! res)
                    {
                        rep !== null && rep.push(["unexpected $coord_array [.'$MultiLineString'.coordinates.0]", ((path ? lpath_3 : null) ? arr_7_lpath : null)])
                    }
                    if (! res)
                    {
                        break;
                    }
                }
            }
            if (! res)
            {
                rep !== null && rep.push(["not array or unexpected array [.'$MultiLineString'.coordinates]", (path ? lpath_3 : null)])
            }
            if (! res)
            {
                rep !== null && rep.push(["invalid mandatory prop value [.'$MultiLineString'.coordinates]", (path ? lpath_3 : null)])
                return false;
            }
        }
        else if (prop == "bbox")
        {
            // handle may bbox property
            // .'$MultiLineString'.bbox
            res = Array.isArray(pval);
            if (res)
            {
                for (let arr_8_idx = 0; arr_8_idx < pval.length; arr_8_idx++)
                {
                    let arr_8_item = pval[arr_8_idx]
                    let arr_8_lpath = (path ? lpath_3 : null) ? (path ? lpath_3 : null).concat([arr_8_idx]) : null;
                    // .'$MultiLineString'.bbox.0
                    res = (typeof arr_8_item === 'number' || arr_8_item instanceof Number);
                    if (! res)
                    {
                        rep !== null && rep.push(["not a -1.0 loose float [.'$MultiLineString'.bbox.0]", ((path ? lpath_3 : null) ? arr_8_lpath : null)])
                    }
                    if (! res)
                    {
                        break;
                    }
                }
            }
            if (! res)
            {
                rep !== null && rep.push(["not array or unexpected array [.'$MultiLineString'.bbox]", (path ? lpath_3 : null)])
            }
            if (! res)
            {
                rep !== null && rep.push(["invalid optional prop value [.'$MultiLineString'.bbox]", (path ? lpath_3 : null)])
                return false;
            }
        }
        else
        {
            rep !== null && rep.push(["unexpected prop [.'$MultiLineString']", (path ? lpath_3 : null)])
            return false;
        }
    }
    if (must_count != 2)
    {
        if (rep !== null)
        {
            if (! val.hasOwnProperty("coordinates"))
            {
                rep !== null && rep.push(["missing mandatory prop <coordinates> [.'$MultiLineString']", path])
            }
            if (! val.hasOwnProperty("type"))
            {
                rep !== null && rep.push(["missing mandatory prop <type> [.'$MultiLineString']", path])
            }
        }
        return false;
    }
    return true;
}

// check $MultiLineString (.'$MultiLineString')
function json_model_8(val, path, rep)
{
    let res;
    // .'$MultiLineString'
    res = _jm_obj_3(val, path, rep);
    if (! res)
    {
        rep !== null && rep.push(["unexpected object [.'$MultiLineString']", path])
    }
    return res;
}

// object .'$Polygon'
function _jm_obj_4(val, path, rep)
{
    if (! (Object.prototype.toString.call(val) === '[object Object]'))
    {
        rep !== null && rep.push(["not an object [.'$Polygon']", path])
        return false;
    }
    let res;
    let must_count = 0;
    for(const [prop, pval] of Object.entries(val))
    {
        let lpath_4 = path ? path.concat([prop]) : null;
        if (prop == "type")
        {
            // handle must type property
            must_count += 1;
            // .'$Polygon'.type
            res = ((typeof pval === 'string' || pval instanceof String)) && pval == "Polygon";
            if (! res)
            {
                rep !== null && rep.push(["unexpected Polygon [.'$Polygon'.type]", (path ? lpath_4 : null)])
            }
            if (! res)
            {
                rep !== null && rep.push(["invalid mandatory prop value [.'$Polygon'.type]", (path ? lpath_4 : null)])
                return false;
            }
        }
        else if (prop == "coordinates")
        {
            // handle must coordinates property
            must_count += 1;
            // .'$Polygon'.coordinates
            res = Array.isArray(pval);
            if (res)
            {
                for (let arr_9_idx = 0; arr_9_idx < pval.length; arr_9_idx++)
                {
                    let arr_9_item = pval[arr_9_idx]
                    let arr_9_lpath = (path ? lpath_4 : null) ? (path ? lpath_4 : null).concat([arr_9_idx]) : null;
                    // .'$Polygon'.coordinates.0
                    res = json_model_4(arr_9_item, ((path ? lpath_4 : null) ? arr_9_lpath : null), rep);
                    if (! res)
                    {
                        rep !== null && rep.push(["unexpected $linear_ring [.'$Polygon'.coordinates.0]", ((path ? lpath_4 : null) ? arr_9_lpath : null)])
                    }
                    if (! res)
                    {
                        break;
                    }
                }
            }
            if (! res)
            {
                rep !== null && rep.push(["not array or unexpected array [.'$Polygon'.coordinates]", (path ? lpath_4 : null)])
            }
            if (! res)
            {
                rep !== null && rep.push(["invalid mandatory prop value [.'$Polygon'.coordinates]", (path ? lpath_4 : null)])
                return false;
            }
        }
        else if (prop == "bbox")
        {
            // handle may bbox property
            // .'$Polygon'.bbox
            res = Array.isArray(pval);
            if (res)
            {
                for (let arr_10_idx = 0; arr_10_idx < pval.length; arr_10_idx++)
                {
                    let arr_10_item = pval[arr_10_idx]
                    let arr_10_lpath = (path ? lpath_4 : null) ? (path ? lpath_4 : null).concat([arr_10_idx]) : null;
                    // .'$Polygon'.bbox.0
                    res = (typeof arr_10_item === 'number' || arr_10_item instanceof Number);
                    if (! res)
                    {
                        rep !== null && rep.push(["not a -1.0 loose float [.'$Polygon'.bbox.0]", ((path ? lpath_4 : null) ? arr_10_lpath : null)])
                    }
                    if (! res)
                    {
                        break;
                    }
                }
            }
            if (! res)
            {
                rep !== null && rep.push(["not array or unexpected array [.'$Polygon'.bbox]", (path ? lpath_4 : null)])
            }
            if (! res)
            {
                rep !== null && rep.push(["invalid optional prop value [.'$Polygon'.bbox]", (path ? lpath_4 : null)])
                return false;
            }
        }
        else
        {
            rep !== null && rep.push(["unexpected prop [.'$Polygon']", (path ? lpath_4 : null)])
            return false;
        }
    }
    if (must_count != 2)
    {
        if (rep !== null)
        {
            if (! val.hasOwnProperty("coordinates"))
            {
                rep !== null && rep.push(["missing mandatory prop <coordinates> [.'$Polygon']", path])
            }
            if (! val.hasOwnProperty("type"))
            {
                rep !== null && rep.push(["missing mandatory prop <type> [.'$Polygon']", path])
            }
        }
        return false;
    }
    return true;
}

// check $Polygon (.'$Polygon')
function json_model_9(val, path, rep)
{
    let res;
    // .'$Polygon'
    res = _jm_obj_4(val, path, rep);
    if (! res)
    {
        rep !== null && rep.push(["unexpected object [.'$Polygon']", path])
    }
    return res;
}

// object .'$MultiPolygon'
function _jm_obj_5(val, path, rep)
{
    if (! (Object.prototype.toString.call(val) === '[object Object]'))
    {
        rep !== null && rep.push(["not an object [.'$MultiPolygon']", path])
        return false;
    }
    let res;
    let must_count = 0;
    for(const [prop, pval] of Object.entries(val))
    {
        let lpath_5 = path ? path.concat([prop]) : null;
        if (prop == "type")
        {
            // handle must type property
            must_count += 1;
            // .'$MultiPolygon'.type
            res = ((typeof pval === 'string' || pval instanceof String)) && pval == "MultiPolygon";
            if (! res)
            {
                rep !== null && rep.push(["unexpected MultiPolygon [.'$MultiPolygon'.type]", (path ? lpath_5 : null)])
            }
            if (! res)
            {
                rep !== null && rep.push(["invalid mandatory prop value [.'$MultiPolygon'.type]", (path ? lpath_5 : null)])
                return false;
            }
        }
        else if (prop == "coordinates")
        {
            // handle must coordinates property
            must_count += 1;
            // .'$MultiPolygon'.coordinates
            res = Array.isArray(pval);
            if (res)
            {
                for (let arr_11_idx = 0; arr_11_idx < pval.length; arr_11_idx++)
                {
                    let arr_11_item = pval[arr_11_idx]
                    let arr_11_lpath = (path ? lpath_5 : null) ? (path ? lpath_5 : null).concat([arr_11_idx]) : null;
                    // .'$MultiPolygon'.coordinates.0
                    res = Array.isArray(arr_11_item);
                    if (res)
                    {
                        for (let arr_12_idx = 0; arr_12_idx < arr_11_item.length; arr_12_idx++)
                        {
                            let arr_12_item = arr_11_item[arr_12_idx]
                            let arr_12_lpath = ((path ? lpath_5 : null) ? arr_11_lpath : null) ? ((path ? lpath_5 : null) ? arr_11_lpath : null).concat([arr_12_idx]) : null;
                            // .'$MultiPolygon'.coordinates.0.0
                            res = json_model_4(arr_12_item, (((path ? lpath_5 : null) ? arr_11_lpath : null) ? arr_12_lpath : null), rep);
                            if (! res)
                            {
                                rep !== null && rep.push(["unexpected $linear_ring [.'$MultiPolygon'.coordinates.0.0]", (((path ? lpath_5 : null) ? arr_11_lpath : null) ? arr_12_lpath : null)])
                            }
                            if (! res)
                            {
                                break;
                            }
                        }
                    }
                    if (! res)
                    {
                        rep !== null && rep.push(["not array or unexpected array [.'$MultiPolygon'.coordinates.0]", ((path ? lpath_5 : null) ? arr_11_lpath : null)])
                    }
                    if (! res)
                    {
                        break;
                    }
                }
            }
            if (! res)
            {
                rep !== null && rep.push(["not array or unexpected array [.'$MultiPolygon'.coordinates]", (path ? lpath_5 : null)])
            }
            if (! res)
            {
                rep !== null && rep.push(["invalid mandatory prop value [.'$MultiPolygon'.coordinates]", (path ? lpath_5 : null)])
                return false;
            }
        }
        else if (prop == "bbox")
        {
            // handle may bbox property
            // .'$MultiPolygon'.bbox
            res = Array.isArray(pval);
            if (res)
            {
                for (let arr_13_idx = 0; arr_13_idx < pval.length; arr_13_idx++)
                {
                    let arr_13_item = pval[arr_13_idx]
                    let arr_13_lpath = (path ? lpath_5 : null) ? (path ? lpath_5 : null).concat([arr_13_idx]) : null;
                    // .'$MultiPolygon'.bbox.0
                    res = (typeof arr_13_item === 'number' || arr_13_item instanceof Number);
                    if (! res)
                    {
                        rep !== null && rep.push(["not a -1.0 loose float [.'$MultiPolygon'.bbox.0]", ((path ? lpath_5 : null) ? arr_13_lpath : null)])
                    }
                    if (! res)
                    {
                        break;
                    }
                }
            }
            if (! res)
            {
                rep !== null && rep.push(["not array or unexpected array [.'$MultiPolygon'.bbox]", (path ? lpath_5 : null)])
            }
            if (! res)
            {
                rep !== null && rep.push(["invalid optional prop value [.'$MultiPolygon'.bbox]", (path ? lpath_5 : null)])
                return false;
            }
        }
        else
        {
            rep !== null && rep.push(["unexpected prop [.'$MultiPolygon']", (path ? lpath_5 : null)])
            return false;
        }
    }
    if (must_count != 2)
    {
        if (rep !== null)
        {
            if (! val.hasOwnProperty("coordinates"))
            {
                rep !== null && rep.push(["missing mandatory prop <coordinates> [.'$MultiPolygon']", path])
            }
            if (! val.hasOwnProperty("type"))
            {
                rep !== null && rep.push(["missing mandatory prop <type> [.'$MultiPolygon']", path])
            }
        }
        return false;
    }
    return true;
}

// check $MultiPolygon (.'$MultiPolygon')
function json_model_10(val, path, rep)
{
    let res;
    // .'$MultiPolygon'
    res = _jm_obj_5(val, path, rep);
    if (! res)
    {
        rep !== null && rep.push(["unexpected object [.'$MultiPolygon']", path])
    }
    return res;
}


// check $geometry (.'$geometry')
function json_model_11(val, path, rep)
{
    let res;
    // .'$geometry'
    res = Object.prototype.toString.call(val) === '[object Object]';
    if (res)
    {
        let tag_0 = val["type"];
        if (tag_0 !== undefined)
        {
            let fun_0 = _jm_map_0.get(tag_0);
            if (fun_0 !== undefined)
            {
                res = fun_0(val, path, rep);
            }
            else
            {
                res = false;
                rep !== null && rep.push(["tag <type> value not found [.'$geometry'.'|']", path])
            }
        }
        else
        {
            res = false;
            rep !== null && rep.push(["tag prop <type> is missing [.'$geometry'.'|']", path])
        }
    }
    else
    {
        rep !== null && rep.push(["value is not an object [.'$geometry'.'|']", path])
    }
    return res;
}

// object .'$GeometryCollection'
function _jm_obj_6(val, path, rep)
{
    if (! (Object.prototype.toString.call(val) === '[object Object]'))
    {
        rep !== null && rep.push(["not an object [.'$GeometryCollection']", path])
        return false;
    }
    let res;
    let must_count = 0;
    for(const [prop, pval] of Object.entries(val))
    {
        let lpath_6 = path ? path.concat([prop]) : null;
        if (prop == "type")
        {
            // handle must type property
            must_count += 1;
            // .'$GeometryCollection'.type
            res = ((typeof pval === 'string' || pval instanceof String)) && pval == "GeometryCollection";
            if (! res)
            {
                rep !== null && rep.push(["unexpected GeometryCollection [.'$GeometryCollection'.type]", (path ? lpath_6 : null)])
            }
            if (! res)
            {
                rep !== null && rep.push(["invalid mandatory prop value [.'$GeometryCollection'.type]", (path ? lpath_6 : null)])
                return false;
            }
        }
        else if (prop == "geometries")
        {
            // handle must geometries property
            must_count += 1;
            // .'$GeometryCollection'.geometries
            res = Array.isArray(pval);
            if (res)
            {
                for (let arr_14_idx = 0; arr_14_idx < pval.length; arr_14_idx++)
                {
                    let arr_14_item = pval[arr_14_idx]
                    let arr_14_lpath = (path ? lpath_6 : null) ? (path ? lpath_6 : null).concat([arr_14_idx]) : null;
                    // .'$GeometryCollection'.geometries.0
                    res = json_model_11(arr_14_item, ((path ? lpath_6 : null) ? arr_14_lpath : null), rep);
                    if (! res)
                    {
                        rep !== null && rep.push(["unexpected $geometry [.'$GeometryCollection'.geometries.0]", ((path ? lpath_6 : null) ? arr_14_lpath : null)])
                    }
                    if (! res)
                    {
                        break;
                    }
                }
            }
            if (! res)
            {
                rep !== null && rep.push(["not array or unexpected array [.'$GeometryCollection'.geometries]", (path ? lpath_6 : null)])
            }
            if (! res)
            {
                rep !== null && rep.push(["invalid mandatory prop value [.'$GeometryCollection'.geometries]", (path ? lpath_6 : null)])
                return false;
            }
        }
        else if (prop == "bbox")
        {
            // handle may bbox property
            // .'$GeometryCollection'.bbox
            res = Array.isArray(pval);
            if (res)
            {
                for (let arr_15_idx = 0; arr_15_idx < pval.length; arr_15_idx++)
                {
                    let arr_15_item = pval[arr_15_idx]
                    let arr_15_lpath = (path ? lpath_6 : null) ? (path ? lpath_6 : null).concat([arr_15_idx]) : null;
                    // .'$GeometryCollection'.bbox.0
                    res = (typeof arr_15_item === 'number' || arr_15_item instanceof Number);
                    if (! res)
                    {
                        rep !== null && rep.push(["not a -1.0 loose float [.'$GeometryCollection'.bbox.0]", ((path ? lpath_6 : null) ? arr_15_lpath : null)])
                    }
                    if (! res)
                    {
                        break;
                    }
                }
            }
            if (! res)
            {
                rep !== null && rep.push(["not array or unexpected array [.'$GeometryCollection'.bbox]", (path ? lpath_6 : null)])
            }
            if (! res)
            {
                rep !== null && rep.push(["invalid optional prop value [.'$GeometryCollection'.bbox]", (path ? lpath_6 : null)])
                return false;
            }
        }
        else
        {
            rep !== null && rep.push(["unexpected prop [.'$GeometryCollection']", (path ? lpath_6 : null)])
            return false;
        }
    }
    if (must_count != 2)
    {
        if (rep !== null)
        {
            if (! val.hasOwnProperty("geometries"))
            {
                rep !== null && rep.push(["missing mandatory prop <geometries> [.'$GeometryCollection']", path])
            }
            if (! val.hasOwnProperty("type"))
            {
                rep !== null && rep.push(["missing mandatory prop <type> [.'$GeometryCollection']", path])
            }
        }
        return false;
    }
    return true;
}

// check $GeometryCollection (.'$GeometryCollection')
function json_model_12(val, path, rep)
{
    let res;
    // .'$GeometryCollection'
    res = _jm_obj_6(val, path, rep);
    if (! res)
    {
        rep !== null && rep.push(["unexpected object [.'$GeometryCollection']", path])
    }
    return res;
}

// object .'$Feature'.properties.'|'.1
function _jm_obj_8(val, path, rep)
{
    if (! (Object.prototype.toString.call(val) === '[object Object]'))
    {
        rep !== null && rep.push(["not an object [.'$Feature'.properties.'|'.1]", path])
        return false;
    }
    // accept any object
    return true;
}

// object .'$Feature'
function _jm_obj_7(val, path, rep)
{
    if (! (Object.prototype.toString.call(val) === '[object Object]'))
    {
        rep !== null && rep.push(["not an object [.'$Feature']", path])
        return false;
    }
    let res;
    let must_count = 0;
    for(const [prop, pval] of Object.entries(val))
    {
        let lpath_7 = path ? path.concat([prop]) : null;
        if (prop == "type")
        {
            // handle must type property
            must_count += 1;
            // .'$Feature'.type
            res = ((typeof pval === 'string' || pval instanceof String)) && pval == "Feature";
            if (! res)
            {
                rep !== null && rep.push(["unexpected Feature [.'$Feature'.type]", (path ? lpath_7 : null)])
            }
            if (! res)
            {
                rep !== null && rep.push(["invalid mandatory prop value [.'$Feature'.type]", (path ? lpath_7 : null)])
                return false;
            }
        }
        else if (prop == "geometry")
        {
            // handle must geometry property
            must_count += 1;
            // .'$Feature'.geometry
            // .'$Feature'.geometry.'|'.0
            res = pval === null;
            if (! res)
            {
                rep !== null && rep.push(["not null [.'$Feature'.geometry.'|'.0]", (path ? lpath_7 : null)])
            }
            if (! res)
            {
                // .'$Feature'.geometry.'|'.1
                res = json_model_11(pval, (path ? lpath_7 : null), rep);
                if (! res)
                {
                    rep !== null && rep.push(["unexpected $geometry [.'$Feature'.geometry.'|'.1]", (path ? lpath_7 : null)])
                }
                if (! res)
                {
                    // .'$Feature'.geometry.'|'.2
                    res = json_model_12(pval, (path ? lpath_7 : null), rep);
                    if (! res)
                    {
                        rep !== null && rep.push(["unexpected $GeometryCollection [.'$Feature'.geometry.'|'.2]", (path ? lpath_7 : null)])
                    }
                }
            }
            if (res)
            {
                if (rep !== null) rep.length = 0
            }
            else
            {
                rep !== null && rep.push(["no model matched [.'$Feature'.geometry.'|']", (path ? lpath_7 : null)])
            }
            if (! res)
            {
                rep !== null && rep.push(["invalid mandatory prop value [.'$Feature'.geometry]", (path ? lpath_7 : null)])
                return false;
            }
        }
        else if (prop == "properties")
        {
            // handle must properties property
            must_count += 1;
            // .'$Feature'.properties
            // .'$Feature'.properties.'|'.0
            res = pval === null;
            if (! res)
            {
                rep !== null && rep.push(["not null [.'$Feature'.properties.'|'.0]", (path ? lpath_7 : null)])
            }
            if (! res)
            {
                // .'$Feature'.properties.'|'.1
                res = _jm_obj_8(pval, (path ? lpath_7 : null), rep);
                if (! res)
                {
                    rep !== null && rep.push(["unexpected object [.'$Feature'.properties.'|'.1]", (path ? lpath_7 : null)])
                }
            }
            if (res)
            {
                if (rep !== null) rep.length = 0
            }
            else
            {
                rep !== null && rep.push(["no model matched [.'$Feature'.properties.'|']", (path ? lpath_7 : null)])
            }
            if (! res)
            {
                rep !== null && rep.push(["invalid mandatory prop value [.'$Feature'.properties]", (path ? lpath_7 : null)])
                return false;
            }
        }
        else if (prop == "id")
        {
            // handle may id property
            // .'$Feature'.id
            // .'$Feature'.id.'|'.0
            res = (typeof pval === 'string' || pval instanceof String);
            if (! res)
            {
                rep !== null && rep.push(["unexpected string [.'$Feature'.id.'|'.0]", (path ? lpath_7 : null)])
            }
            if (! res)
            {
                // .'$Feature'.id.'|'.1
                res = (typeof pval === 'number' || pval instanceof Number);
                if (! res)
                {
                    rep !== null && rep.push(["not a -1.0 loose float [.'$Feature'.id.'|'.1]", (path ? lpath_7 : null)])
                }
            }
            if (res)
            {
                if (rep !== null) rep.length = 0
            }
            else
            {
                rep !== null && rep.push(["no model matched [.'$Feature'.id.'|']", (path ? lpath_7 : null)])
            }
            if (! res)
            {
                rep !== null && rep.push(["invalid optional prop value [.'$Feature'.id]", (path ? lpath_7 : null)])
                return false;
            }
        }
        else if (prop == "bbox")
        {
            // handle may bbox property
            // .'$Feature'.bbox
            res = Array.isArray(pval);
            if (res)
            {
                for (let arr_16_idx = 0; arr_16_idx < pval.length; arr_16_idx++)
                {
                    let arr_16_item = pval[arr_16_idx]
                    let arr_16_lpath = (path ? lpath_7 : null) ? (path ? lpath_7 : null).concat([arr_16_idx]) : null;
                    // .'$Feature'.bbox.0
                    res = (typeof arr_16_item === 'number' || arr_16_item instanceof Number);
                    if (! res)
                    {
                        rep !== null && rep.push(["not a -1.0 loose float [.'$Feature'.bbox.0]", ((path ? lpath_7 : null) ? arr_16_lpath : null)])
                    }
                    if (! res)
                    {
                        break;
                    }
                }
            }
            if (! res)
            {
                rep !== null && rep.push(["not array or unexpected array [.'$Feature'.bbox]", (path ? lpath_7 : null)])
            }
            if (! res)
            {
                rep !== null && rep.push(["invalid optional prop value [.'$Feature'.bbox]", (path ? lpath_7 : null)])
                return false;
            }
        }
        else
        {
            rep !== null && rep.push(["unexpected prop [.'$Feature']", (path ? lpath_7 : null)])
            return false;
        }
    }
    if (must_count != 3)
    {
        if (rep !== null)
        {
            if (! val.hasOwnProperty("geometry"))
            {
                rep !== null && rep.push(["missing mandatory prop <geometry> [.'$Feature']", path])
            }
            if (! val.hasOwnProperty("properties"))
            {
                rep !== null && rep.push(["missing mandatory prop <properties> [.'$Feature']", path])
            }
            if (! val.hasOwnProperty("type"))
            {
                rep !== null && rep.push(["missing mandatory prop <type> [.'$Feature']", path])
            }
        }
        return false;
    }
    return true;
}

// check $Feature (.'$Feature')
function json_model_13(val, path, rep)
{
    let res;
    // .'$Feature'
    res = _jm_obj_7(val, path, rep);
    if (! res)
    {
        rep !== null && rep.push(["unexpected object [.'$Feature']", path])
    }
    return res;
}

// object .'$FeatureCollection'
function _jm_obj_9(val, path, rep)
{
    if (! (Object.prototype.toString.call(val) === '[object Object]'))
    {
        rep !== null && rep.push(["not an object [.'$FeatureCollection']", path])
        return false;
    }
    let res;
    let must_count = 0;
    for(const [prop, pval] of Object.entries(val))
    {
        let lpath_8 = path ? path.concat([prop]) : null;
        if (prop == "type")
        {
            // handle must type property
            must_count += 1;
            // .'$FeatureCollection'.type
            res = ((typeof pval === 'string' || pval instanceof String)) && pval == "FeatureCollection";
            if (! res)
            {
                rep !== null && rep.push(["unexpected FeatureCollection [.'$FeatureCollection'.type]", (path ? lpath_8 : null)])
            }
            if (! res)
            {
                rep !== null && rep.push(["invalid mandatory prop value [.'$FeatureCollection'.type]", (path ? lpath_8 : null)])
                return false;
            }
        }
        else if (prop == "features")
        {
            // handle must features property
            must_count += 1;
            // .'$FeatureCollection'.features
            res = Array.isArray(pval);
            if (res)
            {
                for (let arr_17_idx = 0; arr_17_idx < pval.length; arr_17_idx++)
                {
                    let arr_17_item = pval[arr_17_idx]
                    let arr_17_lpath = (path ? lpath_8 : null) ? (path ? lpath_8 : null).concat([arr_17_idx]) : null;
                    // .'$FeatureCollection'.features.0
                    res = json_model_13(arr_17_item, ((path ? lpath_8 : null) ? arr_17_lpath : null), rep);
                    if (! res)
                    {
                        rep !== null && rep.push(["unexpected $Feature [.'$FeatureCollection'.features.0]", ((path ? lpath_8 : null) ? arr_17_lpath : null)])
                    }
                    if (! res)
                    {
                        break;
                    }
                }
            }
            if (! res)
            {
                rep !== null && rep.push(["not array or unexpected array [.'$FeatureCollection'.features]", (path ? lpath_8 : null)])
            }
            if (! res)
            {
                rep !== null && rep.push(["invalid mandatory prop value [.'$FeatureCollection'.features]", (path ? lpath_8 : null)])
                return false;
            }
        }
        else if (prop == "bbox")
        {
            // handle may bbox property
            // .'$FeatureCollection'.bbox
            res = Array.isArray(pval);
            if (res)
            {
                for (let arr_18_idx = 0; arr_18_idx < pval.length; arr_18_idx++)
                {
                    let arr_18_item = pval[arr_18_idx]
                    let arr_18_lpath = (path ? lpath_8 : null) ? (path ? lpath_8 : null).concat([arr_18_idx]) : null;
                    // .'$FeatureCollection'.bbox.0
                    res = (typeof arr_18_item === 'number' || arr_18_item instanceof Number);
                    if (! res)
                    {
                        rep !== null && rep.push(["not a -1.0 loose float [.'$FeatureCollection'.bbox.0]", ((path ? lpath_8 : null) ? arr_18_lpath : null)])
                    }
                    if (! res)
                    {
                        break;
                    }
                }
            }
            if (! res)
            {
                rep !== null && rep.push(["not array or unexpected array [.'$FeatureCollection'.bbox]", (path ? lpath_8 : null)])
            }
            if (! res)
            {
                rep !== null && rep.push(["invalid optional prop value [.'$FeatureCollection'.bbox]", (path ? lpath_8 : null)])
                return false;
            }
        }
        else
        {
            rep !== null && rep.push(["unexpected prop [.'$FeatureCollection']", (path ? lpath_8 : null)])
            return false;
        }
    }
    if (must_count != 2)
    {
        if (rep !== null)
        {
            if (! val.hasOwnProperty("features"))
            {
                rep !== null && rep.push(["missing mandatory prop <features> [.'$FeatureCollection']", path])
            }
            if (! val.hasOwnProperty("type"))
            {
                rep !== null && rep.push(["missing mandatory prop <type> [.'$FeatureCollection']", path])
            }
        }
        return false;
    }
    return true;
}

// check $FeatureCollection (.'$FeatureCollection')
function json_model_14(val, path, rep)
{
    let res;
    // .'$FeatureCollection'
    res = _jm_obj_9(val, path, rep);
    if (! res)
    {
        rep !== null && rep.push(["unexpected object [.'$FeatureCollection']", path])
    }
    return res;
}

// check $ (.)
function json_model_1(val, path, rep)
{
    let res;
    // .
    // generic xor list
    let xc_0 = 0;
    let xr_0;
    // .'^'.0
    xr_0 = json_model_11(val, path, rep);
    if (! xr_0)
    {
        rep !== null && rep.push(["unexpected $geometry [.'^'.0]", path])
    }
    if (xr_0)
    {
        xc_0 += 1;
    }
    // .'^'.1
    xr_0 = json_model_12(val, path, rep);
    if (! xr_0)
    {
        rep !== null && rep.push(["unexpected $GeometryCollection [.'^'.1]", path])
    }
    if (xr_0)
    {
        xc_0 += 1;
    }
    if (xc_0 <= 1)
    {
        // .'^'.2
        xr_0 = json_model_13(val, path, rep);
        if (! xr_0)
        {
            rep !== null && rep.push(["unexpected $Feature [.'^'.2]", path])
        }
        if (xr_0)
        {
            xc_0 += 1;
        }
    }
    if (xc_0 <= 1)
    {
        // .'^'.3
        xr_0 = json_model_14(val, path, rep);
        if (! xr_0)
        {
            rep !== null && rep.push(["unexpected $FeatureCollection [.'^'.3]", path])
        }
        if (xr_0)
        {
            xc_0 += 1;
        }
    }
    res = xc_0 == 1;
    if (res)
    {
        if (rep !== null) rep.length = 0
    }
    else
    {
        rep !== null && rep.push(["not one model match [.'^']", path])
    }
    return res;
}


var initialized = false

// differed module initializations
export function check_model_init()
{
    if (! initialized)
    {
        initialized = true;
        runtime.jm_set_rx(RegExp)
        _jm_map_0.set("Point", json_model_5)
        _jm_map_0.set("MultiPoint", json_model_6)
        _jm_map_0.set("LineString", json_model_7)
        _jm_map_0.set("MultiLineString", json_model_8)
        _jm_map_0.set("Polygon", json_model_9)
        _jm_map_0.set("MultiPolygon", json_model_10)
        check_model_map.set("", json_model_1)
        check_model_map.set("position", json_model_2)
        check_model_map.set("coord_array", json_model_3)
        check_model_map.set("linear_ring", json_model_4)
        check_model_map.set("Point", json_model_5)
        check_model_map.set("MultiPoint", json_model_6)
        check_model_map.set("LineString", json_model_7)
        check_model_map.set("MultiLineString", json_model_8)
        check_model_map.set("Polygon", json_model_9)
        check_model_map.set("MultiPolygon", json_model_10)
        check_model_map.set("geometry", json_model_11)
        check_model_map.set("GeometryCollection", json_model_12)
        check_model_map.set("Feature", json_model_13)
        check_model_map.set("FeatureCollection", json_model_14)
    }
}

// differed module cleanup
export function check_model_free()
{
    if (initialized)
    {
        initialized = false;
    }
}

export function check_model(val, name, rep)
{
    let checker = check_model_map.get(name)
    if (checker === undefined)
        throw `no checker for "${name}"`
    let path = rep !== null ? [] : null

    return checker(val, path, rep)
}

// possibly run as main based on a guess
import main from "json_model_runtime/main.js"

if (import.meta.url.endsWith(process.argv[1]))
    main(check_model_init, check_model, check_model_free)
