//
// Generated by JSON Model Compiler version 2.0b1
// see https://github.com/clairey-zx81/json-model
//

import json_model.*;
import java.util.Map;
import java.util.Set;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Iterator;
import java.util.regex.Pattern;
import java.util.regex.Matcher;

@SuppressWarnings("unchecked")
public class pgxn extends ModelChecker
{
    static public final String VERSION = "2";

    public Pattern _jm_re_0_pat = null;
    Set<Object> _jm_cst_0_set;
    public Pattern _jm_re_1_pat = null;
    Set<Object> _jm_cst_1_set;
    public Pattern _jm_re_2_pat = null;
    public Pattern _jm_re_3_pat = null;
    public Pattern _jm_re_4_pat = null;
    Set<Object> _jm_cst_2_set;
    Set<Object> _jm_cst_3_set;
    Map<String, Checker> _jm_obj_7_mup_pmap;
    Map<String, Checker> _jm_obj_7_map_pmap;
    public Map<String, Checker> pgxn_map_pmap;

    public boolean _jm_re_0(String val, Path path, Report rep)
    {
        return _jm_re_0_pat.matcher(val).find();
    }
    
    // check $neStr (.'$neStr')
    public boolean json_model_2(Object val, Path path, Report rep)
    {
        boolean res;
        // .'$neStr'
        // "/./"
        res = json.isString(val) && _jm_re_0(json.asString(val), path, rep);
        if (! res)
        {
            if (rep != null) rep.addEntry("unexpected /./ [.'$neStr']", path);
        }
        return res;
    }
    
    // check $neStrList (.'$neStrList')
    public boolean json_model_3(Object val, Path path, Report rep)
    {
        boolean res;
        // .'$neStrList'
        // .'$neStrList'.'@'
        res = json.isArray(val);
        if (res)
        {
            int arr_0_idx = -1;
            Iterator<Object> arr_0_item_loop = json.arrayIterator(val);
            while (arr_0_item_loop.hasNext())
            {
                arr_0_idx++;
                Object arr_0_item = arr_0_item_loop.next();
                Path arr_0_lpath = new Path(arr_0_idx, path);
                // .'$neStrList'.'@'.0
                res = json_model_2(arr_0_item, (path != null ? arr_0_lpath : null), rep);
                if (! res)
                {
                    if (rep != null) rep.addEntry("unexpected $neStr [.'$neStrList'.'@'.0]", (path != null ? arr_0_lpath : null));
                }
                if (! res)
                {
                    break;
                }
            }
        }
        if (! res)
        {
            if (rep != null) rep.addEntry("not array or unexpected array [.'$neStrList'.'@']", path);
        }
        if (res)
        {
            long ival_0 = json.arrayLength(val);
            res = rt.array_is_unique(val, path, rep) && ival_0 >= 1;
            if (! res)
            {
                if (rep != null) rep.addEntry("constraints failed [.'$neStrList']", path);
            }
        }
        return res;
    }
    
    
    // check $License (.'$License')
    public boolean json_model_4(Object val, Path path, Report rep)
    {
        boolean res;
        // .'$License'
        res = json.isScalar(val) && _jm_cst_0_set.contains(val);
        if (! res)
        {
            if (rep != null) rep.addEntry("value not in enum [.'$License'.'|']", path);
        }
        return res;
    }
    
    // check $LicenseList (.'$LicenseList')
    public boolean json_model_5(Object val, Path path, Report rep)
    {
        boolean res;
        // .'$LicenseList'
        // .'$LicenseList'.'@'
        res = json.isArray(val);
        if (res)
        {
            int arr_1_idx = -1;
            Iterator<Object> arr_1_item_loop = json.arrayIterator(val);
            while (arr_1_item_loop.hasNext())
            {
                arr_1_idx++;
                Object arr_1_item = arr_1_item_loop.next();
                Path arr_1_lpath = new Path(arr_1_idx, path);
                // .'$LicenseList'.'@'.0
                res = json_model_4(arr_1_item, (path != null ? arr_1_lpath : null), rep);
                if (! res)
                {
                    if (rep != null) rep.addEntry("unexpected $License [.'$LicenseList'.'@'.0]", (path != null ? arr_1_lpath : null));
                }
                if (! res)
                {
                    break;
                }
            }
        }
        if (! res)
        {
            if (rep != null) rep.addEntry("not array or unexpected array [.'$LicenseList'.'@']", path);
        }
        if (res)
        {
            long ival_1 = json.arrayLength(val);
            res = rt.array_is_unique(val, path, rep) && ival_1 >= 1;
            if (! res)
            {
                if (rep != null) rep.addEntry("constraints failed [.'$LicenseList']", path);
            }
        }
        return res;
    }
    
    public boolean _jm_re_1(String val, Path path, Report rep)
    {
        return _jm_re_1_pat.matcher(val).find();
    }
    
    // object .'$Provide'
    public boolean _jm_obj_0(Object val, Path path, Report rep)
    {
        if (! json.isObject(val))
        {
            if (rep != null) rep.addEntry("not an object [.'$Provide']", path);
            return false;
        }
        boolean res;
        long must_count = 0;
        Iterator<String> prop_loop = json.objectIterator(val);
        while (prop_loop.hasNext())
        {
            String prop = prop_loop.next();
            Object pval = json.objectValue(val, prop);
            Path lpath_0 = new Path(prop, path);
            if (prop.compareTo("file") == 0)
            {
                // handle must file property
                must_count += 1;
                // .'$Provide'.file
                res = json.isString(pval);
                if (! res)
                {
                    if (rep != null) rep.addEntry("unexpected string [.'$Provide'.file]", (path != null ? lpath_0 : null));
                }
                if (! res)
                {
                    if (rep != null) rep.addEntry("invalid mandatory prop value [.'$Provide'.file]", (path != null ? lpath_0 : null));
                    return false;
                }
            }
            else if (prop.compareTo("version") == 0)
            {
                // handle must version property
                must_count += 1;
                // .'$Provide'.version
                res = json_model_10(pval, (path != null ? lpath_0 : null), rep);
                if (! res)
                {
                    if (rep != null) rep.addEntry("unexpected $Version [.'$Provide'.version]", (path != null ? lpath_0 : null));
                }
                if (! res)
                {
                    if (rep != null) rep.addEntry("invalid mandatory prop value [.'$Provide'.version]", (path != null ? lpath_0 : null));
                    return false;
                }
            }
            else if (prop.compareTo("abstract") == 0)
            {
                // handle may abstract property
                // .'$Provide'.abstract
                res = json.isString(pval);
                if (! res)
                {
                    if (rep != null) rep.addEntry("unexpected string [.'$Provide'.abstract]", (path != null ? lpath_0 : null));
                }
                if (! res)
                {
                    if (rep != null) rep.addEntry("invalid optional prop value [.'$Provide'.abstract]", (path != null ? lpath_0 : null));
                    return false;
                }
            }
            else if (prop.compareTo("docfile") == 0)
            {
                // handle may docfile property
                // .'$Provide'.docfile
                res = json.isString(pval);
                if (! res)
                {
                    if (rep != null) rep.addEntry("unexpected string [.'$Provide'.docfile]", (path != null ? lpath_0 : null));
                }
                if (! res)
                {
                    if (rep != null) rep.addEntry("invalid optional prop value [.'$Provide'.docfile]", (path != null ? lpath_0 : null));
                    return false;
                }
            }
            else if (_jm_re_1(prop, path, rep))
            {
                // handle 1 re props
                // .'$Provide'.'/^[Xx]_/'
                res = true;
                if (! res)
                {
                    if (rep != null) rep.addEntry("unexpected $ANY [.'$Provide'.'/^[Xx]_/']", (path != null ? lpath_0 : null));
                }
                if (! res)
                {
                    return false;
                }
            }
            else
            {
                if (rep != null) rep.addEntry("unexpected prop [.'$Provide']", (path != null ? lpath_0 : null));
                return false;
            }
        }
        if (must_count != 2)
        {
            if (rep != null)
            {
                if (! json.objectHasProp(val, "file"))
                {
                    if (rep != null) rep.addEntry("missing mandatory prop <file> [.'$Provide']", path);
                }
                if (! json.objectHasProp(val, "version"))
                {
                    if (rep != null) rep.addEntry("missing mandatory prop <version> [.'$Provide']", path);
                }
            }
            return false;
        }
        return true;
    }
    
    // check $Provide (.'$Provide')
    public boolean json_model_6(Object val, Path path, Report rep)
    {
        boolean res;
        // .'$Provide'
        res = _jm_obj_0(val, path, rep);
        if (! res)
        {
            if (rep != null) rep.addEntry("unexpected element [.'$Provide']", path);
        }
        return res;
    }
    
    
    // check $Status (.'$Status')
    public boolean json_model_7(Object val, Path path, Report rep)
    {
        boolean res;
        // .'$Status'
        res = json.isScalar(val) && _jm_cst_1_set.contains(val);
        if (! res)
        {
            if (rep != null) rep.addEntry("value not in enum [.'$Status'.'|']", path);
        }
        return res;
    }
    
    // object .'$Resources'.bugtracker
    public boolean _jm_obj_2(Object val, Path path, Report rep)
    {
        if (! json.isObject(val))
        {
            if (rep != null) rep.addEntry("not an object [.'$Resources'.bugtracker]", path);
            return false;
        }
        boolean res;
        Iterator<String> prop_loop = json.objectIterator(val);
        while (prop_loop.hasNext())
        {
            String prop = prop_loop.next();
            Object pval = json.objectValue(val, prop);
            Path lpath_2 = new Path(prop, path);
            if (prop.compareTo("web") == 0)
            {
                // handle may web property
                // .'$Resources'.bugtracker.web
                res = json.isString(pval) && rt.is_valid_url(json.asString(pval));
                if (! res)
                {
                    if (rep != null) rep.addEntry("unexpected $URL [.'$Resources'.bugtracker.web]", (path != null ? lpath_2 : null));
                }
                if (! res)
                {
                    if (rep != null) rep.addEntry("invalid optional prop value [.'$Resources'.bugtracker.web]", (path != null ? lpath_2 : null));
                    return false;
                }
            }
            else if (prop.compareTo("mailto") == 0)
            {
                // handle may mailto property
                // .'$Resources'.bugtracker.mailto
                res = json.isString(pval) && rt.is_valid_email(json.asString(pval));
                if (! res)
                {
                    if (rep != null) rep.addEntry("unexpected $EMAIL [.'$Resources'.bugtracker.mailto]", (path != null ? lpath_2 : null));
                }
                if (! res)
                {
                    if (rep != null) rep.addEntry("invalid optional prop value [.'$Resources'.bugtracker.mailto]", (path != null ? lpath_2 : null));
                    return false;
                }
            }
            else if (_jm_re_1(prop, path, rep))
            {
                // handle 1 re props
                // .'$Resources'.bugtracker.'/^[Xx]_/'
                res = true;
                if (! res)
                {
                    if (rep != null) rep.addEntry("unexpected $ANY [.'$Resources'.bugtracker.'/^[Xx]_/']", (path != null ? lpath_2 : null));
                }
                if (! res)
                {
                    return false;
                }
            }
            else
            {
                if (rep != null) rep.addEntry("unexpected prop [.'$Resources'.bugtracker]", (path != null ? lpath_2 : null));
                return false;
            }
        }
        return true;
    }
    
    // object .'$Resources'.repository
    public boolean _jm_obj_3(Object val, Path path, Report rep)
    {
        if (! json.isObject(val))
        {
            if (rep != null) rep.addEntry("not an object [.'$Resources'.repository]", path);
            return false;
        }
        boolean res;
        Iterator<String> prop_loop = json.objectIterator(val);
        while (prop_loop.hasNext())
        {
            String prop = prop_loop.next();
            Object pval = json.objectValue(val, prop);
            Path lpath_3 = new Path(prop, path);
            if (prop.compareTo("url") == 0)
            {
                // handle may url property
                // .'$Resources'.repository.url
                res = json.isString(pval) && rt.is_valid_url(json.asString(pval));
                if (! res)
                {
                    if (rep != null) rep.addEntry("unexpected $URL [.'$Resources'.repository.url]", (path != null ? lpath_3 : null));
                }
                if (! res)
                {
                    if (rep != null) rep.addEntry("invalid optional prop value [.'$Resources'.repository.url]", (path != null ? lpath_3 : null));
                    return false;
                }
            }
            else if (prop.compareTo("web") == 0)
            {
                // handle may web property
                // .'$Resources'.repository.web
                res = json.isString(pval) && rt.is_valid_url(json.asString(pval));
                if (! res)
                {
                    if (rep != null) rep.addEntry("unexpected $URL [.'$Resources'.repository.web]", (path != null ? lpath_3 : null));
                }
                if (! res)
                {
                    if (rep != null) rep.addEntry("invalid optional prop value [.'$Resources'.repository.web]", (path != null ? lpath_3 : null));
                    return false;
                }
            }
            else if (prop.compareTo("type") == 0)
            {
                // handle may type property
                // .'$Resources'.repository.type
                // "/./"
                res = json.isString(pval) && _jm_re_0(json.asString(pval), (path != null ? lpath_3 : null), rep);
                if (! res)
                {
                    if (rep != null) rep.addEntry("unexpected /./ [.'$Resources'.repository.type]", (path != null ? lpath_3 : null));
                }
                if (! res)
                {
                    if (rep != null) rep.addEntry("invalid optional prop value [.'$Resources'.repository.type]", (path != null ? lpath_3 : null));
                    return false;
                }
            }
            else
            {
                if (rep != null) rep.addEntry("unexpected prop [.'$Resources'.repository]", (path != null ? lpath_3 : null));
                return false;
            }
        }
        return true;
    }
    
    // object .'$Resources'
    public boolean _jm_obj_1(Object val, Path path, Report rep)
    {
        if (! json.isObject(val))
        {
            if (rep != null) rep.addEntry("not an object [.'$Resources']", path);
            return false;
        }
        boolean res;
        Iterator<String> prop_loop = json.objectIterator(val);
        while (prop_loop.hasNext())
        {
            String prop = prop_loop.next();
            Object pval = json.objectValue(val, prop);
            Path lpath_1 = new Path(prop, path);
            if (prop.compareTo("homepage") == 0)
            {
                // handle may homepage property
                // .'$Resources'.homepage
                res = json.isString(pval) && rt.is_valid_url(json.asString(pval));
                if (! res)
                {
                    if (rep != null) rep.addEntry("unexpected $URL [.'$Resources'.homepage]", (path != null ? lpath_1 : null));
                }
                if (! res)
                {
                    if (rep != null) rep.addEntry("invalid optional prop value [.'$Resources'.homepage]", (path != null ? lpath_1 : null));
                    return false;
                }
            }
            else if (prop.compareTo("bugtracker") == 0)
            {
                // handle may bugtracker property
                // .'$Resources'.bugtracker
                res = _jm_obj_2(pval, (path != null ? lpath_1 : null), rep);
                if (! res)
                {
                    if (rep != null) rep.addEntry("unexpected element [.'$Resources'.bugtracker]", (path != null ? lpath_1 : null));
                }
                if (! res)
                {
                    if (rep != null) rep.addEntry("invalid optional prop value [.'$Resources'.bugtracker]", (path != null ? lpath_1 : null));
                    return false;
                }
            }
            else if (prop.compareTo("repository") == 0)
            {
                // handle may repository property
                // .'$Resources'.repository
                res = _jm_obj_3(pval, (path != null ? lpath_1 : null), rep);
                if (! res)
                {
                    if (rep != null) rep.addEntry("unexpected element [.'$Resources'.repository]", (path != null ? lpath_1 : null));
                }
                if (! res)
                {
                    if (rep != null) rep.addEntry("invalid optional prop value [.'$Resources'.repository]", (path != null ? lpath_1 : null));
                    return false;
                }
            }
            else
            {
                if (rep != null) rep.addEntry("unexpected prop [.'$Resources']", (path != null ? lpath_1 : null));
                return false;
            }
        }
        return true;
    }
    
    // check $Resources (.'$Resources')
    public boolean json_model_8(Object val, Path path, Report rep)
    {
        boolean res;
        // .'$Resources'
        res = _jm_obj_1(val, path, rep);
        if (! res)
        {
            if (rep != null) rep.addEntry("unexpected element [.'$Resources']", path);
        }
        return res;
    }
    
    public boolean _jm_re_2(String val, Path path, Report rep)
    {
        return _jm_re_2_pat.matcher(val).find();
    }
    
    // check $SemVer (.'$SemVer')
    public boolean json_model_9(Object val, Path path, Report rep)
    {
        boolean res;
        // .'$SemVer'
        // "/^\\d+\\.\\d+\\.\\d+[-_A-Za-z0-9]*$/"
        res = json.isString(val) && _jm_re_2(json.asString(val), path, rep);
        if (! res)
        {
            if (rep != null) rep.addEntry("unexpected /^\\d+\\.\\d+\\.\\d+[-_A-Za-z0-9]*$/ [.'$SemVer']", path);
        }
        return res;
    }
    
    // check $Version (.'$Version')
    public boolean json_model_10(Object val, Path path, Report rep)
    {
        boolean res;
        // .'$Version'
        // .'$Version'.'|'.0
        res = json_model_9(val, path, rep);
        if (! res)
        {
            if (rep != null) rep.addEntry("unexpected $SemVer [.'$Version'.'|'.0]", path);
        }
        if (! res)
        {
            // .'$Version'.'|'.1
            res = json.isInteger(val) && json.asLong(val) == 0;
            if (! res)
            {
                if (rep != null) rep.addEntry("unexpected =0 [.'$Version'.'|'.1]", path);
            }
        }
        if (res)
        {
            if (rep != null) rep.clearEntries();
        }
        else
        {
            if (rep != null) rep.addEntry("no model matched [.'$Version'.'|']", path);
        }
        return res;
    }
    
    public boolean _jm_re_3(String val, Path path, Report rep)
    {
        return _jm_re_3_pat.matcher(val).find();
    }
    
    // check $Ops (.'$Ops')
    public boolean json_model_11(Object val, Path path, Report rep)
    {
        boolean res;
        // .'$Ops'
        // "/^(<=|<|>=|>|!=|==)$/"
        res = json.isString(val) && _jm_re_3(json.asString(val), path, rep);
        if (! res)
        {
            if (rep != null) rep.addEntry("unexpected /^(<=|<|>=|>|!=|==)$/ [.'$Ops']", path);
        }
        return res;
    }
    
    public boolean _jm_re_4(String val, Path path, Report rep)
    {
        return _jm_re_4_pat.matcher(val).find();
    }
    
    // check $VersionRange (.'$VersionRange')
    public boolean json_model_12(Object val, Path path, Report rep)
    {
        boolean res;
        // .'$VersionRange'
        // "/^\\s*(<=|<|>=|>|!=|==)\\s*(\\d+\\.\\d+\\.\\d+[-_A-Za-z0-9]*)\\s*(,\\s*(<=|<|>=|>|!=|==)\\s*(\\d+\\.\\d+\\.\\d+[-_A-Za-z0-9]*))*\\s*$/"
        res = json.isString(val) && _jm_re_4(json.asString(val), path, rep);
        if (! res)
        {
            if (rep != null) rep.addEntry("unexpected /^\\s*(<=|<|>=|>|!=|==)\\s*(\\d+\\.\\d+\\.\\d+[-_A-Za-z0-9]*)\\s*(,\\s*(<=|<|>=|>|!=|==)\\s*(\\d+\\.\\d+\\.\\d+[-_A-Za-z0-9]*))*\\s*$/ [.'$VersionRange']", path);
        }
        return res;
    }
    
    
    // check $Phase (.'$Phase')
    public boolean json_model_13(Object val, Path path, Report rep)
    {
        boolean res;
        // .'$Phase'
        res = json.isScalar(val) && _jm_cst_2_set.contains(val);
        if (! res)
        {
            if (rep != null) rep.addEntry("value not in enum [.'$Phase'.'|']", path);
        }
        return res;
    }
    
    
    // check $Relation (.'$Relation')
    public boolean json_model_14(Object val, Path path, Report rep)
    {
        boolean res;
        // .'$Relation'
        res = json.isScalar(val) && _jm_cst_3_set.contains(val);
        if (! res)
        {
            if (rep != null) rep.addEntry("value not in enum [.'$Relation'.'|']", path);
        }
        return res;
    }
    
    // object .'$Prereq'
    public boolean _jm_obj_4(Object val, Path path, Report rep)
    {
        if (! json.isObject(val))
        {
            if (rep != null) rep.addEntry("not an object [.'$Prereq']", path);
            return false;
        }
        boolean res;
        Iterator<String> prop_loop = json.objectIterator(val);
        while (prop_loop.hasNext())
        {
            String prop = prop_loop.next();
            Object pval = json.objectValue(val, prop);
            Path lpath_4 = new Path(prop, path);
            // handle other props
            // .'$Prereq'.''
            // .'$Prereq'.''.'|'.0
            res = json_model_10(pval, (path != null ? lpath_4 : null), rep);
            if (! res)
            {
                if (rep != null) rep.addEntry("unexpected $Version [.'$Prereq'.''.'|'.0]", (path != null ? lpath_4 : null));
            }
            if (! res)
            {
                // .'$Prereq'.''.'|'.1
                res = json_model_12(pval, (path != null ? lpath_4 : null), rep);
                if (! res)
                {
                    if (rep != null) rep.addEntry("unexpected $VersionRange [.'$Prereq'.''.'|'.1]", (path != null ? lpath_4 : null));
                }
            }
            if (res)
            {
                if (rep != null) rep.clearEntries();
            }
            else
            {
                if (rep != null) rep.addEntry("no model matched [.'$Prereq'.''.'|']", (path != null ? lpath_4 : null));
            }
            if (! res)
            {
                return false;
            }
        }
        return true;
    }
    
    // check $Prereq (.'$Prereq')
    public boolean json_model_15(Object val, Path path, Report rep)
    {
        boolean res;
        // .'$Prereq'
        res = _jm_obj_4(val, path, rep);
        if (! res)
        {
            if (rep != null) rep.addEntry("unexpected element [.'$Prereq']", path);
        }
        return res;
    }
    
    // object .'$Prereqs'.'$Phase'
    public boolean _jm_obj_6(Object val, Path path, Report rep)
    {
        if (! json.isObject(val))
        {
            if (rep != null) rep.addEntry("not an object [.'$Prereqs'.'$Phase']", path);
            return false;
        }
        boolean res;
        Iterator<String> prop_loop = json.objectIterator(val);
        while (prop_loop.hasNext())
        {
            String prop = prop_loop.next();
            Object pval = json.objectValue(val, prop);
            Path lpath_6 = new Path(prop, path);
            if (json_model_14(json.strToJSON(prop), (path != null ? lpath_6 : null), rep))
            {
                // handle 1 key props
                // .'$Prereqs'.'$Phase'.'$Relation'
                res = json_model_15(pval, (path != null ? lpath_6 : null), rep);
                if (! res)
                {
                    if (rep != null) rep.addEntry("unexpected $Prereq [.'$Prereqs'.'$Phase'.'$Relation']", (path != null ? lpath_6 : null));
                }
                if (! res)
                {
                    return false;
                }
            }
            else if (_jm_re_1(prop, path, rep))
            {
                // handle 1 re props
                // .'$Prereqs'.'$Phase'.'/^[Xx]_/'
                res = true;
                if (! res)
                {
                    if (rep != null) rep.addEntry("unexpected $ANY [.'$Prereqs'.'$Phase'.'/^[Xx]_/']", (path != null ? lpath_6 : null));
                }
                if (! res)
                {
                    return false;
                }
            }
            else
            {
                if (rep != null) rep.addEntry("unexpected prop [.'$Prereqs'.'$Phase']", (path != null ? lpath_6 : null));
                return false;
            }
        }
        return true;
    }
    
    // object .'$Prereqs'
    public boolean _jm_obj_5(Object val, Path path, Report rep)
    {
        if (! json.isObject(val))
        {
            if (rep != null) rep.addEntry("not an object [.'$Prereqs']", path);
            return false;
        }
        boolean res;
        Iterator<String> prop_loop = json.objectIterator(val);
        while (prop_loop.hasNext())
        {
            String prop = prop_loop.next();
            Object pval = json.objectValue(val, prop);
            Path lpath_5 = new Path(prop, path);
            if (json_model_13(json.strToJSON(prop), (path != null ? lpath_5 : null), rep))
            {
                // handle 1 key props
                // .'$Prereqs'.'$Phase'
                res = _jm_obj_6(pval, (path != null ? lpath_5 : null), rep);
                if (! res)
                {
                    if (rep != null) rep.addEntry("unexpected element [.'$Prereqs'.'$Phase']", (path != null ? lpath_5 : null));
                }
                if (! res)
                {
                    return false;
                }
            }
            else if (_jm_re_1(prop, path, rep))
            {
                // handle 1 re props
                // .'$Prereqs'.'/^[Xx]_/'
                res = true;
                if (! res)
                {
                    if (rep != null) rep.addEntry("unexpected $ANY [.'$Prereqs'.'/^[Xx]_/']", (path != null ? lpath_5 : null));
                }
                if (! res)
                {
                    return false;
                }
            }
            else
            {
                if (rep != null) rep.addEntry("unexpected prop [.'$Prereqs']", (path != null ? lpath_5 : null));
                return false;
            }
        }
        return true;
    }
    
    // check $Prereqs (.'$Prereqs')
    public boolean json_model_16(Object val, Path path, Report rep)
    {
        boolean res;
        // .'$Prereqs'
        res = _jm_obj_5(val, path, rep);
        if (! res)
        {
            if (rep != null) rep.addEntry("unexpected element [.'$Prereqs']", path);
        }
        return res;
    }
    
    // check _jm_obj_7_mup_abstract (.abstract)
    public boolean _jm_f_0(Object val, Path path, Report rep)
    {
        boolean res;
        // .abstract
        res = json.isString(val);
        if (! res)
        {
            if (rep != null) rep.addEntry("unexpected string [.abstract]", path);
        }
        return res;
    }
    
    // object .license.'^'.2
    public boolean _jm_obj_8(Object val, Path path, Report rep)
    {
        if (! json.isObject(val))
        {
            if (rep != null) rep.addEntry("not an object [.license.'^'.2]", path);
            return false;
        }
        boolean res;
        Iterator<String> prop_loop = json.objectIterator(val);
        while (prop_loop.hasNext())
        {
            String prop = prop_loop.next();
            Object pval = json.objectValue(val, prop);
            Path lpath_8 = new Path(prop, path);
            // handle other props
            // .license.'^'.2.''
            res = json.isString(pval) && rt.is_valid_url(json.asString(pval));
            if (! res)
            {
                if (rep != null) rep.addEntry("unexpected $URL [.license.'^'.2.'']", (path != null ? lpath_8 : null));
            }
            if (! res)
            {
                return false;
            }
        }
        return true;
    }
    
    // check _jm_obj_7_mup_license (.license)
    public boolean _jm_f_1(Object val, Path path, Report rep)
    {
        boolean res;
        // .license
        // generic xor list
        long xc_0 = 0;
        boolean xr_0;
        // .license.'^'.0
        xr_0 = json_model_4(val, path, rep);
        if (! xr_0)
        {
            if (rep != null) rep.addEntry("unexpected $License [.license.'^'.0]", path);
        }
        if (xr_0)
        {
            xc_0 += 1;
        }
        // .license.'^'.1
        xr_0 = json_model_5(val, path, rep);
        if (! xr_0)
        {
            if (rep != null) rep.addEntry("unexpected $LicenseList [.license.'^'.1]", path);
        }
        if (xr_0)
        {
            xc_0 += 1;
        }
        if (xc_0 <= 1)
        {
            // .license.'^'.2
            xr_0 = _jm_obj_8(val, path, rep);
            if (! xr_0)
            {
                if (rep != null) rep.addEntry("unexpected element [.license.'^'.2]", path);
            }
            if (xr_0)
            {
                xc_0 += 1;
            }
        }
        res = xc_0 == 1;
        if (res)
        {
            if (rep != null) rep.clearEntries();
        }
        else
        {
            if (rep != null) rep.addEntry("not one model match [.license.'^']", path);
        }
        return res;
    }
    
    // check _jm_obj_7_mup_maintainer (.maintainer)
    public boolean _jm_f_2(Object val, Path path, Report rep)
    {
        boolean res;
        // .maintainer
        // .maintainer.'|'.0
        res = json_model_2(val, path, rep);
        if (! res)
        {
            if (rep != null) rep.addEntry("unexpected $neStr [.maintainer.'|'.0]", path);
        }
        if (! res)
        {
            // .maintainer.'|'.1
            res = json_model_3(val, path, rep);
            if (! res)
            {
                if (rep != null) rep.addEntry("unexpected $neStrList [.maintainer.'|'.1]", path);
            }
        }
        if (res)
        {
            if (rep != null) rep.clearEntries();
        }
        else
        {
            if (rep != null) rep.addEntry("no model matched [.maintainer.'|']", path);
        }
        return res;
    }
    
    // object .'meta-spec'
    public boolean _jm_obj_9(Object val, Path path, Report rep)
    {
        if (! json.isObject(val))
        {
            if (rep != null) rep.addEntry("not an object [.'meta-spec']", path);
            return false;
        }
        boolean res;
        long must_count = 0;
        Iterator<String> prop_loop = json.objectIterator(val);
        while (prop_loop.hasNext())
        {
            String prop = prop_loop.next();
            Object pval = json.objectValue(val, prop);
            Path lpath_9 = new Path(prop, path);
            if (prop.compareTo("version") == 0)
            {
                // handle must version property
                must_count += 1;
                // .'meta-spec'.version
                res = json.isString(pval) && json.asString(pval).compareTo("1.0.0") == 0;
                if (! res)
                {
                    if (rep != null) rep.addEntry("unexpected _1.0.0 [.'meta-spec'.version]", (path != null ? lpath_9 : null));
                }
                if (! res)
                {
                    if (rep != null) rep.addEntry("invalid mandatory prop value [.'meta-spec'.version]", (path != null ? lpath_9 : null));
                    return false;
                }
            }
            else if (prop.compareTo("url") == 0)
            {
                // handle may url property
                // .'meta-spec'.url
                res = json.isString(pval) && rt.is_valid_url(json.asString(pval));
                if (! res)
                {
                    if (rep != null) rep.addEntry("unexpected $URL [.'meta-spec'.url]", (path != null ? lpath_9 : null));
                }
                if (! res)
                {
                    if (rep != null) rep.addEntry("invalid optional prop value [.'meta-spec'.url]", (path != null ? lpath_9 : null));
                    return false;
                }
            }
            else if (_jm_re_1(prop, path, rep))
            {
                // handle 1 re props
                // .'meta-spec'.'/^[Xx]_/'
                res = true;
                if (! res)
                {
                    if (rep != null) rep.addEntry("unexpected $ANY [.'meta-spec'.'/^[Xx]_/']", (path != null ? lpath_9 : null));
                }
                if (! res)
                {
                    return false;
                }
            }
            else
            {
                if (rep != null) rep.addEntry("unexpected prop [.'meta-spec']", (path != null ? lpath_9 : null));
                return false;
            }
        }
        if (must_count != 1)
        {
            if (rep != null)
            {
                if (! json.objectHasProp(val, "version"))
                {
                    if (rep != null) rep.addEntry("missing mandatory prop <version> [.'meta-spec']", path);
                }
            }
            return false;
        }
        return true;
    }
    
    // check _jm_obj_7_mup_meta-spec (.'meta-spec')
    public boolean _jm_f_3(Object val, Path path, Report rep)
    {
        boolean res;
        // .'meta-spec'
        res = _jm_obj_9(val, path, rep);
        if (! res)
        {
            if (rep != null) rep.addEntry("unexpected element [.'meta-spec']", path);
        }
        return res;
    }
    
    // check _jm_obj_7_mup_name (.name)
    public boolean _jm_f_4(Object val, Path path, Report rep)
    {
        boolean res;
        // .name
        res = json_model_2(val, path, rep);
        if (! res)
        {
            if (rep != null) rep.addEntry("unexpected $neStr [.name]", path);
        }
        return res;
    }
    
    // object .provides
    public boolean _jm_obj_10(Object val, Path path, Report rep)
    {
        if (! json.isObject(val))
        {
            if (rep != null) rep.addEntry("not an object [.provides]", path);
            return false;
        }
        boolean res;
        Iterator<String> prop_loop = json.objectIterator(val);
        while (prop_loop.hasNext())
        {
            String prop = prop_loop.next();
            Object pval = json.objectValue(val, prop);
            Path lpath_10 = new Path(prop, path);
            // handle other props
            // .provides.''
            res = json_model_6(pval, (path != null ? lpath_10 : null), rep);
            if (! res)
            {
                if (rep != null) rep.addEntry("unexpected $Provide [.provides.'']", (path != null ? lpath_10 : null));
            }
            if (! res)
            {
                return false;
            }
        }
        return true;
    }
    
    // check _jm_obj_7_mup_provides (.provides)
    public boolean _jm_f_5(Object val, Path path, Report rep)
    {
        boolean res;
        // .provides
        res = _jm_obj_10(val, path, rep);
        if (! res)
        {
            if (rep != null) rep.addEntry("unexpected element [.provides]", path);
        }
        return res;
    }
    
    // check _jm_obj_7_mup_version (.version)
    public boolean _jm_f_6(Object val, Path path, Report rep)
    {
        boolean res;
        // .version
        res = json.isString(val);
        if (! res)
        {
            if (rep != null) rep.addEntry("unexpected string [.version]", path);
        }
        return res;
    }
    
    
    // check _jm_obj_7_map_description (.description)
    public boolean _jm_f_7(Object val, Path path, Report rep)
    {
        boolean res;
        // .description
        res = json.isString(val);
        if (! res)
        {
            if (rep != null) rep.addEntry("unexpected string [.description]", path);
        }
        return res;
    }
    
    // check _jm_obj_7_map_generated_by (.generated_by)
    public boolean _jm_f_8(Object val, Path path, Report rep)
    {
        boolean res;
        // .generated_by
        res = json.isString(val);
        if (! res)
        {
            if (rep != null) rep.addEntry("unexpected string [.generated_by]", path);
        }
        return res;
    }
    
    // object .no_index
    public boolean _jm_obj_11(Object val, Path path, Report rep)
    {
        if (! json.isObject(val))
        {
            if (rep != null) rep.addEntry("not an object [.no_index]", path);
            return false;
        }
        boolean res;
        Iterator<String> prop_loop = json.objectIterator(val);
        while (prop_loop.hasNext())
        {
            String prop = prop_loop.next();
            Object pval = json.objectValue(val, prop);
            Path lpath_11 = new Path(prop, path);
            if (prop.compareTo("file") == 0)
            {
                // handle may file property
                // .no_index.file
                res = json_model_3(pval, (path != null ? lpath_11 : null), rep);
                if (! res)
                {
                    if (rep != null) rep.addEntry("unexpected $neStrList [.no_index.file]", (path != null ? lpath_11 : null));
                }
                if (! res)
                {
                    if (rep != null) rep.addEntry("invalid optional prop value [.no_index.file]", (path != null ? lpath_11 : null));
                    return false;
                }
            }
            else if (prop.compareTo("directory") == 0)
            {
                // handle may directory property
                // .no_index.directory
                res = json_model_3(pval, (path != null ? lpath_11 : null), rep);
                if (! res)
                {
                    if (rep != null) rep.addEntry("unexpected $neStrList [.no_index.directory]", (path != null ? lpath_11 : null));
                }
                if (! res)
                {
                    if (rep != null) rep.addEntry("invalid optional prop value [.no_index.directory]", (path != null ? lpath_11 : null));
                    return false;
                }
            }
            else
            {
                if (rep != null) rep.addEntry("unexpected prop [.no_index]", (path != null ? lpath_11 : null));
                return false;
            }
        }
        return true;
    }
    
    // check _jm_obj_7_map_no_index (.no_index)
    public boolean _jm_f_9(Object val, Path path, Report rep)
    {
        boolean res;
        // .no_index
        res = _jm_obj_11(val, path, rep);
        if (! res)
        {
            if (rep != null) rep.addEntry("unexpected element [.no_index]", path);
        }
        return res;
    }
    
    // check _jm_obj_7_map_prereqs (.prereqs)
    public boolean _jm_f_10(Object val, Path path, Report rep)
    {
        boolean res;
        // .prereqs
        res = json_model_16(val, path, rep);
        if (! res)
        {
            if (rep != null) rep.addEntry("unexpected $Prereqs [.prereqs]", path);
        }
        return res;
    }
    
    // check _jm_obj_7_map_release_status (.release_status)
    public boolean _jm_f_11(Object val, Path path, Report rep)
    {
        boolean res;
        // .release_status
        res = json_model_7(val, path, rep);
        if (! res)
        {
            if (rep != null) rep.addEntry("unexpected $Status [.release_status]", path);
        }
        return res;
    }
    
    // check _jm_obj_7_map_resources (.resources)
    public boolean _jm_f_12(Object val, Path path, Report rep)
    {
        boolean res;
        // .resources
        res = json_model_8(val, path, rep);
        if (! res)
        {
            if (rep != null) rep.addEntry("unexpected $Resources [.resources]", path);
        }
        return res;
    }
    
    // check _jm_obj_7_map_tags (.tags)
    public boolean _jm_f_13(Object val, Path path, Report rep)
    {
        boolean res;
        // .tags
        res = json_model_3(val, path, rep);
        if (! res)
        {
            if (rep != null) rep.addEntry("unexpected $neStrList [.tags]", path);
        }
        return res;
    }
    
    // check _jm_obj_7_map_url (.url)
    public boolean _jm_f_14(Object val, Path path, Report rep)
    {
        boolean res;
        // .url
        res = json.isString(val) && rt.is_valid_url(json.asString(val));
        if (! res)
        {
            if (rep != null) rep.addEntry("unexpected $URL [.url]", path);
        }
        return res;
    }
    
    
    // object .
    public boolean _jm_obj_7(Object val, Path path, Report rep)
    {
        if (! json.isObject(val))
        {
            if (rep != null) rep.addEntry("not an object [.]", path);
            return false;
        }
        boolean res;
        Checker pfun;
        long must_count = 0;
        Iterator<String> prop_loop = json.objectIterator(val);
        while (prop_loop.hasNext())
        {
            String prop = prop_loop.next();
            Object pval = json.objectValue(val, prop);
            Path lpath_7 = new Path(prop, path);
            if ((pfun = _jm_obj_7_mup_pmap.get(prop)) != null)
            {
                // handle 7 mandatory props
                if (pfun != null)
                {
                    must_count += 1;
                    if (! (pfun.call(pval, (path != null ? lpath_7 : null), rep)))
                    {
                        if (rep != null) rep.addEntry("invalid mandatory prop value [.]", (path != null ? lpath_7 : null));
                        return false;
                    }
                }
            }
            else if ((pfun = _jm_obj_7_map_pmap.get(prop)) != null)
            {
                // handle 8 may props
                if (pfun != null && ! (pfun.call(pval, (path != null ? lpath_7 : null), rep)))
                {
                    if (rep != null) rep.addEntry("invalid optional prop value [.]", (path != null ? lpath_7 : null));
                    return false;
                }
            }
            else if (_jm_re_1(prop, path, rep))
            {
                // handle 1 re props
                // .'/^[Xx]_/'
                res = true;
                if (! res)
                {
                    if (rep != null) rep.addEntry("unexpected $ANY [.'/^[Xx]_/']", (path != null ? lpath_7 : null));
                }
                if (! res)
                {
                    return false;
                }
            }
            else
            {
                if (rep != null) rep.addEntry("unexpected prop [.]", (path != null ? lpath_7 : null));
                return false;
            }
        }
        if (must_count != 7)
        {
            if (rep != null)
            {
                if (! json.objectHasProp(val, "abstract"))
                {
                    if (rep != null) rep.addEntry("missing mandatory prop <abstract> [.]", path);
                }
                if (! json.objectHasProp(val, "license"))
                {
                    if (rep != null) rep.addEntry("missing mandatory prop <license> [.]", path);
                }
                if (! json.objectHasProp(val, "maintainer"))
                {
                    if (rep != null) rep.addEntry("missing mandatory prop <maintainer> [.]", path);
                }
                if (! json.objectHasProp(val, "meta-spec"))
                {
                    if (rep != null) rep.addEntry("missing mandatory prop <meta-spec> [.]", path);
                }
                if (! json.objectHasProp(val, "name"))
                {
                    if (rep != null) rep.addEntry("missing mandatory prop <name> [.]", path);
                }
                if (! json.objectHasProp(val, "provides"))
                {
                    if (rep != null) rep.addEntry("missing mandatory prop <provides> [.]", path);
                }
                if (! json.objectHasProp(val, "version"))
                {
                    if (rep != null) rep.addEntry("missing mandatory prop <version> [.]", path);
                }
            }
            return false;
        }
        return true;
    }
    
    // check $ (.)
    public boolean json_model_1(Object val, Path path, Report rep)
    {
        boolean res;
        // .
        res = _jm_obj_7(val, path, rep);
        if (! res)
        {
            if (rep != null) rep.addEntry("unexpected element [.]", path);
        }
        return res;
    }
    

    public void init(JSON json)
    {
        if (!initialized)
        {
            try {
            _jm_re_0_pat = Pattern.compile(".");
            _jm_cst_0_set = new HashSet<Object>();
            _jm_cst_0_set.add(json.safeJSON("\"agpl_3\""));
            _jm_cst_0_set.add(json.safeJSON("\"apache_1_1\""));
            _jm_cst_0_set.add(json.safeJSON("\"apache_2_0\""));
            _jm_cst_0_set.add(json.safeJSON("\"artistic_1\""));
            _jm_cst_0_set.add(json.safeJSON("\"artistic_2\""));
            _jm_cst_0_set.add(json.safeJSON("\"bsd\""));
            _jm_cst_0_set.add(json.safeJSON("\"freebsd\""));
            _jm_cst_0_set.add(json.safeJSON("\"gfdl_1_2\""));
            _jm_cst_0_set.add(json.safeJSON("\"gfdl_1_3\""));
            _jm_cst_0_set.add(json.safeJSON("\"gpl_1\""));
            _jm_cst_0_set.add(json.safeJSON("\"gpl_2\""));
            _jm_cst_0_set.add(json.safeJSON("\"gpl_3\""));
            _jm_cst_0_set.add(json.safeJSON("\"lgpl_2_1\""));
            _jm_cst_0_set.add(json.safeJSON("\"lgpl_3_0\""));
            _jm_cst_0_set.add(json.safeJSON("\"mit\""));
            _jm_cst_0_set.add(json.safeJSON("\"mozilla_1_0\""));
            _jm_cst_0_set.add(json.safeJSON("\"mozilla_1_1\""));
            _jm_cst_0_set.add(json.safeJSON("\"openssl\""));
            _jm_cst_0_set.add(json.safeJSON("\"perl_5\""));
            _jm_cst_0_set.add(json.safeJSON("\"postgresql\""));
            _jm_cst_0_set.add(json.safeJSON("\"qpl_1_0\""));
            _jm_cst_0_set.add(json.safeJSON("\"ssleay\""));
            _jm_cst_0_set.add(json.safeJSON("\"sun\""));
            _jm_cst_0_set.add(json.safeJSON("\"zlib\""));
            _jm_cst_0_set.add(json.safeJSON("\"open_source\""));
            _jm_cst_0_set.add(json.safeJSON("\"restricted\""));
            _jm_cst_0_set.add(json.safeJSON("\"unrestricted\""));
            _jm_cst_0_set.add(json.safeJSON("\"unknown\""));
            _jm_re_1_pat = Pattern.compile("^[Xx]_");
            _jm_cst_1_set = new HashSet<Object>();
            _jm_cst_1_set.add(json.safeJSON("\"stable\""));
            _jm_cst_1_set.add(json.safeJSON("\"testing\""));
            _jm_cst_1_set.add(json.safeJSON("\"unstable\""));
            _jm_re_2_pat = Pattern.compile("^\\d+\\.\\d+\\.\\d+[-_A-Za-z0-9]*$");
            _jm_re_3_pat = Pattern.compile("^(<=|<|>=|>|!=|==)$");
            _jm_re_4_pat = Pattern.compile("^\\s*(<=|<|>=|>|!=|==)\\s*(\\d+\\.\\d+\\.\\d+[-_A-Za-z0-9]*)\\s*(,\\s*(<=|<|>=|>|!=|==)\\s*(\\d+\\.\\d+\\.\\d+[-_A-Za-z0-9]*))*\\s*$");
            _jm_cst_2_set = new HashSet<Object>();
            _jm_cst_2_set.add(json.safeJSON("\"configure\""));
            _jm_cst_2_set.add(json.safeJSON("\"build\""));
            _jm_cst_2_set.add(json.safeJSON("\"test\""));
            _jm_cst_2_set.add(json.safeJSON("\"runtime\""));
            _jm_cst_2_set.add(json.safeJSON("\"develop\""));
            _jm_cst_3_set = new HashSet<Object>();
            _jm_cst_3_set.add(json.safeJSON("\"requires\""));
            _jm_cst_3_set.add(json.safeJSON("\"recommends\""));
            _jm_cst_3_set.add(json.safeJSON("\"suggests\""));
            _jm_cst_3_set.add(json.safeJSON("\"conflicts\""));
            _jm_obj_7_mup_pmap = new HashMap<String, Checker>();
            _jm_obj_7_mup_pmap.put("abstract", new Checker() { public boolean call(Object o, Path p, Report r) { return _jm_f_0(o, p, r);} });
            _jm_obj_7_mup_pmap.put("license", new Checker() { public boolean call(Object o, Path p, Report r) { return _jm_f_1(o, p, r);} });
            _jm_obj_7_mup_pmap.put("maintainer", new Checker() { public boolean call(Object o, Path p, Report r) { return _jm_f_2(o, p, r);} });
            _jm_obj_7_mup_pmap.put("meta-spec", new Checker() { public boolean call(Object o, Path p, Report r) { return _jm_f_3(o, p, r);} });
            _jm_obj_7_mup_pmap.put("name", new Checker() { public boolean call(Object o, Path p, Report r) { return _jm_f_4(o, p, r);} });
            _jm_obj_7_mup_pmap.put("provides", new Checker() { public boolean call(Object o, Path p, Report r) { return _jm_f_5(o, p, r);} });
            _jm_obj_7_mup_pmap.put("version", new Checker() { public boolean call(Object o, Path p, Report r) { return _jm_f_6(o, p, r);} });
            _jm_obj_7_map_pmap = new HashMap<String, Checker>();
            _jm_obj_7_map_pmap.put("description", new Checker() { public boolean call(Object o, Path p, Report r) { return _jm_f_7(o, p, r);} });
            _jm_obj_7_map_pmap.put("generated_by", new Checker() { public boolean call(Object o, Path p, Report r) { return _jm_f_8(o, p, r);} });
            _jm_obj_7_map_pmap.put("no_index", new Checker() { public boolean call(Object o, Path p, Report r) { return _jm_f_9(o, p, r);} });
            _jm_obj_7_map_pmap.put("prereqs", new Checker() { public boolean call(Object o, Path p, Report r) { return _jm_f_10(o, p, r);} });
            _jm_obj_7_map_pmap.put("release_status", new Checker() { public boolean call(Object o, Path p, Report r) { return _jm_f_11(o, p, r);} });
            _jm_obj_7_map_pmap.put("resources", new Checker() { public boolean call(Object o, Path p, Report r) { return _jm_f_12(o, p, r);} });
            _jm_obj_7_map_pmap.put("tags", new Checker() { public boolean call(Object o, Path p, Report r) { return _jm_f_13(o, p, r);} });
            _jm_obj_7_map_pmap.put("url", new Checker() { public boolean call(Object o, Path p, Report r) { return _jm_f_14(o, p, r);} });
            pgxn_map_pmap = new HashMap<String, Checker>();
            pgxn_map_pmap.put("", new Checker() { public boolean call(Object o, Path p, Report r) { return json_model_1(o, p, r);} });
            pgxn_map_pmap.put("neStr", new Checker() { public boolean call(Object o, Path p, Report r) { return json_model_2(o, p, r);} });
            pgxn_map_pmap.put("neStrList", new Checker() { public boolean call(Object o, Path p, Report r) { return json_model_3(o, p, r);} });
            pgxn_map_pmap.put("License", new Checker() { public boolean call(Object o, Path p, Report r) { return json_model_4(o, p, r);} });
            pgxn_map_pmap.put("LicenseList", new Checker() { public boolean call(Object o, Path p, Report r) { return json_model_5(o, p, r);} });
            pgxn_map_pmap.put("Provide", new Checker() { public boolean call(Object o, Path p, Report r) { return json_model_6(o, p, r);} });
            pgxn_map_pmap.put("Status", new Checker() { public boolean call(Object o, Path p, Report r) { return json_model_7(o, p, r);} });
            pgxn_map_pmap.put("Resources", new Checker() { public boolean call(Object o, Path p, Report r) { return json_model_8(o, p, r);} });
            pgxn_map_pmap.put("SemVer", new Checker() { public boolean call(Object o, Path p, Report r) { return json_model_9(o, p, r);} });
            pgxn_map_pmap.put("Version", new Checker() { public boolean call(Object o, Path p, Report r) { return json_model_10(o, p, r);} });
            pgxn_map_pmap.put("Ops", new Checker() { public boolean call(Object o, Path p, Report r) { return json_model_11(o, p, r);} });
            pgxn_map_pmap.put("VersionRange", new Checker() { public boolean call(Object o, Path p, Report r) { return json_model_12(o, p, r);} });
            pgxn_map_pmap.put("Phase", new Checker() { public boolean call(Object o, Path p, Report r) { return json_model_13(o, p, r);} });
            pgxn_map_pmap.put("Relation", new Checker() { public boolean call(Object o, Path p, Report r) { return json_model_14(o, p, r);} });
            pgxn_map_pmap.put("Prereq", new Checker() { public boolean call(Object o, Path p, Report r) { return json_model_15(o, p, r);} });
            pgxn_map_pmap.put("Prereqs", new Checker() { public boolean call(Object o, Path p, Report r) { return json_model_16(o, p, r);} });
                super.init(json);
            }
            catch (Exception e) {
                throw new Error("cannot initialized model checker: " + e);
            }
        }
    }

    public void free()
    {
        if (initialized)
        {
            super.free();
            _jm_re_0_pat = null;
            _jm_cst_0_set = null;
            _jm_re_1_pat = null;
            _jm_cst_1_set = null;
            _jm_re_2_pat = null;
            _jm_re_3_pat = null;
            _jm_re_4_pat = null;
            _jm_cst_2_set = null;
            _jm_cst_3_set = null;
            _jm_obj_7_mup_pmap = null;
            _jm_obj_7_map_pmap = null;
            pgxn_map_pmap = null;
        }
    }

    public Checker get(String name)
    {
        return pgxn_map_pmap.get(name);
    }

    public Set<String> models()
    {
        return pgxn_map_pmap.keySet();
    }

    static public void main(String[] args) throws Exception
    {
        ModelChecker checker = new pgxn();
        Main.main("pgxn", checker, VERSION, args);
    }
}
