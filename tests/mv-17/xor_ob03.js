#! /bin/env node
// we may need require to load re2
import { createRequire } from 'node:module';
const require = createRequire(import.meta.url);
//
// Generated by JSON Model Compiler version 2
// see https://github.com/clairey-zx81/json-model
//
import * as runtime from "json_model_runtime"
const JSON_MODEL_VERSION = "2";

let _jm_map_0 = new Map()
var check_model_map = new Map()

// object .movie.'|'.0
function _jm_obj_0(val, path, rep)
{
    // check close must only props
    if (! (Object.prototype.toString.call(val) === '[object Object]'))
    {
        rep !== null && rep.push(["not an object [.movie.'|'.0]", path])
        return false;
    }
    if (Object.keys(val).length != 2)
    {
        rep !== null && rep.push(["bad property count [.movie.'|'.0]", path])
        return false;
    }
    let lpath;
    let pval;
    let res;
    if (! val.hasOwnProperty("t"))
    {
        rep !== null && rep.push(["missing mandatory prop <t> [.movie.'|'.0]", path])
        return false;
    }
    lpath = path ? path.concat(["t"]) : null;
    pval = val["t"];
    // .movie.'|'.0.t
    res = ((typeof pval === 'string' || pval instanceof String)) && pval == "fr";
    if (! res)
    {
        rep !== null && rep.push(["unexpected fr [.movie.'|'.0.t]", (path ? lpath : null)])
        rep !== null && rep.push(["unexpected value for mandatory prop <t> [.movie.'|'.0]", (path ? lpath : null)])
        return false;
    }
    if (! val.hasOwnProperty("titre"))
    {
        rep !== null && rep.push(["missing mandatory prop <titre> [.movie.'|'.0]", path])
        return false;
    }
    lpath = path ? path.concat(["titre"]) : null;
    pval = val["titre"];
    // .movie.'|'.0.titre
    res = (typeof pval === 'string' || pval instanceof String);
    if (! res)
    {
        rep !== null && rep.push(["unexpected string [.movie.'|'.0.titre]", (path ? lpath : null)])
        rep !== null && rep.push(["unexpected value for mandatory prop <titre> [.movie.'|'.0]", (path ? lpath : null)])
        return false;
    }
    return true;
}

// object .movie.'|'.1
function _jm_obj_1(val, path, rep)
{
    // check close must only props
    if (! (Object.prototype.toString.call(val) === '[object Object]'))
    {
        rep !== null && rep.push(["not an object [.movie.'|'.1]", path])
        return false;
    }
    if (Object.keys(val).length != 2)
    {
        rep !== null && rep.push(["bad property count [.movie.'|'.1]", path])
        return false;
    }
    let lpath;
    let pval;
    let res;
    if (! val.hasOwnProperty("t"))
    {
        rep !== null && rep.push(["missing mandatory prop <t> [.movie.'|'.1]", path])
        return false;
    }
    lpath = path ? path.concat(["t"]) : null;
    pval = val["t"];
    // .movie.'|'.1.t
    res = ((typeof pval === 'string' || pval instanceof String)) && pval == "en";
    if (! res)
    {
        rep !== null && rep.push(["unexpected en [.movie.'|'.1.t]", (path ? lpath : null)])
        rep !== null && rep.push(["unexpected value for mandatory prop <t> [.movie.'|'.1]", (path ? lpath : null)])
        return false;
    }
    if (! val.hasOwnProperty("title"))
    {
        rep !== null && rep.push(["missing mandatory prop <title> [.movie.'|'.1]", path])
        return false;
    }
    lpath = path ? path.concat(["title"]) : null;
    pval = val["title"];
    // .movie.'|'.1.title
    res = (typeof pval === 'string' || pval instanceof String);
    if (! res)
    {
        rep !== null && rep.push(["unexpected string [.movie.'|'.1.title]", (path ? lpath : null)])
        rep !== null && rep.push(["unexpected value for mandatory prop <title> [.movie.'|'.1]", (path ? lpath : null)])
        return false;
    }
    return true;
}

// object .movie.'|'.2
function _jm_obj_2(val, path, rep)
{
    // check close must only props
    if (! (Object.prototype.toString.call(val) === '[object Object]'))
    {
        rep !== null && rep.push(["not an object [.movie.'|'.2]", path])
        return false;
    }
    if (Object.keys(val).length != 2)
    {
        rep !== null && rep.push(["bad property count [.movie.'|'.2]", path])
        return false;
    }
    let lpath;
    let pval;
    let res;
    if (! val.hasOwnProperty("t"))
    {
        rep !== null && rep.push(["missing mandatory prop <t> [.movie.'|'.2]", path])
        return false;
    }
    lpath = path ? path.concat(["t"]) : null;
    pval = val["t"];
    // .movie.'|'.2.t
    res = ((typeof pval === 'string' || pval instanceof String)) && pval == "ru";
    if (! res)
    {
        rep !== null && rep.push(["unexpected ru [.movie.'|'.2.t]", (path ? lpath : null)])
        rep !== null && rep.push(["unexpected value for mandatory prop <t> [.movie.'|'.2]", (path ? lpath : null)])
        return false;
    }
    if (! val.hasOwnProperty("suti"))
    {
        rep !== null && rep.push(["missing mandatory prop <suti> [.movie.'|'.2]", path])
        return false;
    }
    lpath = path ? path.concat(["suti"]) : null;
    pval = val["suti"];
    // .movie.'|'.2.suti
    res = (typeof pval === 'string' || pval instanceof String);
    if (! res)
    {
        rep !== null && rep.push(["unexpected string [.movie.'|'.2.suti]", (path ? lpath : null)])
        rep !== null && rep.push(["unexpected value for mandatory prop <suti> [.movie.'|'.2]", (path ? lpath : null)])
        return false;
    }
    return true;
}


// check $ (.)
function json_model_1(val, path, rep)
{
    // exemple d'un rapport
    // .
    // check close must only props
    if (! (Object.prototype.toString.call(val) === '[object Object]'))
    {
        rep !== null && rep.push(["not an object [.]", path])
        return false;
    }
    if (Object.keys(val).length != 1)
    {
        rep !== null && rep.push(["bad property count [.]", path])
        return false;
    }
    let lpath;
    let pval;
    let res;
    if (! val.hasOwnProperty("movie"))
    {
        rep !== null && rep.push(["missing mandatory prop <movie> [.]", path])
        return false;
    }
    lpath = path ? path.concat(["movie"]) : null;
    pval = val["movie"];
    // .movie
    let iso_0 = Object.prototype.toString.call(pval) === '[object Object]';
    res = iso_0;
    if (res)
    {
        if (pval.hasOwnProperty("t"))
        {
            let tag_0 = pval["t"];
            let fun_0 = _jm_map_0.get(tag_0);
            if (fun_0 !== undefined)
            {
                res = fun_0(pval, (path ? lpath : null), rep);
            }
            else
            {
                res = false;
                rep !== null && rep.push(["tag <t> value not found [.movie.'|']", (path ? lpath : null)])
            }
        }
        else
        {
            res = false;
            rep !== null && rep.push(["tag prop <t> is missing [.movie.'|']", (path ? lpath : null)])
        }
    }
    else
    {
        rep !== null && rep.push(["value is not an object [.movie.'|']", (path ? lpath : null)])
    }
    if (! res)
    {
        rep !== null && rep.push(["unexpected value for mandatory prop <movie> [.]", (path ? lpath : null)])
        return false;
    }
    return true;
}


var initialized = false

// differed module initializations
export function check_model_init()
{
    if (! initialized)
    {
        initialized = true;
        runtime.jm_set_rx(RegExp)
        _jm_map_0.set("fr", _jm_obj_0)
        _jm_map_0.set("en", _jm_obj_1)
        _jm_map_0.set("ru", _jm_obj_2)
        check_model_map.set("", json_model_1)
    }
}

// differed module cleanup
export function check_model_free()
{
    if (initialized)
    {
        initialized = false;
    }
}

export function check_model(val, name, rep)
{
    let checker = check_model_map.get(name)
    if (checker === undefined)
        throw `no checker for "${name}"`
    let path = rep !== null ? [] : null

    return checker(val, path, rep)
}

// possibly run as main based on a guess
import main from "json_model_runtime/main.js"

if (import.meta.url.endsWith(process.argv[1]))
    main(check_model_init, check_model, check_model_free)
