//
// Generated by JSON Model Compiler version 2
// see https://github.com/clairey-zx81/json-model
//

import json_model.*;
import java.util.Map;
import java.util.Set;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Iterator;
import java.util.regex.Pattern;
import java.util.regex.Matcher;

@SuppressWarnings("unchecked")
public class xor_ob01 extends ModelChecker
{
    static public final String VERSION = "2";

    public Map<String, Checker> xor_ob01_map_pmap;

    // object .'$Bb'.'|'.1
    public boolean _jm_obj_0(Object val, Path path, Report rep)
    {
        if (! json.isObject(val))
        {
            if (rep != null) rep.addEntry("not an object [.'$Bb'.'|'.1]", path);
            return false;
        }
        boolean res;
        long must_count = 0;
        Iterator<String> prop_loop = json.objectIterator(val);
        while (prop_loop.hasNext())
        {
            String prop = prop_loop.next();
            Object pval = json.objectValue(val, prop);
            Path lpath_0 = new Path(prop, path);
            if (prop.compareTo("b") == 0)
            {
                // handle must b property
                must_count += 1;
                // .'$Bb'.'|'.1.b
                res = json.isInteger(pval) && json.asLong(pval) >= 0;
                if (! res)
                {
                    if (rep != null) rep.addEntry("not a 0 strict int [.'$Bb'.'|'.1.b]", (path != null ? lpath_0 : null));
                    if (rep != null) rep.addEntry("invalid mandatory prop value [.'$Bb'.'|'.1.b]", (path != null ? lpath_0 : null));
                    return false;
                }
            }
            else
            {
                if (rep != null) rep.addEntry("unexpected prop [.'$Bb'.'|'.1]", (path != null ? lpath_0 : null));
                return false;
            }
        }
        if (must_count != 1)
        {
            if (rep != null)
            {
                if (! json.objectHasProp(val, "b"))
                {
                    if (rep != null) rep.addEntry("missing mandatory prop <b> [.'$Bb'.'|'.1]", path);
                }
            }
            return false;
        }
        return true;
    }

    // object .'$Bb'.'|'.0
    public boolean _jm_obj_1(Object val, Path path, Report rep)
    {
        if (! json.isObject(val))
        {
            if (rep != null) rep.addEntry("not an object [.'$Bb'.'|'.0]", path);
            return false;
        }
        boolean res;
        long must_count = 0;
        Iterator<String> prop_loop = json.objectIterator(val);
        while (prop_loop.hasNext())
        {
            String prop = prop_loop.next();
            Object pval = json.objectValue(val, prop);
            Path lpath_1 = new Path(prop, path);
            if (prop.compareTo("a") == 0)
            {
                // handle must a property
                must_count += 1;
                // .'$Bb'.'|'.0.a
                res = json.isInteger(pval) && json.asLong(pval) >= 0;
                if (! res)
                {
                    if (rep != null) rep.addEntry("not a 0 strict int [.'$Bb'.'|'.0.a]", (path != null ? lpath_1 : null));
                    if (rep != null) rep.addEntry("invalid mandatory prop value [.'$Bb'.'|'.0.a]", (path != null ? lpath_1 : null));
                    return false;
                }
            }
            else
            {
                if (rep != null) rep.addEntry("unexpected prop [.'$Bb'.'|'.0]", (path != null ? lpath_1 : null));
                return false;
            }
        }
        if (must_count != 1)
        {
            if (rep != null)
            {
                if (! json.objectHasProp(val, "a"))
                {
                    if (rep != null) rep.addEntry("missing mandatory prop <a> [.'$Bb'.'|'.0]", path);
                }
            }
            return false;
        }
        return true;
    }

    // check $Bb (.'$Bb')
    public boolean json_model_2(Object val, Path path, Report rep)
    {
        boolean res;
        // .'$Bb'
        res = json.isObject(val);
        if (! res)
        {
            if (rep != null) rep.addEntry("unexpected type [.'$Bb'.'|']", path);
        }
        if (res)
        {
            // .'$Bb'.'|'.0
            res = _jm_obj_1(val, path, rep);
            if (! res)
            {
                if (rep != null) rep.addEntry("unexpected element [.'$Bb'.'|'.0]", path);
            }
            if (! res)
            {
                // .'$Bb'.'|'.1
                res = _jm_obj_0(val, path, rep);
                if (! res)
                {
                    if (rep != null) rep.addEntry("unexpected element [.'$Bb'.'|'.1]", path);
                }
            }
            if (res)
            {
                if (rep != null) rep.clearEntries();
            }
            else
            {
                if (rep != null) rep.addEntry("no model matched [.'$Bb'.'|']", path);
            }
        }
        return res;
    }

    // object .'$Cc'.'|'.1
    public boolean _jm_obj_2(Object val, Path path, Report rep)
    {
        if (! json.isObject(val))
        {
            if (rep != null) rep.addEntry("not an object [.'$Cc'.'|'.1]", path);
            return false;
        }
        boolean res;
        long must_count = 0;
        Iterator<String> prop_loop = json.objectIterator(val);
        while (prop_loop.hasNext())
        {
            String prop = prop_loop.next();
            Object pval = json.objectValue(val, prop);
            Path lpath_2 = new Path(prop, path);
            if (prop.compareTo("c") == 0)
            {
                // handle must c property
                must_count += 1;
                // .'$Cc'.'|'.1.c
                res = json.isInteger(pval) && json.asLong(pval) >= 0;
                if (! res)
                {
                    if (rep != null) rep.addEntry("not a 0 strict int [.'$Cc'.'|'.1.c]", (path != null ? lpath_2 : null));
                    if (rep != null) rep.addEntry("invalid mandatory prop value [.'$Cc'.'|'.1.c]", (path != null ? lpath_2 : null));
                    return false;
                }
            }
            else
            {
                if (rep != null) rep.addEntry("unexpected prop [.'$Cc'.'|'.1]", (path != null ? lpath_2 : null));
                return false;
            }
        }
        if (must_count != 1)
        {
            if (rep != null)
            {
                if (! json.objectHasProp(val, "c"))
                {
                    if (rep != null) rep.addEntry("missing mandatory prop <c> [.'$Cc'.'|'.1]", path);
                }
            }
            return false;
        }
        return true;
    }

    // object .'$Cc'.'|'.0
    public boolean _jm_obj_3(Object val, Path path, Report rep)
    {
        if (! json.isObject(val))
        {
            if (rep != null) rep.addEntry("not an object [.'$Cc'.'|'.0]", path);
            return false;
        }
        boolean res;
        long must_count = 0;
        Iterator<String> prop_loop = json.objectIterator(val);
        while (prop_loop.hasNext())
        {
            String prop = prop_loop.next();
            Object pval = json.objectValue(val, prop);
            Path lpath_3 = new Path(prop, path);
            if (prop.compareTo("a") == 0)
            {
                // handle must a property
                must_count += 1;
                // .'$Cc'.'|'.0.a
                res = json.isInteger(pval) && json.asLong(pval) >= 0;
                if (! res)
                {
                    if (rep != null) rep.addEntry("not a 0 strict int [.'$Cc'.'|'.0.a]", (path != null ? lpath_3 : null));
                    if (rep != null) rep.addEntry("invalid mandatory prop value [.'$Cc'.'|'.0.a]", (path != null ? lpath_3 : null));
                    return false;
                }
            }
            else
            {
                if (rep != null) rep.addEntry("unexpected prop [.'$Cc'.'|'.0]", (path != null ? lpath_3 : null));
                return false;
            }
        }
        if (must_count != 1)
        {
            if (rep != null)
            {
                if (! json.objectHasProp(val, "a"))
                {
                    if (rep != null) rep.addEntry("missing mandatory prop <a> [.'$Cc'.'|'.0]", path);
                }
            }
            return false;
        }
        return true;
    }

    // check $Cc (.'$Cc')
    public boolean json_model_3(Object val, Path path, Report rep)
    {
        boolean res;
        // .'$Cc'
        res = json.isObject(val);
        if (! res)
        {
            if (rep != null) rep.addEntry("unexpected type [.'$Cc'.'|']", path);
        }
        if (res)
        {
            // .'$Cc'.'|'.0
            res = _jm_obj_3(val, path, rep);
            if (! res)
            {
                if (rep != null) rep.addEntry("unexpected element [.'$Cc'.'|'.0]", path);
            }
            if (! res)
            {
                // .'$Cc'.'|'.1
                res = _jm_obj_2(val, path, rep);
                if (! res)
                {
                    if (rep != null) rep.addEntry("unexpected element [.'$Cc'.'|'.1]", path);
                }
            }
            if (res)
            {
                if (rep != null) rep.clearEntries();
            }
            else
            {
                if (rep != null) rep.addEntry("no model matched [.'$Cc'.'|']", path);
            }
        }
        return res;
    }

    // object .'|'.3
    public boolean _jm_obj_4(Object val, Path path, Report rep)
    {
        if (! json.isObject(val))
        {
            if (rep != null) rep.addEntry("not an object [.'|'.3]", path);
            return false;
        }
        boolean res;
        long must_count = 0;
        Iterator<String> prop_loop = json.objectIterator(val);
        while (prop_loop.hasNext())
        {
            String prop = prop_loop.next();
            Object pval = json.objectValue(val, prop);
            Path lpath_4 = new Path(prop, path);
            if (prop.compareTo("b") == 0)
            {
                // handle must b property
                must_count += 1;
                // .'|'.3.b
                res = json.isInteger(pval) && json.asLong(pval) >= 0;
                if (! res)
                {
                    if (rep != null) rep.addEntry("not a 0 strict int [.'|'.3.b]", (path != null ? lpath_4 : null));
                    if (rep != null) rep.addEntry("invalid mandatory prop value [.'|'.3.b]", (path != null ? lpath_4 : null));
                    return false;
                }
            }
            else if (prop.compareTo("c") == 0)
            {
                // handle must c property
                must_count += 1;
                // .'|'.3.c
                res = json.isInteger(pval) && json.asLong(pval) >= 0;
                if (! res)
                {
                    if (rep != null) rep.addEntry("not a 0 strict int [.'|'.3.c]", (path != null ? lpath_4 : null));
                    if (rep != null) rep.addEntry("invalid mandatory prop value [.'|'.3.c]", (path != null ? lpath_4 : null));
                    return false;
                }
            }
            else
            {
                if (rep != null) rep.addEntry("unexpected prop [.'|'.3]", (path != null ? lpath_4 : null));
                return false;
            }
        }
        if (must_count != 2)
        {
            if (rep != null)
            {
                if (! json.objectHasProp(val, "b"))
                {
                    if (rep != null) rep.addEntry("missing mandatory prop <b> [.'|'.3]", path);
                }
                if (! json.objectHasProp(val, "c"))
                {
                    if (rep != null) rep.addEntry("missing mandatory prop <c> [.'|'.3]", path);
                }
            }
            return false;
        }
        return true;
    }

    // object .'|'.2
    public boolean _jm_obj_5(Object val, Path path, Report rep)
    {
        if (! json.isObject(val))
        {
            if (rep != null) rep.addEntry("not an object [.'|'.2]", path);
            return false;
        }
        boolean res;
        long must_count = 0;
        Iterator<String> prop_loop = json.objectIterator(val);
        while (prop_loop.hasNext())
        {
            String prop = prop_loop.next();
            Object pval = json.objectValue(val, prop);
            Path lpath_5 = new Path(prop, path);
            if (prop.compareTo("b") == 0)
            {
                // handle must b property
                must_count += 1;
                // .'|'.2.b
                res = json.isInteger(pval) && json.asLong(pval) >= 0;
                if (! res)
                {
                    if (rep != null) rep.addEntry("not a 0 strict int [.'|'.2.b]", (path != null ? lpath_5 : null));
                    if (rep != null) rep.addEntry("invalid mandatory prop value [.'|'.2.b]", (path != null ? lpath_5 : null));
                    return false;
                }
            }
            else if (prop.compareTo("a") == 0)
            {
                // handle must a property
                must_count += 1;
                // .'|'.2.a
                res = json.isInteger(pval) && json.asLong(pval) >= 0;
                if (! res)
                {
                    if (rep != null) rep.addEntry("not a 0 strict int [.'|'.2.a]", (path != null ? lpath_5 : null));
                    if (rep != null) rep.addEntry("invalid mandatory prop value [.'|'.2.a]", (path != null ? lpath_5 : null));
                    return false;
                }
            }
            else
            {
                if (rep != null) rep.addEntry("unexpected prop [.'|'.2]", (path != null ? lpath_5 : null));
                return false;
            }
        }
        if (must_count != 2)
        {
            if (rep != null)
            {
                if (! json.objectHasProp(val, "a"))
                {
                    if (rep != null) rep.addEntry("missing mandatory prop <a> [.'|'.2]", path);
                }
                if (! json.objectHasProp(val, "b"))
                {
                    if (rep != null) rep.addEntry("missing mandatory prop <b> [.'|'.2]", path);
                }
            }
            return false;
        }
        return true;
    }

    // object .'|'.1
    public boolean _jm_obj_6(Object val, Path path, Report rep)
    {
        if (! json.isObject(val))
        {
            if (rep != null) rep.addEntry("not an object [.'|'.1]", path);
            return false;
        }
        boolean res;
        long must_count = 0;
        Iterator<String> prop_loop = json.objectIterator(val);
        while (prop_loop.hasNext())
        {
            String prop = prop_loop.next();
            Object pval = json.objectValue(val, prop);
            Path lpath_6 = new Path(prop, path);
            if (prop.compareTo("a") == 0)
            {
                // handle must a property
                must_count += 1;
                // .'|'.1.a
                res = json.isInteger(pval) && json.asLong(pval) >= 0;
                if (! res)
                {
                    if (rep != null) rep.addEntry("not a 0 strict int [.'|'.1.a]", (path != null ? lpath_6 : null));
                    if (rep != null) rep.addEntry("invalid mandatory prop value [.'|'.1.a]", (path != null ? lpath_6 : null));
                    return false;
                }
            }
            else if (prop.compareTo("c") == 0)
            {
                // handle must c property
                must_count += 1;
                // .'|'.1.c
                res = json.isInteger(pval) && json.asLong(pval) >= 0;
                if (! res)
                {
                    if (rep != null) rep.addEntry("not a 0 strict int [.'|'.1.c]", (path != null ? lpath_6 : null));
                    if (rep != null) rep.addEntry("invalid mandatory prop value [.'|'.1.c]", (path != null ? lpath_6 : null));
                    return false;
                }
            }
            else
            {
                if (rep != null) rep.addEntry("unexpected prop [.'|'.1]", (path != null ? lpath_6 : null));
                return false;
            }
        }
        if (must_count != 2)
        {
            if (rep != null)
            {
                if (! json.objectHasProp(val, "a"))
                {
                    if (rep != null) rep.addEntry("missing mandatory prop <a> [.'|'.1]", path);
                }
                if (! json.objectHasProp(val, "c"))
                {
                    if (rep != null) rep.addEntry("missing mandatory prop <c> [.'|'.1]", path);
                }
            }
            return false;
        }
        return true;
    }

    // object .'|'.0
    public boolean _jm_obj_7(Object val, Path path, Report rep)
    {
        if (! json.isObject(val))
        {
            if (rep != null) rep.addEntry("not an object [.'|'.0]", path);
            return false;
        }
        boolean res;
        long must_count = 0;
        Iterator<String> prop_loop = json.objectIterator(val);
        while (prop_loop.hasNext())
        {
            String prop = prop_loop.next();
            Object pval = json.objectValue(val, prop);
            Path lpath_7 = new Path(prop, path);
            if (prop.compareTo("a") == 0)
            {
                // handle must a property
                must_count += 1;
                // .'|'.0.a
                res = json.isInteger(pval) && json.asLong(pval) >= 0;
                if (! res)
                {
                    if (rep != null) rep.addEntry("not a 0 strict int [.'|'.0.a]", (path != null ? lpath_7 : null));
                    if (rep != null) rep.addEntry("invalid mandatory prop value [.'|'.0.a]", (path != null ? lpath_7 : null));
                    return false;
                }
            }
            else
            {
                if (rep != null) rep.addEntry("unexpected prop [.'|'.0]", (path != null ? lpath_7 : null));
                return false;
            }
        }
        if (must_count != 1)
        {
            if (rep != null)
            {
                if (! json.objectHasProp(val, "a"))
                {
                    if (rep != null) rep.addEntry("missing mandatory prop <a> [.'|'.0]", path);
                }
            }
            return false;
        }
        return true;
    }

    // check $ (.)
    public boolean json_model_1(Object val, Path path, Report rep)
    {
        boolean res;
        // CAUTION ba is currently valid…
        // .
        res = json.isObject(val);
        if (! res)
        {
            if (rep != null) rep.addEntry("unexpected type [.'|']", path);
        }
        if (res)
        {
            // .'|'.0
            res = _jm_obj_7(val, path, rep);
            if (! res)
            {
                if (rep != null) rep.addEntry("unexpected element [.'|'.0]", path);
            }
            if (! res)
            {
                // .'|'.1
                res = _jm_obj_6(val, path, rep);
                if (! res)
                {
                    if (rep != null) rep.addEntry("unexpected element [.'|'.1]", path);
                }
                if (! res)
                {
                    // .'|'.2
                    res = _jm_obj_5(val, path, rep);
                    if (! res)
                    {
                        if (rep != null) rep.addEntry("unexpected element [.'|'.2]", path);
                    }
                    if (! res)
                    {
                        // .'|'.3
                        res = _jm_obj_4(val, path, rep);
                        if (! res)
                        {
                            if (rep != null) rep.addEntry("unexpected element [.'|'.3]", path);
                        }
                    }
                }
            }
            if (res)
            {
                if (rep != null) rep.clearEntries();
            }
            else
            {
                if (rep != null) rep.addEntry("no model matched [.'|']", path);
            }
        }
        return res;
    }


    public void init(JSON json)
    {
        if (!initialized)
        {
            try {
            xor_ob01_map_pmap = new HashMap<String, Checker>();
            xor_ob01_map_pmap.put("", new Checker() { public boolean call(Object o, Path p, Report r) { return json_model_1(o, p, r);} });
            xor_ob01_map_pmap.put("Bb", new Checker() { public boolean call(Object o, Path p, Report r) { return json_model_2(o, p, r);} });
            xor_ob01_map_pmap.put("Cc", new Checker() { public boolean call(Object o, Path p, Report r) { return json_model_3(o, p, r);} });
                super.init(json);
            }
            catch (Exception e) {
                throw new Error("cannot initialized model checker: " + e);
            }
        }
    }

    public void free()
    {
        if (initialized)
        {
            super.free();
            xor_ob01_map_pmap = null;
        }
    }

    public Checker get(String name)
    {
        return xor_ob01_map_pmap.get(name);
    }

    public Set<String> models()
    {
        return xor_ob01_map_pmap.keySet();
    }

    static public void main(String[] args) throws Exception
    {
        ModelChecker checker = new xor_ob01();
        Main.main("xor_ob01", checker, VERSION, args);
    }
}
