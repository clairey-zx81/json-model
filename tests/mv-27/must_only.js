#! /bin/env node
// we may need require to load re2
import { createRequire } from 'node:module';
const require = createRequire(import.meta.url);
//
// Generated by JSON Model Compiler version 2
// see https://github.com/clairey-zx81/json-model
//
import * as runtime from "json_model_runtime"
const JSON_MODEL_VERSION = "2";

var check_model_map = new Map()

// object .mo0
function _jm_obj_0(val, path, rep)
{
    return Object.prototype.toString.call(val) === '[object Object]' && Object.keys(val).length == 0;
}

// object .mo1
function _jm_obj_1(val, path, rep)
{
    // check close must only props
    if (! (Object.prototype.toString.call(val) === '[object Object]'))
    {
        return false;
    }
    if (Object.keys(val).length != 1)
    {
        return false;
    }
    let pval;
    let res;
    if (! val.hasOwnProperty("p10"))
    {
        return false;
    }
    pval = val["p10"];
    // .mo1.p10
    return ((typeof pval === 'number' || pval instanceof Number) && Number.isInteger(pval)) && pval >= 0;
}

// object .mo2
function _jm_obj_2(val, path, rep)
{
    // check close must only props
    if (! (Object.prototype.toString.call(val) === '[object Object]'))
    {
        return false;
    }
    if (Object.keys(val).length != 2)
    {
        return false;
    }
    let pval;
    let res;
    if (! val.hasOwnProperty("p20"))
    {
        return false;
    }
    pval = val["p20"];
    // .mo2.p20
    res = ((typeof pval === 'number' || pval instanceof Number) && Number.isInteger(pval)) && pval >= 0;
    if (! res)
    {
        return false;
    }
    if (! val.hasOwnProperty("p21"))
    {
        return false;
    }
    pval = val["p21"];
    // .mo2.p21
    return ((typeof pval === 'number' || pval instanceof Number) && Number.isInteger(pval)) && pval >= 0;
}

// object .mo3
function _jm_obj_3(val, path, rep)
{
    if (! (Object.prototype.toString.call(val) === '[object Object]'))
    {
        return false;
    }
    let res;
    let must_count = 0;
    for (const [prop, pval] of Object.entries(val))
    {
        if (prop == "p30")
        {
            // handle must p30 property
            must_count += 1;
            // .mo3.p30
            res = ((typeof pval === 'number' || pval instanceof Number) && Number.isInteger(pval)) && pval >= 0;
            if (! res)
            {
                return false;
            }
        }
        else if (prop == "p31")
        {
            // handle must p31 property
            must_count += 1;
            // .mo3.p31
            res = ((typeof pval === 'number' || pval instanceof Number) && Number.isInteger(pval)) && pval >= 0;
            if (! res)
            {
                return false;
            }
        }
        else if (prop == "p32")
        {
            // handle must p32 property
            must_count += 1;
            // .mo3.p32
            res = ((typeof pval === 'number' || pval instanceof Number) && Number.isInteger(pval)) && pval >= 0;
            if (! res)
            {
                return false;
            }
        }
        else
        {
            return false;
        }
    }
    return must_count == 3;
}

// check $ (.)
function json_model_1(val, path, rep)
{
    // .
    if (! (Object.prototype.toString.call(val) === '[object Object]'))
    {
        return false;
    }
    let res;
    for (const [prop, pval] of Object.entries(val))
    {
        if (prop == "mo0")
        {
            // handle may mo0 property
            // empty object
            // .mo0
            res = _jm_obj_0(pval, null, null);
            if (! res)
            {
                return false;
            }
        }
        else if (prop == "mo1")
        {
            // handle may mo1 property
            // one mandatory prop
            // .mo1
            res = _jm_obj_1(pval, null, null);
            if (! res)
            {
                return false;
            }
        }
        else if (prop == "mo2")
        {
            // handle may mo2 property
            // two mandatory props
            // .mo2
            res = _jm_obj_2(pval, null, null);
            if (! res)
            {
                return false;
            }
        }
        else if (prop == "mo3")
        {
            // handle may mo3 property
            // three mandatory props
            // .mo3
            res = _jm_obj_3(pval, null, null);
            if (! res)
            {
                return false;
            }
        }
        else
        {
            return false;
        }
    }
    return true;
}


var initialized = false

// differed module initializations
export function check_model_init()
{
    if (! initialized)
    {
        initialized = true;
        runtime.jm_set_rx(RegExp)
        check_model_map.set("", json_model_1)
    }
}

// differed module cleanup
export function check_model_free()
{
    if (initialized)
    {
        initialized = false;
    }
}

export function check_model(val, name, rep)
{
    let checker = check_model_map.get(name)
    if (checker === undefined)
        throw `no checker for "${name}"`
    let path = rep !== null ? [] : null

    return checker(val, path, rep)
}

// possibly run as main based on a guess
import main from "json_model_runtime/main.js"

if (import.meta.url.endsWith(process.argv[1]))
    main(check_model_init, check_model, check_model_free)
