json-model.values.json[0]: PASS
json-model.values.json[1]: PASS
json-model.values.json[2]: PASS
json-model.values.json[3]: PASS
json-model.values.json[4]: PASS
json-model.values.json[5]: PASS
json-model.values.json[6]: PASS
json-model.values.json[7]: PASS
json-model.values.json[8]: PASS
json-model.values.json[9]: PASS
json-model.values.json[10]: PASS
json-model.values.json[11]: PASS
json-model.values.json[12]: PASS
json-model.values.json[13]: PASS
json-model.values.json[14]: PASS
json-model.values.json[15]: PASS
json-model.values.json[16]: PASS
json-model.values.json[17]: PASS
json-model.values.json[18]: PASS
json-model.values.json[19]: PASS
json-model.values.json[20]: FAIL (.: no model matched [.'$RootModel'.'|']; .: unexpected $Array [.'$RootModel'.'|'.13]; .: not array or unexpected array [.'$Array']; .: unexpected $Ref [.'$RootModel'.'|'.12]; .: unexpected /^\$./ [.'$Ref']; .: unexpected /^/($REGEX)/[a-z]*$/X [.'$RootModel'.'|'.11]; .: unexpected /^/($EXREG)/[a-z]*X[a-z]*$/X [.'$RootModel'.'|'.10]; .: unexpected $ValConst [.'$RootModel'.'|'.9]; .: unexpected /^=(null|true|false|[-+]?\d+(\.\d+)?([Ee][-+]?\d+)?)$/ [.'$ValConst']; .: unexpected $StrConst [.'$RootModel'.'|'.8]; .: unexpected /^[A-Za-z0-9_]/ [.'$StrConst']; .: unexpected =-1.0 [.'$RootModel'.'|'.7]; .: unexpected =1.0 [.'$RootModel'.'|'.6]; .: unexpected =0.0 [.'$RootModel'.'|'.5]; .: unexpected =-1 [.'$RootModel'.'|'.4]; .: unexpected =1 [.'$RootModel'.'|'.3]; .: unexpected =0 [.'$RootModel'.'|'.2]; .: unexpected =true [.'$RootModel'.'|'.1]; .: not null [.'$RootModel'.'|'.0]; .: value not in enum [.'$RootModel'.'|']; .: unexpected type [.'$RootModel'.'|'])
json-model.values.json[21]: FAIL (.: no model matched [.'$RootModel'.'|']; .: unexpected $Array [.'$RootModel'.'|'.13]; .: not array or unexpected array [.'$Array']; .: unexpected $Ref [.'$RootModel'.'|'.12]; .: unexpected /^\$./ [.'$Ref']; .: unexpected /^/($REGEX)/[a-z]*$/X [.'$RootModel'.'|'.11]; .: unexpected /^/($EXREG)/[a-z]*X[a-z]*$/X [.'$RootModel'.'|'.10]; .: unexpected $ValConst [.'$RootModel'.'|'.9]; .: unexpected /^=(null|true|false|[-+]?\d+(\.\d+)?([Ee][-+]?\d+)?)$/ [.'$ValConst']; .: unexpected $StrConst [.'$RootModel'.'|'.8]; .: unexpected /^[A-Za-z0-9_]/ [.'$StrConst']; .: unexpected =-1.0 [.'$RootModel'.'|'.7]; .: unexpected =1.0 [.'$RootModel'.'|'.6]; .: unexpected =0.0 [.'$RootModel'.'|'.5]; .: unexpected =-1 [.'$RootModel'.'|'.4]; .: unexpected =1 [.'$RootModel'.'|'.3]; .: unexpected =0 [.'$RootModel'.'|'.2]; .: unexpected =true [.'$RootModel'.'|'.1]; .: not null [.'$RootModel'.'|'.0]; .: value not in enum [.'$RootModel'.'|']; .: unexpected type [.'$RootModel'.'|'])
json-model.values.json[22]: FAIL (.: no model matched [.'$RootModel'.'|']; .: unexpected $Array [.'$RootModel'.'|'.13]; .: not array or unexpected array [.'$Array']; .: unexpected $Ref [.'$RootModel'.'|'.12]; .: unexpected /^\$./ [.'$Ref']; .: unexpected /^/($REGEX)/[a-z]*$/X [.'$RootModel'.'|'.11]; .: unexpected /^/($EXREG)/[a-z]*X[a-z]*$/X [.'$RootModel'.'|'.10]; .: unexpected $ValConst [.'$RootModel'.'|'.9]; .: unexpected /^=(null|true|false|[-+]?\d+(\.\d+)?([Ee][-+]?\d+)?)$/ [.'$ValConst']; .: unexpected $StrConst [.'$RootModel'.'|'.8]; .: unexpected /^[A-Za-z0-9_]/ [.'$StrConst']; .: unexpected =-1.0 [.'$RootModel'.'|'.7]; .: unexpected =1.0 [.'$RootModel'.'|'.6]; .: unexpected =0.0 [.'$RootModel'.'|'.5]; .: unexpected =-1 [.'$RootModel'.'|'.4]; .: unexpected =1 [.'$RootModel'.'|'.3]; .: unexpected =0 [.'$RootModel'.'|'.2]; .: unexpected =true [.'$RootModel'.'|'.1]; .: not null [.'$RootModel'.'|'.0]; .: value not in enum [.'$RootModel'.'|']; .: unexpected type [.'$RootModel'.'|'])
json-model.values.json[23]: FAIL (.: no model matched [.'$RootModel'.'|']; .: unexpected $Array [.'$RootModel'.'|'.13]; .: not array or unexpected array [.'$Array']; .0: no model matched [.'$Array'.0.'|']; .0: unexpected $ArrayComment [.'$Array'.0.'|'.14]; .0: unexpected /^#/ [.'$ArrayComment']; .0: unexpected $Array [.'$Array'.0.'|'.13]; .0: not array or unexpected array [.'$Array']; .0: unexpected $Ref [.'$Array'.0.'|'.12]; .0: unexpected /^\$./ [.'$Ref']; .0: unexpected /^/($REGEX)/[a-z]*$/X [.'$Array'.0.'|'.11]; .0: unexpected /^/($EXREG)/[a-z]*X[a-z]*$/X [.'$Array'.0.'|'.10]; .0: unexpected $ValConst [.'$Array'.0.'|'.9]; .0: unexpected /^=(null|true|false|[-+]?\d+(\.\d+)?([Ee][-+]?\d+)?)$/ [.'$ValConst']; .0: unexpected $StrConst [.'$Array'.0.'|'.8]; .0: unexpected /^[A-Za-z0-9_]/ [.'$StrConst']; .0: unexpected =-1.0 [.'$Array'.0.'|'.7]; .0: unexpected =1.0 [.'$Array'.0.'|'.6]; .0: unexpected =0.0 [.'$Array'.0.'|'.5]; .0: unexpected =-1 [.'$Array'.0.'|'.4]; .0: unexpected =1 [.'$Array'.0.'|'.3]; .0: unexpected =0 [.'$Array'.0.'|'.2]; .0: unexpected =true [.'$Array'.0.'|'.1]; .0: not null [.'$Array'.0.'|'.0]; .0: value not in enum [.'$Array'.0.'|']; .0: unexpected type [.'$Array'.0.'|']; .: unexpected $Ref [.'$RootModel'.'|'.12]; .: unexpected /^\$./ [.'$Ref']; .: unexpected /^/($REGEX)/[a-z]*$/X [.'$RootModel'.'|'.11]; .: unexpected /^/($EXREG)/[a-z]*X[a-z]*$/X [.'$RootModel'.'|'.10]; .: unexpected $ValConst [.'$RootModel'.'|'.9]; .: unexpected /^=(null|true|false|[-+]?\d+(\.\d+)?([Ee][-+]?\d+)?)$/ [.'$ValConst']; .: unexpected $StrConst [.'$RootModel'.'|'.8]; .: unexpected /^[A-Za-z0-9_]/ [.'$StrConst']; .: unexpected =-1.0 [.'$RootModel'.'|'.7]; .: unexpected =1.0 [.'$RootModel'.'|'.6]; .: unexpected =0.0 [.'$RootModel'.'|'.5]; .: unexpected =-1 [.'$RootModel'.'|'.4]; .: unexpected =1 [.'$RootModel'.'|'.3]; .: unexpected =0 [.'$RootModel'.'|'.2]; .: unexpected =true [.'$RootModel'.'|'.1]; .: not null [.'$RootModel'.'|'.0]; .: value not in enum [.'$RootModel'.'|']; .: unexpected type [.'$RootModel'.'|'])
json-model.values.json[24]: FAIL (.: no model matched [.'$RootModel'.'|']; .: unexpected $Array [.'$RootModel'.'|'.13]; .: not array or unexpected array [.'$Array']; .: unexpected $Ref [.'$RootModel'.'|'.12]; .: unexpected /^\$./ [.'$Ref']; .: unexpected /^/($REGEX)/[a-z]*$/X [.'$RootModel'.'|'.11]; .: unexpected /^/($EXREG)/[a-z]*X[a-z]*$/X [.'$RootModel'.'|'.10]; .: unexpected $ValConst [.'$RootModel'.'|'.9]; .: unexpected /^=(null|true|false|[-+]?\d+(\.\d+)?([Ee][-+]?\d+)?)$/ [.'$ValConst']; .: unexpected $StrConst [.'$RootModel'.'|'.8]; .: unexpected /^[A-Za-z0-9_]/ [.'$StrConst']; .: unexpected =-1.0 [.'$RootModel'.'|'.7]; .: unexpected =1.0 [.'$RootModel'.'|'.6]; .: unexpected =0.0 [.'$RootModel'.'|'.5]; .: unexpected =-1 [.'$RootModel'.'|'.4]; .: unexpected =1 [.'$RootModel'.'|'.3]; .: unexpected =0 [.'$RootModel'.'|'.2]; .: unexpected =true [.'$RootModel'.'|'.1]; .: not null [.'$RootModel'.'|'.0]; .: value not in enum [.'$RootModel'.'|']; .: no model matched [.'$RootModel'.'|']; .: unexpected element [.'$RootModel'.'|'.5]; .a: unexpected $Model [.'$RootModel'.'|'.5.'$Prop']; .a: no model matched [.'$Model'.'|']; .a: unexpected $Array [.'$Model'.'|'.13]; .a: not array or unexpected array [.'$Array']; .a: unexpected $Ref [.'$Model'.'|'.12]; .a: unexpected /^\$./ [.'$Ref']; .a: unexpected /^/($REGEX)/[a-z]*$/X [.'$Model'.'|'.11]; .a: unexpected /^/($EXREG)/[a-z]*X[a-z]*$/X [.'$Model'.'|'.10]; .a: unexpected $ValConst [.'$Model'.'|'.9]; .a: unexpected /^=(null|true|false|[-+]?\d+(\.\d+)?([Ee][-+]?\d+)?)$/ [.'$ValConst']; .a: unexpected $StrConst [.'$Model'.'|'.8]; .a: unexpected /^[A-Za-z0-9_]/ [.'$StrConst']; .a: unexpected =-1.0 [.'$Model'.'|'.7]; .a: unexpected =1.0 [.'$Model'.'|'.6]; .a: unexpected =0.0 [.'$Model'.'|'.5]; .a: unexpected =-1 [.'$Model'.'|'.4]; .a: unexpected =1 [.'$Model'.'|'.3]; .a: unexpected =0 [.'$Model'.'|'.2]; .a: unexpected =true [.'$Model'.'|'.1]; .a: not null [.'$Model'.'|'.0]; .a: value not in enum [.'$Model'.'|']; .a: unexpected type [.'$Model'.'|'])
json-model.values.json[25]: FAIL (.: no model matched [.'$RootModel'.'|']; .: unexpected $Array [.'$RootModel'.'|'.13]; .: not array or unexpected array [.'$Array']; .: unexpected $Ref [.'$RootModel'.'|'.12]; .: unexpected /^\$./ [.'$Ref']; .: unexpected /^/($REGEX)/[a-z]*$/X [.'$RootModel'.'|'.11]; .: unexpected /^/($EXREG)/[a-z]*X[a-z]*$/X [.'$RootModel'.'|'.10]; .: unexpected $ValConst [.'$RootModel'.'|'.9]; .: unexpected /^=(null|true|false|[-+]?\d+(\.\d+)?([Ee][-+]?\d+)?)$/ [.'$ValConst']; .: unexpected $StrConst [.'$RootModel'.'|'.8]; .: unexpected /^[A-Za-z0-9_]/ [.'$StrConst']; .: unexpected =-1.0 [.'$RootModel'.'|'.7]; .: unexpected =1.0 [.'$RootModel'.'|'.6]; .: unexpected =0.0 [.'$RootModel'.'|'.5]; .: unexpected =-1 [.'$RootModel'.'|'.4]; .: unexpected =1 [.'$RootModel'.'|'.3]; .: unexpected =0 [.'$RootModel'.'|'.2]; .: unexpected =true [.'$RootModel'.'|'.1]; .: not null [.'$RootModel'.'|'.0]; .: value not in enum [.'$RootModel'.'|']; .: unexpected type [.'$RootModel'.'|'])
json-model.values.json[26]: FAIL (.: no model matched [.'$RootModel'.'|']; .: unexpected $Array [.'$RootModel'.'|'.13]; .: not array or unexpected array [.'$Array']; .: unexpected $Ref [.'$RootModel'.'|'.12]; .: unexpected /^\$./ [.'$Ref']; .: unexpected /^/($REGEX)/[a-z]*$/X [.'$RootModel'.'|'.11]; .: regex ^[a- unexpected compile error (bad character range a-  at position 2); .: unexpected /^/($EXREG)/[a-z]*X[a-z]*$/X [.'$RootModel'.'|'.10]; .: unexpected $ValConst [.'$RootModel'.'|'.9]; .: unexpected /^=(null|true|false|[-+]?\d+(\.\d+)?([Ee][-+]?\d+)?)$/ [.'$ValConst']; .: unexpected $StrConst [.'$RootModel'.'|'.8]; .: unexpected /^[A-Za-z0-9_]/ [.'$StrConst']; .: unexpected =-1.0 [.'$RootModel'.'|'.7]; .: unexpected =1.0 [.'$RootModel'.'|'.6]; .: unexpected =0.0 [.'$RootModel'.'|'.5]; .: unexpected =-1 [.'$RootModel'.'|'.4]; .: unexpected =1 [.'$RootModel'.'|'.3]; .: unexpected =0 [.'$RootModel'.'|'.2]; .: unexpected =true [.'$RootModel'.'|'.1]; .: not null [.'$RootModel'.'|'.0]; .: value not in enum [.'$RootModel'.'|']; .: unexpected type [.'$RootModel'.'|'])
json-model.values.json[27]: PASS
