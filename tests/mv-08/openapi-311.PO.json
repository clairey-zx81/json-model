{
  "#": "JsonModel 1 with defs",
  "$": {
    "OpenAPI": {
      "openapi": "/^3\\.1\\.\\d+(-.+)?$/",
      "info": "$Info",
      "?jsonSchemaDialect": "$URL",
      "?servers": [
        "$Server"
      ],
      "?paths": "$Paths",
      "?webhooks": {
        "": "$PathItem"
      },
      "?components": "$Components",
      "?security": [
        "$SecurityRequirement"
      ],
      "?tags": [
        "$Tag"
      ],
      "?externalDocs": "$ExternalDocumentation",
      "/^x-/": "$ANY",
      "#": "JsonModel 2"
    },
    "Info": {
      "title": "",
      "?summary": "",
      "?description": "",
      "?termsOfService": "",
      "?contact": "$Contact",
      "?license": "$License",
      "version": "",
      "/^x-/": "$ANY",
      "#": "JsonModel 3"
    },
    "Contact": {
      "?name": "",
      "?url": "$URL",
      "?email": "",
      "/^x-/": "$ANY",
      "#": "JsonModel 4"
    },
    "License": {
      "|": [
        {
          "name": "",
          "identifier": "",
          "/^x\\-.*$/": "$ANY"
        },
        {
          "name": "",
          "url": "$URL",
          "/^x\\-.*$/": "$ANY"
        }
      ],
      "#": "JsonModel 5"
    },
    "Server": {
      "url": "$URL",
      "?description": "",
      "?variables": {
        "": "$ServerVariable"
      },
      "/^x-/": "$ANY",
      "#": "JsonModel 6"
    },
    "ServerVariable": {
      "?enum": [
        ""
      ],
      "default": "",
      "?description": "",
      "/^x-/": "$ANY",
      "#": "JsonModel 7"
    },
    "Components": {
      "?schemas": {
        "": "$Schema"
      },
      "?responses": {
        "": {
          "|": [
            "$Response",
            "$Reference"
          ]
        }
      },
      "?parameters": {
        "": {
          "|": [
            "$Parameter",
            "$Reference"
          ]
        }
      },
      "?examples": {
        "": {
          "|": [
            "$Example",
            "$Reference"
          ]
        }
      },
      "?requestBodies": {
        "": {
          "|": [
            "$RequestBody",
            "$Reference"
          ]
        }
      },
      "?headers": {
        "": {
          "|": [
            "$Header",
            "$Reference"
          ]
        }
      },
      "?securitySchemes": {
        "": {
          "|": [
            "$SecurityScheme",
            "$Reference"
          ]
        }
      },
      "?links": {
        "": {
          "|": [
            "$Link",
            "$Reference"
          ]
        }
      },
      "?callbacks": {
        "": {
          "|": [
            "$Callback",
            "$Reference"
          ]
        }
      },
      "?pathItems": {
        "": {
          "|": [
            "$PathItem",
            "$Reference"
          ]
        }
      },
      "/^x-/": "$ANY",
      "#": "JsonModel 8"
    },
    "Paths": {
      "/^//": "$PathItem",
      "/^x-/": "$ANY",
      "#": "JsonModel 9"
    },
    "PathItem": {
      "?$ref": "$URI",
      "?summary": "",
      "?description": "",
      "?get": "$Operation",
      "?put": "$Operation",
      "?post": "$Operation",
      "?delete": "$Operation",
      "?options": "$Operation",
      "?head": "$Operation",
      "?patch": "$Operation",
      "?trace": "$Operation",
      "?servers": [
        "$Operation"
      ],
      "?parameters": [
        {
          "|": [
            "$Parameter",
            "$Reference"
          ]
        }
      ],
      "/^x-/": "$ANY",
      "#": "JsonModel 10"
    },
    "Operation": {
      "?tags": [
        ""
      ],
      "?summary": "",
      "?description": "",
      "?externalDocs": "$ExternalDocumentation",
      "?operationId": "",
      "?parameters": [
        {
          "|": [
            "$Parameter",
            "$Reference"
          ]
        }
      ],
      "?requestBody": {
        "|": [
          "$RequestBody",
          "$Reference"
        ]
      },
      "?responses": "$Responses",
      "?callbacks": {
        "": {
          "|": [
            "$Callback",
            "$Reference"
          ]
        }
      },
      "?deprecated": true,
      "?security": [
        "$SecurityRequirement"
      ],
      "?servers": [
        "$Server"
      ],
      "/^x-/": "$ANY",
      "#": "JsonModel 11"
    },
    "ExternalDocumentation": {
      "?description": "",
      "url": "$URL",
      "/^x-/": "$ANY",
      "#": "JsonModel 12"
    },
    "parameterShare": {
      "?description": "",
      "?required": true,
      "?deprecated": true,
      "?allowEmptyValue": true,
      "/^x-/": "$ANY",
      "#": "JsonModel 13"
    },
    "commonParameter": {
      "name": "",
      "in": {
        "|": [
          "_query",
          "_header",
          "_path",
          "_cookie"
        ]
      },
      "?description": "",
      "?required": true,
      "?deprecated": true,
      "?allowEmptyValue": true,
      "/^x-/": "$ANY",
      "#": "JsonModel 14"
    },
    "Style": {
      "|": [
        "_matrix",
        "_label",
        "_form",
        "_simple",
        "_spaceDelimited",
        "_pipeDelimited",
        "_deepObject"
      ],
      "#": "JsonModel 15"
    },
    "parameterSchemaOnly": {
      "?style": "$Style",
      "?explode": true,
      "?allowReserved": true,
      "?schema": "$Schema",
      "?example": "$ANY",
      "?examples": {
        "": {
          "|": [
            "$Example",
            "$Reference"
          ]
        }
      },
      "#": "JsonModel 16"
    },
    "parameterContentOnly": {
      "?content": {
        "": "$MediaType"
      },
      "#": "JsonModel 17"
    },
    "Parameter": {
      "|": [
        {
          "name": "",
          "in": {
            "|": [
              "_query",
              "_header",
              "_path",
              "_cookie"
            ]
          },
          "?description": "",
          "?required": true,
          "?deprecated": true,
          "?allowEmptyValue": true,
          "?style": "$Style",
          "?explode": true,
          "?allowReserved": true,
          "?schema": "$Schema",
          "?example": "$ANY",
          "?examples": {
            "": {
              "|": [
                "$Example",
                "$Reference"
              ]
            }
          },
          "/^x-/": "$ANY"
        },
        {
          "name": "",
          "in": {
            "|": [
              "_query",
              "_header",
              "_path",
              "_cookie"
            ]
          },
          "?description": "",
          "?required": true,
          "?deprecated": true,
          "?allowEmptyValue": true,
          "?content": {
            "": "$MediaType"
          },
          "/^x-/": "$ANY"
        }
      ],
      "#": "JsonModel 18"
    },
    "RequestBody": {
      "?description": "",
      "?content": {
        "": "$MediaType"
      },
      "?required": true,
      "/^x-/": "$ANY",
      "#": "JsonModel 19"
    },
    "MediaType": {
      "?schema": "$Schema",
      "?example": "$ANY",
      "?examples": {
        "": {
          "|": [
            "$Example",
            "$Reference"
          ]
        }
      },
      "?encoding": {
        "": "$Encoding"
      },
      "/^x-/": "$ANY",
      "#": "JsonModel 20"
    },
    "Encoding": {
      "?contentType": "",
      "?headers": {
        "": {
          "|": [
            "$Header",
            "$Reference"
          ]
        }
      },
      "?style": "$Style",
      "?explode": true,
      "?allowReserved": true,
      "/^x-/": "$ANY",
      "#": "JsonModel 21"
    },
    "Responses": {
      "/^[1-5](\\d\\d|XX)$/": {
        "|": [
          "$Response",
          "$Reference"
        ]
      },
      "?default": {
        "|": [
          "$Response",
          "$Reference"
        ]
      },
      "/^x-/": "$ANY",
      "#": "JsonModel 22"
    },
    "Response": {
      "?description": "",
      "?headers": {
        "": {
          "|": [
            "$Header",
            "$Reference"
          ]
        }
      },
      "?content": {
        "": "$MediaType"
      },
      "?links": {
        "": {
          "|": [
            "$Link",
            "$Reference"
          ]
        }
      },
      "/^x-/": "$ANY",
      "#": "JsonModel 23"
    },
    "Callback": {
      "$Expression": {
        "|": [
          "$PathItem",
          "$Reference"
        ]
      },
      "/^x-/": "$ANY",
      "#": "JsonModel 24"
    },
    "Example": {
      "?summary": "",
      "?description": "",
      "?value": "$ANY",
      "?externalValue": "",
      "/^x-/": "$ANY",
      "#": "JsonModel 25"
    },
    "Expression": "",
    "Link": {
      "|": [
        {
          "operationRef": "",
          "?parameters": {
            "": "$ANY"
          },
          "?requestBody": "$ANY",
          "?description": "",
          "?server": "$Server",
          "/^x-/": "$ANY"
        },
        {
          "operationId": "",
          "?parameters": {
            "": "$ANY"
          },
          "?requestBody": "$ANY",
          "?description": "",
          "?server": "$Server",
          "/^x-/": "$ANY"
        }
      ],
      "#": "JsonModel 27"
    },
    "Header": {
      "|": [
        {
          "?description": "",
          "?required": true,
          "?deprecated": true,
          "?allowEmptyValue": true,
          "?style": "$Style",
          "?explode": true,
          "?allowReserved": true,
          "?schema": "$Schema",
          "?example": "$ANY",
          "?examples": {
            "": {
              "|": [
                "$Example",
                "$Reference"
              ]
            }
          },
          "/^x-/": "$ANY"
        },
        {
          "?description": "",
          "?required": true,
          "?deprecated": true,
          "?allowEmptyValue": true,
          "?content": {
            "": "$MediaType"
          },
          "/^x-/": "$ANY"
        }
      ],
      "#": "JsonModel 28"
    },
    "Tag": {
      "name": "",
      "?description": "",
      "?externalDocs": "$ExternalDocumentation",
      "/^x-/": "$ANY",
      "#": "JsonModel 29"
    },
    "Reference": {
      "_$ref": "",
      "?summary": "",
      "?description": "",
      "#": "JsonModel 30"
    },
    "schema": {
      "@": "$Schema",
      "#": "JsonModel 45 (JSON_MODEL_LOOSE_INT JSON_MODEL_LOOSE_FLOAT)",
      "$": {
        "": "https://json-model.org/models/json-schema-draft-2020-12",
        "URI-REFERENCE": "",
        "core": {
          "?$id": "$URI-REFERENCE",
          "?$schema": "_https://json-schema.org/draft/2020-12/schema",
          "?$ref": "$URI-REFERENCE",
          "?$anchor": "$URI-REFERENCE",
          "?$dynamicRef": "$URI-REFERENCE",
          "?$dynamicAnchor": "$URI-REFERENCE",
          "?$vocabulary": {
            "$URI": true
          },
          "?$comment": "",
          "?$defs": {
            "": "$Schema"
          }
        },
        "meta": {
          "?title": "",
          "?description": "",
          "?default": "$ANY",
          "?deprecated": true,
          "?readOnly": true,
          "?writeOnly": true,
          "?examples": [
            "$ANY"
          ]
        },
        "content": {
          "?contentEncoding": "",
          "?contentMediaType": "",
          "?contentSchema": "$Schema"
        },
        "unevaluated": {
          "?unevaluatedItems": "$Schema",
          "?unevaluatedProperties": "$Schema"
        },
        "format": {
          "?format": ""
        },
        "simpleTypes": {
          "|": [
            "array",
            "boolean",
            "integer",
            "null",
            "number",
            "object",
            "string"
          ]
        },
        "simpleTypesArray": {
          "@": [
            "$simpleTypes"
          ],
          ">=": 1,
          "!": true
        },
        "stringArray": {
          "@": [
            ""
          ],
          "!": true
        },
        "nonNegativeInteger": 0,
        "validation": {
          "?type": {
            "|": [
              "$simpleTypes",
              "$simpleTypesArray"
            ]
          },
          "?const": "$ANY",
          "?enum": [
            "$ANY"
          ],
          "?multipleOf": 1.0,
          "?maximum": -1.0,
          "?exclusiveMaximum": -1.0,
          "?minimum": -1.0,
          "?exclusiveMinimum": -1.0,
          "?maxLength": "$nonNegativeInteger",
          "?minLength": "$nonNegativeInteger",
          "?pattern": "$REGEX",
          "?maxItems": "$nonNegativeInteger",
          "?minItems": "$nonNegativeInteger",
          "?uniqueItems": true,
          "?maxContains": "$nonNegativeInteger",
          "?minContains": "$nonNegativeInteger",
          "?maxProperties": "$nonNegativeInteger",
          "?minProperties": "$nonNegativeInteger",
          "?required": "$stringArray",
          "?dependentRequired": {
            "": "$stringArray"
          }
        },
        "schemaArray": {
          "@": [
            "$Schema"
          ],
          ">=": 1
        },
        "applicator": {
          "?prefixItems": "$schemaArray",
          "?items": "$Schema",
          "?contains": "$Schema",
          "?additionalProperties": "$Schema",
          "?properties": {
            "": "$Schema"
          },
          "?patternProperties": {
            "$REGEX": "$Schema"
          },
          "?dependentSchemas": {
            "": "$Schema"
          },
          "?propertyNames": "$Schema",
          "?if": "$Schema",
          "?then": "$Schema",
          "?else": "$Schema",
          "?not": "$Schema",
          "?allOf": "$schemaArray",
          "?anyOf": "$schemaArray",
          "?oneOf": "$schemaArray"
        },
        "ObjectSchema": {
          "+": [
            "$core",
            "$applicator",
            "$unevaluated",
            "$validation",
            "$meta",
            "$format",
            "$content"
          ]
        },
        "Schema": {
          "|": [
            true,
            "$ObjectSchema"
          ]
        }
      },
      "~": "https://json-model.org/models/json-model"
    },
    "Schema": {
      "?$id": "$schema#URI-REFERENCE",
      "?$schema": "_https://json-schema.org/draft/2020-12/schema",
      "?$ref": "$schema#URI-REFERENCE",
      "?$anchor": "$schema#URI-REFERENCE",
      "?$dynamicRef": "$schema#URI-REFERENCE",
      "?$dynamicAnchor": "$schema#URI-REFERENCE",
      "?$vocabulary": {
        "$URI": true
      },
      "?$comment": "",
      "?$defs": {
        "": "$schema#Schema"
      },
      "?prefixItems": "$schema#schemaArray",
      "?items": "$schema#Schema",
      "?contains": "$schema#Schema",
      "?additionalProperties": "$schema#Schema",
      "?properties": {
        "": "$schema#Schema"
      },
      "?patternProperties": {
        "$REGEX": "$schema#Schema"
      },
      "?dependentSchemas": {
        "": "$schema#Schema"
      },
      "?propertyNames": "$schema#Schema",
      "?if": "$schema#Schema",
      "?then": "$schema#Schema",
      "?else": "$schema#Schema",
      "?not": "$schema#Schema",
      "?allOf": "$schema#schemaArray",
      "?anyOf": "$schema#schemaArray",
      "?oneOf": "$schema#schemaArray",
      "?unevaluatedItems": "$schema#Schema",
      "?unevaluatedProperties": "$schema#Schema",
      "?type": {
        "|": [
          "$schema#simpleTypes",
          "$schema#simpleTypesArray"
        ]
      },
      "?const": "$ANY",
      "?enum": [
        "$ANY"
      ],
      "?multipleOf": 1.0,
      "?maximum": -1.0,
      "?exclusiveMaximum": -1.0,
      "?minimum": -1.0,
      "?exclusiveMinimum": -1.0,
      "?maxLength": "$schema#nonNegativeInteger",
      "?minLength": "$schema#nonNegativeInteger",
      "?pattern": "$REGEX",
      "?maxItems": "$schema#nonNegativeInteger",
      "?minItems": "$schema#nonNegativeInteger",
      "?uniqueItems": true,
      "?maxContains": "$schema#nonNegativeInteger",
      "?minContains": "$schema#nonNegativeInteger",
      "?maxProperties": "$schema#nonNegativeInteger",
      "?minProperties": "$schema#nonNegativeInteger",
      "?required": "$schema#stringArray",
      "?dependentRequired": {
        "": "$schema#stringArray"
      },
      "?title": "",
      "?description": "",
      "?default": "$ANY",
      "?deprecated": true,
      "?readOnly": true,
      "?writeOnly": true,
      "?examples": [
        "$ANY"
      ],
      "?format": "",
      "?contentEncoding": "",
      "?contentMediaType": "",
      "?contentSchema": "$schema#Schema",
      "?discriminator": "$Discriminator",
      "?externalDocs": "$ExternalDocumentation",
      "?xml": "$xml",
      "?example": "$ANY",
      "#": "JsonModel 32"
    },
    "Discriminator": {
      "propertyName": "",
      "?mapping": {
        "": ""
      },
      "/^x-/": "$ANY",
      "#": "JsonModel 33"
    },
    "xml": {
      "?name": "",
      "?namespace": "",
      "?prefix": "",
      "?attribute": true,
      "?wrapped": true,
      "/^x-/": "$ANY",
      "#": "JsonModel 34"
    },
    "SS-apikey": {
      "type": "_apiKey",
      "name": "",
      "in": {
        "|": [
          "_query",
          "_header",
          "_cookie"
        ]
      },
      "#": "JsonModel 35"
    },
    "SS-http": {
      "type": "_http",
      "scheme": "",
      "#": "JsonModel 36"
    },
    "SS-http-bearer": {
      "type": "_http",
      "scheme": "/bearer/i",
      "?bearerFormat": "",
      "#": "JsonModel 37"
    },
    "SS-oauth2": {
      "type": "_oauth2",
      "flows": "$OAuthFlows",
      "#": "JsonModel 38"
    },
    "SS-oic": {
      "type": "_openIdConnect",
      "openIdConnectUrl": "$URL",
      "#": "JsonModel 39"
    },
    "SecurityScheme": {
      "|": [
        {
          "type": "_apiKey",
          "name": "",
          "in": {
            "|": [
              "_query",
              "_header",
              "_cookie"
            ]
          },
          "?description": ""
        },
        {
          "type": "_http",
          "scheme": "/bearer/i",
          "?bearerFormat": "",
          "?description": ""
        },
        {
          "type": "_http",
          "scheme": "",
          "?description": ""
        },
        {
          "type": "_oauth2",
          "flows": "$OAuthFlows",
          "?description": ""
        },
        {
          "type": "_openIdConnect",
          "openIdConnectUrl": "$URL",
          "?description": ""
        },
        {
          "?description": "",
          "/^x-/": "$ANY"
        }
      ],
      "#": "JsonModel 40"
    },
    "OAuthFlows": {
      "?implicit": "$OAuthFlow",
      "?password": "$OAuthFlow",
      "?clientCredentials": "$OAuthFlow",
      "?authorizationCode": "$OAuthFlow",
      "/^x-/": "$ANY",
      "#": "JsonModel 41"
    },
    "OAuthFlow": {
      "authorizationUrl": "$URL",
      "tokenUrl": "$URL",
      "?refreshUrl": "$URL",
      "scopes": {
        "": ""
      },
      "/^x-/": "$ANY",
      "#": "JsonModel 42"
    },
    "SecurityRequirement": {
      "": [
        ""
      ],
      "#": "JsonModel 43"
    },
    "Extension": {
      "/^x-/": "$ANY",
      "#": "JsonModel 44"
    },
    "#": "Symbol 1",
    "": "https://json-model.org/models/openapi-311"
  },
  "@": "$OpenAPI",
  "~": "https://json-model.org/models/json-model"
}
