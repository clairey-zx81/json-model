//
// Generated by JSON Model Compiler version 2
// see https://github.com/clairey-zx81/json-model
//

import json_model.*;
import java.util.Map;
import java.util.Set;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Iterator;
import java.util.regex.Pattern;
import java.util.regex.Matcher;

@SuppressWarnings("unchecked")
public class inline_or_rec_2 extends ModelChecker
{
    static public final String VERSION = "2";

    Map<Object, Checker> _jm_map_0_cmap;
    Map<Object, Checker> _jm_map_1_cmap;
    public Map<String, Checker> inline_or_rec_2_map_pmap;

    // object .'$ab'.'|'.0
    public boolean _jm_obj_0(Object val, Path path, Report rep)
    {
        if (! json.isObject(val))
        {
            if (rep != null) rep.addEntry("not an object [.'$ab'.'|'.0]", path);
            return false;
        }
        boolean res;
        long must_count = 0;
        Iterator<String> prop_loop = json.objectIterator(val);
        while (prop_loop.hasNext())
        {
            String prop = prop_loop.next();
            Object pval = json.objectValue(val, prop);
            Path lpath_0 = new Path(prop, path);
            if (prop.compareTo("t") == 0)
            {
                // handle must t property
                must_count += 1;
                // .'$ab'.'|'.0.t
                res = json.isString(pval) && json.asString(pval).compareTo("a") == 0;
                if (! res)
                {
                    if (rep != null) rep.addEntry("unexpected a [.'$ab'.'|'.0.t]", (path != null ? lpath_0 : null));
                    if (rep != null) rep.addEntry("invalid mandatory prop value [.'$ab'.'|'.0.t]", (path != null ? lpath_0 : null));
                    return false;
                }
            }
            else if (prop.compareTo("a") == 0)
            {
                // handle must a property
                must_count += 1;
                // .'$ab'.'|'.0.a
                res = json.isInteger(pval) && json.asLong(pval) >= 1;
                if (! res)
                {
                    if (rep != null) rep.addEntry("not a 1 strict int [.'$ab'.'|'.0.a]", (path != null ? lpath_0 : null));
                    if (rep != null) rep.addEntry("invalid mandatory prop value [.'$ab'.'|'.0.a]", (path != null ? lpath_0 : null));
                    return false;
                }
            }
            else
            {
                if (rep != null) rep.addEntry("unexpected prop [.'$ab'.'|'.0]", (path != null ? lpath_0 : null));
                return false;
            }
        }
        if (must_count != 2)
        {
            if (rep != null)
            {
                if (! json.objectHasProp(val, "a"))
                {
                    if (rep != null) rep.addEntry("missing mandatory prop <a> [.'$ab'.'|'.0]", path);
                }
                if (! json.objectHasProp(val, "t"))
                {
                    if (rep != null) rep.addEntry("missing mandatory prop <t> [.'$ab'.'|'.0]", path);
                }
            }
            return false;
        }
        return true;
    }

    // object .'$ab'.'|'.1
    public boolean _jm_obj_1(Object val, Path path, Report rep)
    {
        if (! json.isObject(val))
        {
            if (rep != null) rep.addEntry("not an object [.'$ab'.'|'.1]", path);
            return false;
        }
        boolean res;
        long must_count = 0;
        Iterator<String> prop_loop = json.objectIterator(val);
        while (prop_loop.hasNext())
        {
            String prop = prop_loop.next();
            Object pval = json.objectValue(val, prop);
            Path lpath_1 = new Path(prop, path);
            if (prop.compareTo("t") == 0)
            {
                // handle must t property
                must_count += 1;
                // .'$ab'.'|'.1.t
                res = json.isString(pval) && json.asString(pval).compareTo("b") == 0;
                if (! res)
                {
                    if (rep != null) rep.addEntry("unexpected b [.'$ab'.'|'.1.t]", (path != null ? lpath_1 : null));
                    if (rep != null) rep.addEntry("invalid mandatory prop value [.'$ab'.'|'.1.t]", (path != null ? lpath_1 : null));
                    return false;
                }
            }
            else if (prop.compareTo("b") == 0)
            {
                // handle must b property
                must_count += 1;
                // .'$ab'.'|'.1.b
                res = json.isInteger(pval) && json.asLong(pval) >= 1;
                if (! res)
                {
                    if (rep != null) rep.addEntry("not a 1 strict int [.'$ab'.'|'.1.b]", (path != null ? lpath_1 : null));
                    if (rep != null) rep.addEntry("invalid mandatory prop value [.'$ab'.'|'.1.b]", (path != null ? lpath_1 : null));
                    return false;
                }
            }
            else
            {
                if (rep != null) rep.addEntry("unexpected prop [.'$ab'.'|'.1]", (path != null ? lpath_1 : null));
                return false;
            }
        }
        if (must_count != 2)
        {
            if (rep != null)
            {
                if (! json.objectHasProp(val, "b"))
                {
                    if (rep != null) rep.addEntry("missing mandatory prop <b> [.'$ab'.'|'.1]", path);
                }
                if (! json.objectHasProp(val, "t"))
                {
                    if (rep != null) rep.addEntry("missing mandatory prop <t> [.'$ab'.'|'.1]", path);
                }
            }
            return false;
        }
        return true;
    }

    // object .'$ab'.'|'.2
    public boolean _jm_obj_2(Object val, Path path, Report rep)
    {
        if (! json.isObject(val))
        {
            if (rep != null) rep.addEntry("not an object [.'$ab'.'|'.2]", path);
            return false;
        }
        boolean res;
        long must_count = 0;
        Iterator<String> prop_loop = json.objectIterator(val);
        while (prop_loop.hasNext())
        {
            String prop = prop_loop.next();
            Object pval = json.objectValue(val, prop);
            Path lpath_2 = new Path(prop, path);
            if (prop.compareTo("t") == 0)
            {
                // handle must t property
                must_count += 1;
                // .'$ab'.'|'.2.t
                res = json.isString(pval) && json.asString(pval).compareTo("c") == 0;
                if (! res)
                {
                    if (rep != null) rep.addEntry("unexpected c [.'$ab'.'|'.2.t]", (path != null ? lpath_2 : null));
                    if (rep != null) rep.addEntry("invalid mandatory prop value [.'$ab'.'|'.2.t]", (path != null ? lpath_2 : null));
                    return false;
                }
            }
            else if (prop.compareTo("c") == 0)
            {
                // handle must c property
                must_count += 1;
                // .'$ab'.'|'.2.c
                res = json.isInteger(pval) && json.asLong(pval) >= 1;
                if (! res)
                {
                    if (rep != null) rep.addEntry("not a 1 strict int [.'$ab'.'|'.2.c]", (path != null ? lpath_2 : null));
                    if (rep != null) rep.addEntry("invalid mandatory prop value [.'$ab'.'|'.2.c]", (path != null ? lpath_2 : null));
                    return false;
                }
            }
            else
            {
                if (rep != null) rep.addEntry("unexpected prop [.'$ab'.'|'.2]", (path != null ? lpath_2 : null));
                return false;
            }
        }
        if (must_count != 2)
        {
            if (rep != null)
            {
                if (! json.objectHasProp(val, "c"))
                {
                    if (rep != null) rep.addEntry("missing mandatory prop <c> [.'$ab'.'|'.2]", path);
                }
                if (! json.objectHasProp(val, "t"))
                {
                    if (rep != null) rep.addEntry("missing mandatory prop <t> [.'$ab'.'|'.2]", path);
                }
            }
            return false;
        }
        return true;
    }

    // object .'$ab'.'|'.3
    public boolean _jm_obj_3(Object val, Path path, Report rep)
    {
        if (! json.isObject(val))
        {
            if (rep != null) rep.addEntry("not an object [.'$ab'.'|'.3]", path);
            return false;
        }
        boolean res;
        long must_count = 0;
        Iterator<String> prop_loop = json.objectIterator(val);
        while (prop_loop.hasNext())
        {
            String prop = prop_loop.next();
            Object pval = json.objectValue(val, prop);
            Path lpath_3 = new Path(prop, path);
            if (prop.compareTo("t") == 0)
            {
                // handle must t property
                must_count += 1;
                // .'$ab'.'|'.3.t
                res = json.isString(pval) && json.asString(pval).compareTo("d") == 0;
                if (! res)
                {
                    if (rep != null) rep.addEntry("unexpected d [.'$ab'.'|'.3.t]", (path != null ? lpath_3 : null));
                    if (rep != null) rep.addEntry("invalid mandatory prop value [.'$ab'.'|'.3.t]", (path != null ? lpath_3 : null));
                    return false;
                }
            }
            else if (prop.compareTo("d") == 0)
            {
                // handle must d property
                must_count += 1;
                // .'$ab'.'|'.3.d
                res = json.isInteger(pval) && json.asLong(pval) >= 1;
                if (! res)
                {
                    if (rep != null) rep.addEntry("not a 1 strict int [.'$ab'.'|'.3.d]", (path != null ? lpath_3 : null));
                    if (rep != null) rep.addEntry("invalid mandatory prop value [.'$ab'.'|'.3.d]", (path != null ? lpath_3 : null));
                    return false;
                }
            }
            else
            {
                if (rep != null) rep.addEntry("unexpected prop [.'$ab'.'|'.3]", (path != null ? lpath_3 : null));
                return false;
            }
        }
        if (must_count != 2)
        {
            if (rep != null)
            {
                if (! json.objectHasProp(val, "d"))
                {
                    if (rep != null) rep.addEntry("missing mandatory prop <d> [.'$ab'.'|'.3]", path);
                }
                if (! json.objectHasProp(val, "t"))
                {
                    if (rep != null) rep.addEntry("missing mandatory prop <t> [.'$ab'.'|'.3]", path);
                }
            }
            return false;
        }
        return true;
    }


    // check $ab (.'$ab')
    public boolean json_model_2(Object val, Path path, Report rep)
    {
        boolean res;
        // .'$ab'
        boolean iso_0 = json.isObject(val);
        res = iso_0;
        if (res)
        {
            if (json.objectHasProp(val, "t"))
            {
                Object tag_0 = json.objectValue(val, "t");
                Checker fun_0 = _jm_map_0_cmap.get(tag_0);
                if (fun_0 != null)
                {
                    res = fun_0.call(val, path, rep);
                }
                else
                {
                    res = false;
                    if (rep != null) rep.addEntry("tag <t> value not found [.'$ab'.'|']", path);
                }
            }
            else
            {
                res = false;
                if (rep != null) rep.addEntry("tag prop <t> is missing [.'$ab'.'|']", path);
            }
        }
        else
        {
            if (rep != null) rep.addEntry("value is not an object [.'$ab'.'|']", path);
        }
        return res;
    }

    // object .'$cd'.'|'.0
    public boolean _jm_obj_4(Object val, Path path, Report rep)
    {
        if (! json.isObject(val))
        {
            if (rep != null) rep.addEntry("not an object [.'$cd'.'|'.0]", path);
            return false;
        }
        boolean res;
        long must_count = 0;
        Iterator<String> prop_loop = json.objectIterator(val);
        while (prop_loop.hasNext())
        {
            String prop = prop_loop.next();
            Object pval = json.objectValue(val, prop);
            Path lpath_4 = new Path(prop, path);
            if (prop.compareTo("t") == 0)
            {
                // handle must t property
                must_count += 1;
                // .'$cd'.'|'.0.t
                res = json.isString(pval) && json.asString(pval).compareTo("c") == 0;
                if (! res)
                {
                    if (rep != null) rep.addEntry("unexpected c [.'$cd'.'|'.0.t]", (path != null ? lpath_4 : null));
                    if (rep != null) rep.addEntry("invalid mandatory prop value [.'$cd'.'|'.0.t]", (path != null ? lpath_4 : null));
                    return false;
                }
            }
            else if (prop.compareTo("c") == 0)
            {
                // handle must c property
                must_count += 1;
                // .'$cd'.'|'.0.c
                res = json.isInteger(pval) && json.asLong(pval) >= 1;
                if (! res)
                {
                    if (rep != null) rep.addEntry("not a 1 strict int [.'$cd'.'|'.0.c]", (path != null ? lpath_4 : null));
                    if (rep != null) rep.addEntry("invalid mandatory prop value [.'$cd'.'|'.0.c]", (path != null ? lpath_4 : null));
                    return false;
                }
            }
            else
            {
                if (rep != null) rep.addEntry("unexpected prop [.'$cd'.'|'.0]", (path != null ? lpath_4 : null));
                return false;
            }
        }
        if (must_count != 2)
        {
            if (rep != null)
            {
                if (! json.objectHasProp(val, "c"))
                {
                    if (rep != null) rep.addEntry("missing mandatory prop <c> [.'$cd'.'|'.0]", path);
                }
                if (! json.objectHasProp(val, "t"))
                {
                    if (rep != null) rep.addEntry("missing mandatory prop <t> [.'$cd'.'|'.0]", path);
                }
            }
            return false;
        }
        return true;
    }

    // object .'$cd'.'|'.1
    public boolean _jm_obj_5(Object val, Path path, Report rep)
    {
        if (! json.isObject(val))
        {
            if (rep != null) rep.addEntry("not an object [.'$cd'.'|'.1]", path);
            return false;
        }
        boolean res;
        long must_count = 0;
        Iterator<String> prop_loop = json.objectIterator(val);
        while (prop_loop.hasNext())
        {
            String prop = prop_loop.next();
            Object pval = json.objectValue(val, prop);
            Path lpath_5 = new Path(prop, path);
            if (prop.compareTo("t") == 0)
            {
                // handle must t property
                must_count += 1;
                // .'$cd'.'|'.1.t
                res = json.isString(pval) && json.asString(pval).compareTo("d") == 0;
                if (! res)
                {
                    if (rep != null) rep.addEntry("unexpected d [.'$cd'.'|'.1.t]", (path != null ? lpath_5 : null));
                    if (rep != null) rep.addEntry("invalid mandatory prop value [.'$cd'.'|'.1.t]", (path != null ? lpath_5 : null));
                    return false;
                }
            }
            else if (prop.compareTo("d") == 0)
            {
                // handle must d property
                must_count += 1;
                // .'$cd'.'|'.1.d
                res = json.isInteger(pval) && json.asLong(pval) >= 1;
                if (! res)
                {
                    if (rep != null) rep.addEntry("not a 1 strict int [.'$cd'.'|'.1.d]", (path != null ? lpath_5 : null));
                    if (rep != null) rep.addEntry("invalid mandatory prop value [.'$cd'.'|'.1.d]", (path != null ? lpath_5 : null));
                    return false;
                }
            }
            else
            {
                if (rep != null) rep.addEntry("unexpected prop [.'$cd'.'|'.1]", (path != null ? lpath_5 : null));
                return false;
            }
        }
        if (must_count != 2)
        {
            if (rep != null)
            {
                if (! json.objectHasProp(val, "d"))
                {
                    if (rep != null) rep.addEntry("missing mandatory prop <d> [.'$cd'.'|'.1]", path);
                }
                if (! json.objectHasProp(val, "t"))
                {
                    if (rep != null) rep.addEntry("missing mandatory prop <t> [.'$cd'.'|'.1]", path);
                }
            }
            return false;
        }
        return true;
    }

    // object .'$cd'.'|'.2
    public boolean _jm_obj_6(Object val, Path path, Report rep)
    {
        if (! json.isObject(val))
        {
            if (rep != null) rep.addEntry("not an object [.'$cd'.'|'.2]", path);
            return false;
        }
        boolean res;
        long must_count = 0;
        Iterator<String> prop_loop = json.objectIterator(val);
        while (prop_loop.hasNext())
        {
            String prop = prop_loop.next();
            Object pval = json.objectValue(val, prop);
            Path lpath_6 = new Path(prop, path);
            if (prop.compareTo("t") == 0)
            {
                // handle must t property
                must_count += 1;
                // .'$cd'.'|'.2.t
                res = json.isString(pval) && json.asString(pval).compareTo("a") == 0;
                if (! res)
                {
                    if (rep != null) rep.addEntry("unexpected a [.'$cd'.'|'.2.t]", (path != null ? lpath_6 : null));
                    if (rep != null) rep.addEntry("invalid mandatory prop value [.'$cd'.'|'.2.t]", (path != null ? lpath_6 : null));
                    return false;
                }
            }
            else if (prop.compareTo("a") == 0)
            {
                // handle must a property
                must_count += 1;
                // .'$cd'.'|'.2.a
                res = json.isInteger(pval) && json.asLong(pval) >= 1;
                if (! res)
                {
                    if (rep != null) rep.addEntry("not a 1 strict int [.'$cd'.'|'.2.a]", (path != null ? lpath_6 : null));
                    if (rep != null) rep.addEntry("invalid mandatory prop value [.'$cd'.'|'.2.a]", (path != null ? lpath_6 : null));
                    return false;
                }
            }
            else
            {
                if (rep != null) rep.addEntry("unexpected prop [.'$cd'.'|'.2]", (path != null ? lpath_6 : null));
                return false;
            }
        }
        if (must_count != 2)
        {
            if (rep != null)
            {
                if (! json.objectHasProp(val, "a"))
                {
                    if (rep != null) rep.addEntry("missing mandatory prop <a> [.'$cd'.'|'.2]", path);
                }
                if (! json.objectHasProp(val, "t"))
                {
                    if (rep != null) rep.addEntry("missing mandatory prop <t> [.'$cd'.'|'.2]", path);
                }
            }
            return false;
        }
        return true;
    }

    // object .'$cd'.'|'.3
    public boolean _jm_obj_7(Object val, Path path, Report rep)
    {
        if (! json.isObject(val))
        {
            if (rep != null) rep.addEntry("not an object [.'$cd'.'|'.3]", path);
            return false;
        }
        boolean res;
        long must_count = 0;
        Iterator<String> prop_loop = json.objectIterator(val);
        while (prop_loop.hasNext())
        {
            String prop = prop_loop.next();
            Object pval = json.objectValue(val, prop);
            Path lpath_7 = new Path(prop, path);
            if (prop.compareTo("t") == 0)
            {
                // handle must t property
                must_count += 1;
                // .'$cd'.'|'.3.t
                res = json.isString(pval) && json.asString(pval).compareTo("b") == 0;
                if (! res)
                {
                    if (rep != null) rep.addEntry("unexpected b [.'$cd'.'|'.3.t]", (path != null ? lpath_7 : null));
                    if (rep != null) rep.addEntry("invalid mandatory prop value [.'$cd'.'|'.3.t]", (path != null ? lpath_7 : null));
                    return false;
                }
            }
            else if (prop.compareTo("b") == 0)
            {
                // handle must b property
                must_count += 1;
                // .'$cd'.'|'.3.b
                res = json.isInteger(pval) && json.asLong(pval) >= 1;
                if (! res)
                {
                    if (rep != null) rep.addEntry("not a 1 strict int [.'$cd'.'|'.3.b]", (path != null ? lpath_7 : null));
                    if (rep != null) rep.addEntry("invalid mandatory prop value [.'$cd'.'|'.3.b]", (path != null ? lpath_7 : null));
                    return false;
                }
            }
            else
            {
                if (rep != null) rep.addEntry("unexpected prop [.'$cd'.'|'.3]", (path != null ? lpath_7 : null));
                return false;
            }
        }
        if (must_count != 2)
        {
            if (rep != null)
            {
                if (! json.objectHasProp(val, "b"))
                {
                    if (rep != null) rep.addEntry("missing mandatory prop <b> [.'$cd'.'|'.3]", path);
                }
                if (! json.objectHasProp(val, "t"))
                {
                    if (rep != null) rep.addEntry("missing mandatory prop <t> [.'$cd'.'|'.3]", path);
                }
            }
            return false;
        }
        return true;
    }


    // check $cd (.'$cd')
    public boolean json_model_3(Object val, Path path, Report rep)
    {
        boolean res;
        // .'$cd'
        boolean iso_1 = json.isObject(val);
        res = iso_1;
        if (res)
        {
            if (json.objectHasProp(val, "t"))
            {
                Object tag_1 = json.objectValue(val, "t");
                Checker fun_1 = _jm_map_1_cmap.get(tag_1);
                if (fun_1 != null)
                {
                    res = fun_1.call(val, path, rep);
                }
                else
                {
                    res = false;
                    if (rep != null) rep.addEntry("tag <t> value not found [.'$cd'.'|']", path);
                }
            }
            else
            {
                res = false;
                if (rep != null) rep.addEntry("tag prop <t> is missing [.'$cd'.'|']", path);
            }
        }
        else
        {
            if (rep != null) rep.addEntry("value is not an object [.'$cd'.'|']", path);
        }
        return res;
    }

    // check $ (.)
    public boolean json_model_1(Object val, Path path, Report rep)
    {
        boolean res;
        // .
        res = json_model_3(val, path, rep);
        if (! res)
        {
            if (rep != null) rep.addEntry("unexpected $cd [.]", path);
        }
        return res;
    }


    public void init(JSON json)
    {
        if (!initialized)
        {
            try {
            _jm_map_0_cmap = new HashMap<Object, Checker>();
            _jm_map_0_cmap.put(json.safeJSON("\"a\""), new Checker() { public boolean call(Object o, Path p, Report r) { return _jm_obj_0(o, p, r);} });
            _jm_map_0_cmap.put(json.safeJSON("\"b\""), new Checker() { public boolean call(Object o, Path p, Report r) { return _jm_obj_1(o, p, r);} });
            _jm_map_0_cmap.put(json.safeJSON("\"c\""), new Checker() { public boolean call(Object o, Path p, Report r) { return _jm_obj_2(o, p, r);} });
            _jm_map_0_cmap.put(json.safeJSON("\"d\""), new Checker() { public boolean call(Object o, Path p, Report r) { return _jm_obj_3(o, p, r);} });
            _jm_map_1_cmap = new HashMap<Object, Checker>();
            _jm_map_1_cmap.put(json.safeJSON("\"c\""), new Checker() { public boolean call(Object o, Path p, Report r) { return _jm_obj_4(o, p, r);} });
            _jm_map_1_cmap.put(json.safeJSON("\"d\""), new Checker() { public boolean call(Object o, Path p, Report r) { return _jm_obj_5(o, p, r);} });
            _jm_map_1_cmap.put(json.safeJSON("\"a\""), new Checker() { public boolean call(Object o, Path p, Report r) { return _jm_obj_6(o, p, r);} });
            _jm_map_1_cmap.put(json.safeJSON("\"b\""), new Checker() { public boolean call(Object o, Path p, Report r) { return _jm_obj_7(o, p, r);} });
            inline_or_rec_2_map_pmap = new HashMap<String, Checker>();
            inline_or_rec_2_map_pmap.put("", new Checker() { public boolean call(Object o, Path p, Report r) { return json_model_3(o, p, r);} });
            inline_or_rec_2_map_pmap.put("ab", new Checker() { public boolean call(Object o, Path p, Report r) { return json_model_2(o, p, r);} });
            inline_or_rec_2_map_pmap.put("cd", new Checker() { public boolean call(Object o, Path p, Report r) { return json_model_3(o, p, r);} });
                super.init(json);
            }
            catch (Exception e) {
                throw new Error("cannot initialized model checker: " + e);
            }
        }
    }

    public void free()
    {
        if (initialized)
        {
            super.free();
            _jm_map_0_cmap = null;
            _jm_map_1_cmap = null;
            inline_or_rec_2_map_pmap = null;
        }
    }

    public Checker get(String name)
    {
        return inline_or_rec_2_map_pmap.get(name);
    }

    public Set<String> models()
    {
        return inline_or_rec_2_map_pmap.keySet();
    }

    static public void main(String[] args) throws Exception
    {
        ModelChecker checker = new inline_or_rec_2();
        Main.main("inline_or_rec_2", checker, VERSION, args);
    }
}
