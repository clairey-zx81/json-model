
### Cases Statistics

For each case and a summary: the schema and model sizes (number of lines, model size 1
denotes a reference to a predefined model), number/min/average/max size of test values.

RLRRRRRR
,,1241,733,35407,12,1937,11487058
1,ansible-meta,1621,1,333,20,311,3423
2,aws-cdk,38,22,483,21,1144,110476
3,babelrc,200,178,794,12,139,1486
4,clang-format,1416,1266,133,19,335,6430
5,cmake-presets,2087,1677,967,52,2720,60771
6,code-climate,227,82,2484,20,281,35254
7,cql2,1167,665,109,43,124,616
8,cspell,1992,1324,981,13,816,21779
9,cypress,383,1,981,14,400,150043
10,deno,537,404,987,15,1017,133253
11,dependabot,282,179,967,110,402,61985
12,draft-04,221,1,563,154,12630,83097
13,fabric-mod,344,263,911,69,690,12849
14,geojson,1491,1,500,113,52418,11487058
16,helm-chart-lock,51,30,3888,96,341,3674
17,importmap,26,13,964,15,629,42753
18,jasmine,109,72,980,35,132,528
19,jsconfig,1119,837,981,14,176,4655
20,jshintrc,416,331,966,13,428,2402
21,krakend,8139,5408,47,247,2430,15326
22,lazygit,2017,1,280,23,275,5604
23,lerna,138,113,985,20,171,2938
24,nest-cli,523,400,1025,18,289,3594
25,omnisharp,506,381,987,17,594,16845
26,openapi,1419,1082,107,1860,165481,1218044
27,pre-commit-hooks,435,398,985,84,548,30132
28,pulumi,321,237,3807,33,250,11154
29,semantic-release,128,70,794,13,459,6210
30,stale,120,82,961,20,465,7728
31,stylecop,293,200,983,16,566,7843
32,tmuxinator,162,139,382,70,627,10581
33,ui5,3004,737,942,72,486,10321
34,ui5-manifest,12310,9079,611,423,2355,11606
36,vercel,1194,893,710,14,405,62110
37,yamllint,795,20,984,15,350,3605

### Tool Performance Per Case

For each case: number and name, number of test cases, best cumulated median performance (µs),
performance slowdown ratio for blaze and jmc variants (java 1 is gson, 2 is jackson,
3 is jsonp/johnzon), the lower the better, **1.0** is best.

RLRRRRRRRRR
1,ansible-meta,333,235.3,1.40,1.00,2.74,2.76,4.19,3.97,11.67
2,aws-cdk,483,55.4,1.00,1.07,1.13,1.51,1.46,3.48,6.95
3,babelrc,794,57.5,2.25,1.00,5.41,2.82,11.19,4.64,14.30
4,clang-format,133,65.6,1.78,1.00,3.62,4.10,5.94,6.61,5.50
5,cmake-presets,967,4768.5,1.00,1.22,3.70,2.28,4.76,2.49,21.52
6,code-climate,2484,191.9,1.00,1.25,2.12,2.01,2.31,2.77,7.75
7,cql2,109,50.8,3.67,1.00,2.05,6.35,6.74,8.83,16.75
8,cspell,981,1014.0,1.00,1.02,1.17,0.00,0.00,0.00,5.27
9,cypress,981,136.9,1.15,1.00,3.76,2.13,5.41,2.67,6.84
10,deno,987,332.6,1.71,1.00,3.73,3.86,6.10,4.29,36.95
11,dependabot,967,414.6,1.27,1.00,2.75,2.39,4.50,3.74,9.24
12,draft-04,563,7719.9,1.04,1.00,3.28,1.57,3.67,2.05,8.52
13,fabric-mod,911,459.8,3.20,1.00,4.88,3.49,7.27,4.91,19.02
14,geojson,500,9000.2,2.86,2.76,1.00,4.30,4.45,7.30,59.76
15,gitpod,986,216.6,1.21,1.00,8.36,2.72,9.23,3.05,12.29
16,helm-chart-lock,3888,252.4,1.00,2.23,3.73,3.74,1.54,4.56,19.15
17,importmap,964,48.2,1.00,1.63,22.42,8.72,26.53,25.98,16.08
18,jasmine,980,79.8,1.74,1.00,5.54,3.38,9.26,3.91,12.34
19,jsconfig,981,397.9,1.89,1.00,2.15,2.48,3.51,3.09,28.54
20,jshintrc,966,676.9,1.54,1.00,3.09,2.05,4.05,3.54,4.88
21,krakend,47,208.5,1.59,1.00,3.37,4.02,6.36,4.76,20.08
22,lazygit,280,123.1,1.45,1.00,4.38,4.07,9.81,5.85,17.68
23,lerna,985,124.4,1.01,1.00,4.43,2.05,5.34,3.46,9.09
24,nest-cli,1025,195.3,1.00,1.16,6.50,2.26,9.55,3.30,10.95
25,omnisharp,987,399.0,1.41,1.00,3.57,2.87,4.98,3.89,6.04
26,openapi,107,557.9,40.87,1.00,2.85,2.31,3.31,3.27,12.13
27,pre-commit-hooks,985,421.1,1.24,1.00,3.83,2.67,5.80,2.98,9.04
28,pulumi,3807,368.3,1.70,1.00,5.83,2.68,8.22,2.66,9.43
29,semantic-release,794,71.0,1.49,1.00,4.93,2.67,10.42,4.59,14.33
30,stale,961,155.3,1.15,1.00,4.29,2.57,5.66,2.50,10.65
31,stylecop,983,329.1,1.57,1.00,3.94,3.23,6.23,3.54,32.90
32,tmuxinator,382,98.9,1.22,1.00,2.65,1.92,2.60,1.86,8.08
33,ui5,942,75.3,9.75,1.00,1.54,1.44,1.06,2.02,11.36
34,ui5-manifest,611,3432.2,1.38,1.00,2.11,2.42,3.59,2.56,4.82
35,unreal-engine,859,725.4,1.00,1.89,8.39,4.95,12.98,6.12,31.07
36,vercel,710,310.8,1.11,1.00,3.11,1.67,5.69,2.51,8.18
37,yamllint,984,12.9,0.00,1.00,1.51,2.79,2.34,3.58,11.39

### Tool Performance Summary

For each tool: number of best performance, number of case failures,
overall validation time per kB, max/geometrical average/min performance ratio.

LRRRRRRR
Best,8,28,1,0,0,0,0
KO,1,0,0,1,1,1,0
"µs/kB",1.19,0.78,1.42,1.42,2.32,2.04,12.83
max,40.87,2.76,22.42,8.72,26.53,25.98,59.76
gav,1.63,1.10,3.41,2.80,5.15,3.82,12.27
min,1.00,1.00,1.00,1.44,1.06,1.86,4.82

### Result Success

For each tool and cases with a partial success rate, percent of test cases validated.

RLRRRRRRR
1,ansible-meta,100,99,99,99,99,99,99
8,cspell,100,100,100,0,0,0,100
9,cypress,100,99,99,99,99,99,99
14,geojson,100,100,100,99,100,100,100
37,yamllint,3,98,98,98,98,98,98

### Compilation Per Case

For each tool and case, compilation time in second.

RLRRRRR
1,ansible-meta,0.5,6.2,3.0,6.3,3.9
2,aws-cdk,0.5,2.6,2.2,2.8,2.5
3,babelrc,0.4,2.7,2.1,3.3,2.6
4,clang-format,0.6,3.3,2.1,3.7,2.3
5,cmake-presets,2.1,3.9,2.5,4.4,2.7
6,code-climate,0.4,2.5,2.1,3.2,2.6
7,cql2,10.9,3.2,2.2,3.8,2.5
8,cspell,1.2,3.5,2.1,3.5,2.5
9,cypress,0.4,5.3,2.6,5.7,4.6
10,deno,0.4,3.0,2.2,3.5,2.5
11,dependabot,0.4,2.5,2.0,3.2,2.5
12,draft-04,0.4,4.8,2.6,5.4,3.7
13,fabric-mod,0.5,2.5,1.8,3.0,2.2
14,geojson,0.4,4.8,2.1,5.0,2.7
15,gitpod,0.4,2.6,1.9,3.1,2.5
16,helm-chart-lock,0.3,2.4,1.8,2.7,2.3
17,importmap,0.3,2.4,2.0,2.8,2.3
18,jasmine,0.3,2.6,2.0,3.3,2.4
19,jsconfig,0.4,3.3,2.1,3.7,2.7
20,jshintrc,0.4,2.8,1.8,3.3,2.4
21,krakend,2.1,6.9,2.7,5.4,2.9
22,lazygit,0.5,5.1,2.7,5.3,2.8
23,lerna,0.4,2.5,1.8,2.7,2.4
24,nest-cli,0.4,2.8,1.9,3.0,2.3
25,omnisharp,0.4,2.8,1.8,3.0,2.3
26,openapi,37.2,3.2,2.0,3.6,2.3
27,pre-commit-hooks,0.5,2.9,2.0,3.1,2.0
28,pulumi,0.5,2.7,2.0,3.0,2.4
29,semantic-release,0.4,2.4,1.8,3.1,2.3
30,stale,0.5,2.5,2.0,3.2,2.3
31,stylecop,0.5,2.4,1.9,3.1,2.1
32,tmuxinator,0.5,2.6,1.9,3.1,2.2
33,ui5,0.9,3.6,2.1,3.8,2.3
34,ui5-manifest,85.0,10.1,3.7,7.2,3.7
35,unreal-engine,0.4,3.1,2.0,3.0,2.3
36,vercel,0.5,3.5,2.2,3.6,2.6
37,yamllint,0.4,2.7,2.3,2.8,2.3

### Compilation Summary

For each tool, average/max/min compilation time in seconds.

LRRRRR
"avg compile time (s)",4.1,3.5,2.2,3.7,2.6
"max compile time (s)",85.0,10.1,3.7,7.2,4.6
"min compile time (s)",0.3,2.4,1.8,2.7,2.0
