{
  "#": "A model to illustrate most design features",
  "#.~": "use ~ to provide the meta model for this model",
  "~": "https://json-model.org/models/json-model",
  "$": {
    "#": "a few definitions",
    "a": "_A",
    "b": "$a",
    "ab": { "a": 0, "b": 0 },
    "cd": { "c": 0, "d": 0 }
  },
  "?predefs": {
    "#": "predefined models",
    "#.str": "constrainted strings",
    "?DATE": "$DATE",
    "?DATETIME": "$DATETIME",
    "?TIME": "$TIME",
    "?JSON": "$JSON",
    "?REGEX": "$REGEX",
    "?EXREG": "$EXREG",
    "?UUID": "$UUID",
    "?URL": "$URL",
    "?URI": "$URI",
    "?EMAIL": "$EMAIL",
    "#.basics": "json types",
    "?NULL": "$NULL",
    "?BOOL": "$BOOL",
    "?BOOLEAN": "$BOOLEAN",
    "?INT": "$INT",
    "?INTEGER": "$INTEGER",
    "?I32": "$I32",
    "?I64": "$I64",
    "?U32": "$U32",
    "?U64": "$U64",
    "?FLOAT": "$FLOAT",
    "?F32": "$F32",
    "?F64": "$F64",
    "?NUMBER": "$NUMBER",
    "?STRING": "$STRING",
    "#.misc": "what about $ARRAY, $OBJECT for consistency?",
    "?ANY": "$ANY",
    "?NONE": "$NONE"
  },
  "#.b": "json scalar types",
  "?null": {
    "#": "null: inference, predefs, constants",
    "?n0": null,
    "?n1": "$NULL",
    "?n2": "=null"
  },
  "?bool": {
    "#": "booleans: inference, predefs, constants, enum",
    "?b0": true,
    "?b1": "$BOOL",
    "?b2": "$BOOLEAN",
    "?b3": "=true",
    "?b4": "=false",
    "?b5": { "|": [ "=false", "=true" ] }
  },
  "?int": {
    "#": "integers: inference, predefs, constants",
    "?i0": 0,
    "?i1": 1,
    "?i2": -1,
    "?i3": "$INT",
    "?i4": "$INTEGER",
    "?i5": "$I32",
    "?i6": "$I64",
    "?i7": "$U32",
    "?i8": "$U64",
    "?i9": "=42",
    "?ia": "=-42"
  },
  "?float": {
    "#": "floats: inference, predefs, constants",
    "?f0": 0.0,
    "?f1": 1.0,
    "?f2": -1.0,
    "?f3": "$FLOAT",
    "?f4": "$F32",
    "?f5": "$F64",
    "?f6": "=3.1415927",
    "?f7": "=1.0E100",
    "?f8": "=-42.1"
  },
  "?string": {
    "#": "strings: inference, predef, constants, regex",
    "?s0": "",
    "?s1": "$STRING",
    "?s2": "Susie",
    "?s3": "_Calvin",
    "?s4": "/^(Calvin|Susie)$/"
  },
  "#.cont": "container types",
  "?array": {
    "#": "example arrays",
    "?a0": [ 0 ],
    "?a1": [ "" ],
    "?a2": [ "$DATE" ],
    "?a3": [ "# commented array", true ],
    "?a4": [ "$ANY" ]
  },
  "?tuple": {
    "#": "tuple items have a type",
    "#.0": "empty tuple",
    "?t0": [],
    "#.1": "one item tuple",
    "?t1": { "@": [ 0 ], "=": 1 },
    "#.2": "two items tuple",
    "?t2": [ 0, 0 ],
    "#.3": "three items tuple",
    "?t3": [ true, 0, "" ],
    "#.4": "open ended tuple",
    "?t4": { "@": [ "", 0 ], ">=": 2 }
  },
  "?object": {
    "#": "object map property names to values",
    "#.0": "empty object",
    "?o0": {},
    "#.1": "mandatory properties",
    "?o1": { "a": 0, "_b": 0, "!c": 0 },
    "#.2": "optional properties: constants, regex, reference, whatever",
    "?o2": { "?a": 0 },
    "?o3": { "/^a/": 0 },
    "?o4": { "$DATE": "" },
    "?o5": { "": 0 },
    "#.x": "any object",
    "?o6": { "": "$ANY" }
  },
  "#.cons": "constructed models",
  "?enum": {
    "#": "an enumeration only contains constants",
    "?e0": { "|": [ "=true", "=false" ] },
    "?e1": { "|": [ "=200", "=201", "=204" ] },
    "?e2": { "|": [ "_Susie", "_Calvin", "_Hobbes" ] },
    "#.3": "mixed type enumeration",
    "?e3": { "|": [ "_Susie", "=42", "=true", "=null" ] }
  },
  "?or": {
    "#": "soft alternative, first match",
    "?o0": { "|": [ true, -1 ] },
    "?o1": { "|": [ "$DATE", "$TIME" ] },
    "?o2": { "|": [ 0, "$UUID", [ "$ANY" ], {"": "$ANY"} ] }
  },
  "?xor": {
    "#": "hard alternative, only one must match",
    "?x0": { "^": [ true, -1 ] },
    "?x1": { "^": [ "/^a/", "/z$/" ] },
    "#.not": "not this model",
    "?x2": { "^": [ -1, 0 ] },
    "?x3": { "^": [ "$ANY", 0 ] }
  },
  "?and": {
    "#": "conjunction, all must match",
    "#.0": "a valid date in 2020",
    "?a0": { "&": [ "$DATE", "/^2020-/" ] }
  },
  "?merge": {
    "#": "merge object properties",
    "?m0": { "+": [ {"a": 0}, {"?b": 0}, {"?a": 0} ] },
    "#.1": "merge is distributive over or/xor",
    "?m1": { "+": [ {"a": 0}, { "|": [ {"b": 1}, {"c": 1} ] } ] },
    "?m2": { "+": [ {"a": 0}, { "^": [ {"b": 1}, {"c": 1} ] } ] },
    "?m3": { "+": [ { "|": [ {"a": 0}, {"b": 0} ] }, { "^": [ {"c": 1}, {"d": 1} ] } ] },
    "#.4": "also with references",
    "?m4": { "+": [ "$ab", "$cd" ] }
  },
  "#.constraints": "constrained on types",
  "?constraints": {
    "#.i": "integer constraints apply to integers, numbers, strings, arrays and objects",
    "?cii0": { "@": 0, "=": 10 },
    "?cii1": { "@": 0, "!=": 10, ">=": 8, "<=": 12 },
    "?cii2": { "@": 0, ">": 7, "<": 10 },
    "?cin0": { "@": 0.0, "=": 10 },
    "?cin1": { "@": 0.0, "!=": 10, ">=": 8, "<=": 12 },
    "?cin2": { "@": 0.0, ">": 7, "<": 10 },
    "?cis0": { "@": "", "=": 10 },
    "?cis1": { "@": "", "!=": 10, ">=": 8, "<=": 12 },
    "?cis2": { "@": "", ">": 7, "<": 10 },
    "?cia0": { "@": [ 0 ], "=": 3 },
    "?cia1": { "@": [ 0 ], "!=": 4, ">=": 2, "<=": 5 },
    "?cia2": { "@": [ 0 ], ">": 2, "<": 5 },
    "?cio0": { "@": {"": "$ANY"}, "=": 2 },
    "?cio1": { "@": {"": "$ANY"}, "!=": 2, ">=": 1, "<=": 3 },
    "?cio2": { "@": {"": "$ANY"}, ">": 2, "<": 5 },
    "#.n": "number constraints also apply to ints, numbers, strings, arrays and objects",
    "?cni0": { "@": 0, "=": 42.0 },
    "?cni1": { "@": 0, "!=": 42.0, "<=": 99.9, ">=": 0.1 },
    "?cni2": { "@": 0, ">": 41.0, "<": 43.0 },
    "?cnn0": { "@": 0.0, "=": 42.1 },
    "?cnn1": { "@": 0.0, "!=": 42.5, "<=": 43.0, ">=": 42.0 },
    "?cnn2": { "@": 0.0, ">": 42.0, "<": 43.0 },
    "#.s": "string constraints apply to strings only",
    "?css0": { "@": "", "=": "Susie" },
    "?css1": { "@": "", "!=": "Hobbes", ">=": "A", "<=": "Z" },
    "?css2": { "@": "", ">": "A", "<": "Z" },
    "#.!": "unique applies to arrays only",
    "?cua0": { "@": [ "$ANY" ], "!": true }
  }
}
